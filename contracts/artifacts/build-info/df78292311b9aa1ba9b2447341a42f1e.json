{
	"id": "df78292311b9aa1ba9b2447341a42f1e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PepoStablecoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/ownership/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ncontract PepoStablecoin is ERC20, ERC20Permit, Ownable{\n    struct deptCollateralRatio {\n        uint dept;\n        uint collateral;\n    }\n    mapping(address => deptCollateralRatio) deptCollateralRatios;\n    AggregatorV3Interface internal ethPriceFeed;\n\n    event Borrow(address indexed owner, uint amount, bool isUSDP);\n    event Liquidate(address indexed owner, uint amount, bool isETH);\n\n    constructor() ERC20(\"Pepo Stablecoin\", \"USDP\") ERC20Permit(\"USDP\") Ownable(_msgSender()) {\n        ethPriceFeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);\n    }\n\n    function getEthPrice() public view returns (uint) {\n        (, int price, , ,) = ethPriceFeed.latestRoundData();\n        return uint(price);\n    }\n\n    function borrow(uint ratio) public payable{\n        require(ratio <= 75, \"Ratio must less than equal 75%\");\n\n        uint collateral =  getEthPrice() * msg.value;\n        uint dept = collateral * ratio;\n        deptCollateralRatios[msg.sender] = deptCollateralRatio(\n            dept,\n            collateral\n        );\n\n        _mint(_msgSender(), dept);\n\n        emit Borrow(_msgSender(), dept, true);\n    }\n\n    function liquidate(address addr) public onlyOwner {\n        require(deptCollateralRatios[addr].dept / (getEthPrice() * deptCollateralRatios[addr].collateral) * 100 >= 85, \"currently dept to correteral ratio less than 85%\");\n\n        // TODO: sell ETH\n        // ...\n        \n        uint liquidateEthAmount = deptCollateralRatios[addr].collateral;\n        deptCollateralRatios[addr] = deptCollateralRatio(0,0);\n\n        emit Borrow(_msgSender(), liquidateEthAmount, true);\n    }\n    \n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/ownership/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Nonces.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/ownership/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/ownership/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xe7026fe6394bd39f8bd184b928859c06793f8b31532ab3301d297998c4d052e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e249367ad0e341fa395b39e2e6ba57194fb27611f7a7dc16c67c447cdf6774c\",\"dweb:/ipfs/QmU9iz1TysJTpmfJrRQu2vFjFBKxeBC9ZmmDnaEhVpzEo9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 216,
								"contract": "@openzeppelin/contracts/ownership/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 386,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 388,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 390,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 386,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 388,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 390,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2229,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2231,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1208,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Nonces.sol": {
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1208,
								"contract": "@openzeppelin/contracts/utils/Nonces.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122035aa0427edae1c4f314203b05820aacd48de4b61188a868263f9c92e8fb9fde264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122035aa0427edae1c4f314203b05820aacd48de4b61188a868263f9c92e8fb9fde264736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xAA DIV 0x27 0xED 0xAE SHR 0x4F BALANCE TIMESTAMP SUB 0xB0 PC KECCAK256 0xAA 0xCD BASEFEE 0xDE 0x4B PUSH2 0x188A DUP7 DUP3 PUSH4 0xF9C92E8F 0xB9 REVERT 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1255:3053:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122035aa0427edae1c4f314203b05820aacd48de4b61188a868263f9c92e8fb9fde264736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xAA DIV 0x27 0xED 0xAE SHR 0x4F BALANCE TIMESTAMP SUB 0xB0 PC KECCAK256 0xAA 0xCD BASEFEE 0xDE 0x4B PUSH2 0x188A DUP7 DUP3 PUSH4 0xF9C92E8F 0xB9 REVERT 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1255:3053:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122035aa0427edae1c4f314203b05820aacd48de4b61188a868263f9c92e8fb9fde264736f6c63430008160033",
									".code": [
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/ownership/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/PepoStablecoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220234f057a7d9e6d8649f3568ab0e58f72080e771e988bf5580cbdb98ac588ec1b64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220234f057a7d9e6d8649f3568ab0e58f72080e771e988bf5580cbdb98ac588ec1b64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x4F SDIV PUSH27 0x7D9E6D8649F3568AB0E58F72080E771E988BF5580CBDB98AC588EC SHL PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1245:2685:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220234f057a7d9e6d8649f3568ab0e58f72080e771e988bf5580cbdb98ac588ec1b64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x4F SDIV PUSH27 0x7D9E6D8649F3568AB0E58F72080E771E988BF5580CBDB98AC588EC SHL PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1245:2685:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220234f057a7d9e6d8649f3568ab0e58f72080e771e988bf5580cbdb98ac588ec1b64736f6c63430008160033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/ownership/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/PepoStablecoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/ownership/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/PepoStablecoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220999867a3e717d665115950a00fd366e57cfb817888fbd774d18052318887fcbb64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220999867a3e717d665115950a00fd366e57cfb817888fbd774d18052318887fcbb64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 SWAP9 PUSH8 0xA3E717D665115950 LOG0 0xF 0xD3 PUSH7 0xE57CFB817888FB 0xD7 PUSH21 0xD18052318887FCBB64736F6C634300081600330000 ",
							"sourceMap": "344:7386:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220999867a3e717d665115950a00fd366e57cfb817888fbd774d18052318887fcbb64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 SWAP9 PUSH8 0xA3E717D665115950 LOG0 0xF 0xD3 PUSH7 0xE57CFB817888FB 0xD7 PUSH21 0xD18052318887FCBB64736F6C634300081600330000 ",
							"sourceMap": "344:7386:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220999867a3e717d665115950a00fd366e57cfb817888fbd774d18052318887fcbb64736f6c63430008160033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/ownership/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/PepoStablecoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2229,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 2231,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047bfc7672f5a75689578304a270281d0b4d26df34951a18aa34efeb72802872764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047bfc7672f5a75689578304a270281d0b4d26df34951a18aa34efeb72802872764736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xBF 0xC7 PUSH8 0x2F5A75689578304A 0x27 MUL DUP2 0xD0 0xB4 0xD2 PUSH14 0xF34951A18AA34EFEB72802872764 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "521:3235:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047bfc7672f5a75689578304a270281d0b4d26df34951a18aa34efeb72802872764736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xBF 0xC7 PUSH8 0x2F5A75689578304A 0x27 MUL DUP2 0xD0 0xB4 0xD2 PUSH14 0xF34951A18AA34EFEB72802872764 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "521:3235:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047bfc7672f5a75689578304a270281d0b4d26df34951a18aa34efeb72802872764736f6c63430008160033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/ownership/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/PepoStablecoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/ownership/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/PepoStablecoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/ownership/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/PepoStablecoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PepoStablecoin.sol": {
				"PepoStablecoin": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isUSDP",
									"type": "bool"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isETH",
									"type": "bool"
								}
							],
							"name": "Liquidate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ratio",
									"type": "uint256"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEthPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "liquidate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PepoStablecoin.sol\":321:1960  contract PepoStablecoin is ERC20, ERC20Permit, Ownable{... */\n  mstore(0x40, 0x0160)\n    /* \"contracts/PepoStablecoin.sol\":717:903  constructor() ERC20(\"Pepo Stablecoin\", \"USDP\") ERC20Permit(\"USDP\") Ownable(_msgSender()) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/PepoStablecoin.sol\":792:804  _msgSender() */\n  tag_3\n    /* \"contracts/PepoStablecoin.sol\":792:802  _msgSender */\n  shl(0x20, tag_4)\n    /* \"contracts/PepoStablecoin.sol\":792:804  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_3:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1574:1626  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5553445000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1613:1617  name */\n  dup1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x5065706f20537461626c65636f696e0000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5553445000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  tag_14\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3432:3445  _nameFallback */\n  0x05\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3405  name */\n  dup4\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3431  name.toShortStringWithFallback */\n  shl(0x20, tag_15)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3393:3446  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  tag_16\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3501:3517  _versionFallback */\n  0x06\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3474  version */\n  dup3\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3500  version.toShortStringWithFallback */\n  shl(0x20, tag_15)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3456:3518  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3558:3562  name */\n  dup2\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3542:3564  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3528:3564  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3607:3614  version */\n  dup1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3591:3616  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3574:3616  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3644:3657  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3627:3657  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  tag_17\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3713  _buildDomainSeparator */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3667:3715  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3747:3751  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3725:3752  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1574:1626  constructor(string memory name) EIP712(name, \"1\") {} */\n  pop\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_24\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_25)\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/PepoStablecoin.sol\":853:895  0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419 */\n  0x5f4ec3df9cbd43714fe2740f5e3616155c5b8419\n    /* \"contracts/PepoStablecoin.sol\":816:828  ethPriceFeed */\n  0x0a\n  0x00\n    /* \"contracts/PepoStablecoin.sol\":816:896  ethPriceFeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PepoStablecoin.sol\":321:1960  contract PepoStablecoin is ERC20, ERC20Permit, Ownable{... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_4:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3010:3021  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3059:3061  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3043:3048  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3056  bytes(value).length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3061  bytes(value).length < 32 */\n  lt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  tag_31\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3098:3103  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3097  toShortString */\n  shl(0x20, tag_32)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3077:3104  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3176:3181  value */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  tag_34\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3161:3166  store */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3160  StorageSlot.getStringSlot */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3173  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3181  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_36\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_36:\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3219:3236  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3195:3237  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_29:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n  mload(0xe0)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n  mload(0x0100)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_38\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_25:\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3004:3010  _owner */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3020:3026  _owner */\n  0x08\n  0x00\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1773:1784  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1813  bytes memory bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1822:1825  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1826  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1854:1856  31 */\n  0x1f\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1844  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1851  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1856  bstr.length > 31 */\n  gt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\n  iszero\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1893:1896  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1879:1897  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1978  bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1985  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1965:1969  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_45\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1971  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1985  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1941:1986  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1917:1987  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3203:3223  StringSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3311:3321  store.slot */\n  dup2\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3301:3321  r.slot := store.slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_48:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_49:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_50:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_51:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_86:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_88\n  tag_50\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":714:798   */\ntag_87:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_52:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_53:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_54:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_55:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_93\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_54\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1429:1468   */\n  tag_94\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_54\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_56:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_57:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_58:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_98\n    /* \"#utility.yul\":1818:1852   */\n  tag_99\n    /* \"#utility.yul\":1827:1851   */\n  tag_100\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_56\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1818:1852   */\n  tag_57\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1800:1853   */\n  tag_56\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_59:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_60:\n    /* \"#utility.yul\":2056:2095   */\n  tag_103\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_58\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2117:2208   */\n  tag_104\n    /* \"#utility.yul\":2166:2207   */\n  tag_105\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_59\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_55\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_61:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_62:\n    /* \"#utility.yul\":2377:2409   */\n  tag_108\n  tag_61\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2418:2483   */\n  tag_109\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_60\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_63:\n    /* \"#utility.yul\":2555:2675   */\ntag_111:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_114\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_62\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_64:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_117\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_52\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2906:2935   */\n  tag_118\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_53\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_119:\n    /* \"#utility.yul\":3133:3213   */\n  tag_120\n    /* \"#utility.yul\":3189:3211   */\n  tag_121\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_53\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_63\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_116:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_65:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_66:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_124\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_65\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_67:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_126\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_66\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_11:\n    /* \"#utility.yul\":3950:3987   */\n  tag_128\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_48\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_130\n  tag_49\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4038:4094   */\ntag_129:\n    /* \"#utility.yul\":4118:4156   */\n  tag_131\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_51\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4203:4270   */\n  tag_132\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_64\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_135:\n    /* \"#utility.yul\":5144:5211   */\n  tag_136\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_67\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_133)\n    /* \"#utility.yul\":4365:4983   */\ntag_134:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_137\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_52\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_138:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_138)\ntag_140:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_142\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_66\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_141:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_133:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_68:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_69:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_145\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_68\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_70:\n    /* \"#utility.yul\":5555:5579   */\n  tag_147\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_69\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_23:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_149\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_70\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:5897   */\ntag_71:\n    /* \"#utility.yul\":5857:5864   */\n  0x00\n    /* \"#utility.yul\":5886:5891   */\n  dup2\n    /* \"#utility.yul\":5875:5891   */\n  swap1\n  pop\n    /* \"#utility.yul\":5820:5897   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5903:6021   */\ntag_72:\n    /* \"#utility.yul\":5990:6014   */\n  tag_152\n    /* \"#utility.yul\":6008:6013   */\n  dup2\n    /* \"#utility.yul\":5990:6014   */\n  tag_71\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5985:5988   */\n  dup3\n    /* \"#utility.yul\":5978:6015   */\n  mstore\n    /* \"#utility.yul\":5903:6021   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6027:6145   */\ntag_73:\n    /* \"#utility.yul\":6114:6138   */\n  tag_154\n    /* \"#utility.yul\":6132:6137   */\n  dup2\n    /* \"#utility.yul\":6114:6138   */\n  tag_56\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6109:6112   */\n  dup3\n    /* \"#utility.yul\":6102:6139   */\n  mstore\n    /* \"#utility.yul\":6027:6145   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6151:6815   */\ntag_39:\n    /* \"#utility.yul\":6356:6360   */\n  0x00\n    /* \"#utility.yul\":6394:6397   */\n  0xa0\n    /* \"#utility.yul\":6383:6392   */\n  dup3\n    /* \"#utility.yul\":6379:6398   */\n  add\n    /* \"#utility.yul\":6371:6398   */\n  swap1\n  pop\n    /* \"#utility.yul\":6408:6479   */\n  tag_156\n    /* \"#utility.yul\":6476:6477   */\n  0x00\n    /* \"#utility.yul\":6465:6474   */\n  dup4\n    /* \"#utility.yul\":6461:6478   */\n  add\n    /* \"#utility.yul\":6452:6458   */\n  dup9\n    /* \"#utility.yul\":6408:6479   */\n  tag_72\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6489:6561   */\n  tag_157\n    /* \"#utility.yul\":6557:6559   */\n  0x20\n    /* \"#utility.yul\":6546:6555   */\n  dup4\n    /* \"#utility.yul\":6542:6560   */\n  add\n    /* \"#utility.yul\":6533:6539   */\n  dup8\n    /* \"#utility.yul\":6489:6561   */\n  tag_72\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6571:6643   */\n  tag_158\n    /* \"#utility.yul\":6639:6641   */\n  0x40\n    /* \"#utility.yul\":6628:6637   */\n  dup4\n    /* \"#utility.yul\":6624:6642   */\n  add\n    /* \"#utility.yul\":6615:6621   */\n  dup7\n    /* \"#utility.yul\":6571:6643   */\n  tag_72\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6653:6725   */\n  tag_159\n    /* \"#utility.yul\":6721:6723   */\n  0x60\n    /* \"#utility.yul\":6710:6719   */\n  dup4\n    /* \"#utility.yul\":6706:6724   */\n  add\n    /* \"#utility.yul\":6697:6703   */\n  dup6\n    /* \"#utility.yul\":6653:6725   */\n  tag_73\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6735:6808   */\n  tag_160\n    /* \"#utility.yul\":6803:6806   */\n  0x80\n    /* \"#utility.yul\":6792:6801   */\n  dup4\n    /* \"#utility.yul\":6788:6807   */\n  add\n    /* \"#utility.yul\":6779:6785   */\n  dup5\n    /* \"#utility.yul\":6735:6808   */\n  tag_70\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6151:6815   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6821:6990   */\ntag_74:\n    /* \"#utility.yul\":6905:6916   */\n  0x00\n    /* \"#utility.yul\":6939:6945   */\n  dup3\n    /* \"#utility.yul\":6934:6937   */\n  dup3\n    /* \"#utility.yul\":6927:6946   */\n  mstore\n    /* \"#utility.yul\":6979:6983   */\n  0x20\n    /* \"#utility.yul\":6974:6977   */\n  dup3\n    /* \"#utility.yul\":6970:6984   */\n  add\n    /* \"#utility.yul\":6955:6984   */\n  swap1\n  pop\n    /* \"#utility.yul\":6821:6990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6996:7242   */\ntag_75:\n    /* \"#utility.yul\":7077:7078   */\n  0x00\n    /* \"#utility.yul\":7087:7200   */\ntag_163:\n    /* \"#utility.yul\":7101:7107   */\n  dup4\n    /* \"#utility.yul\":7098:7099   */\n  dup2\n    /* \"#utility.yul\":7095:7108   */\n  lt\n    /* \"#utility.yul\":7087:7200   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":7186:7187   */\n  dup1\n    /* \"#utility.yul\":7181:7184   */\n  dup3\n    /* \"#utility.yul\":7177:7188   */\n  add\n    /* \"#utility.yul\":7171:7189   */\n  mload\n    /* \"#utility.yul\":7167:7168   */\n  dup2\n    /* \"#utility.yul\":7162:7165   */\n  dup5\n    /* \"#utility.yul\":7158:7169   */\n  add\n    /* \"#utility.yul\":7151:7190   */\n  mstore\n    /* \"#utility.yul\":7123:7125   */\n  0x20\n    /* \"#utility.yul\":7120:7121   */\n  dup2\n    /* \"#utility.yul\":7116:7126   */\n  add\n    /* \"#utility.yul\":7111:7126   */\n  swap1\n  pop\n    /* \"#utility.yul\":7087:7200   */\n  jump(tag_163)\ntag_165:\n    /* \"#utility.yul\":7234:7235   */\n  0x00\n    /* \"#utility.yul\":7225:7231   */\n  dup5\n    /* \"#utility.yul\":7220:7223   */\n  dup5\n    /* \"#utility.yul\":7216:7232   */\n  add\n    /* \"#utility.yul\":7209:7236   */\n  mstore\n    /* \"#utility.yul\":7058:7242   */\n  pop\n    /* \"#utility.yul\":6996:7242   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7248:7350   */\ntag_76:\n    /* \"#utility.yul\":7289:7295   */\n  0x00\n    /* \"#utility.yul\":7340:7342   */\n  0x1f\n    /* \"#utility.yul\":7336:7343   */\n  not\n    /* \"#utility.yul\":7331:7333   */\n  0x1f\n    /* \"#utility.yul\":7324:7329   */\n  dup4\n    /* \"#utility.yul\":7320:7334   */\n  add\n    /* \"#utility.yul\":7316:7344   */\n  and\n    /* \"#utility.yul\":7306:7344   */\n  swap1\n  pop\n    /* \"#utility.yul\":7248:7350   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7356:7733   */\ntag_77:\n    /* \"#utility.yul\":7444:7447   */\n  0x00\n    /* \"#utility.yul\":7472:7511   */\n  tag_168\n    /* \"#utility.yul\":7505:7510   */\n  dup3\n    /* \"#utility.yul\":7472:7511   */\n  tag_48\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7527:7598   */\n  tag_169\n    /* \"#utility.yul\":7591:7597   */\n  dup2\n    /* \"#utility.yul\":7586:7589   */\n  dup6\n    /* \"#utility.yul\":7527:7598   */\n  tag_74\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7520:7598   */\n  swap4\n  pop\n    /* \"#utility.yul\":7607:7672   */\n  tag_170\n    /* \"#utility.yul\":7665:7671   */\n  dup2\n    /* \"#utility.yul\":7660:7663   */\n  dup6\n    /* \"#utility.yul\":7653:7657   */\n  0x20\n    /* \"#utility.yul\":7646:7651   */\n  dup7\n    /* \"#utility.yul\":7642:7658   */\n  add\n    /* \"#utility.yul\":7607:7672   */\n  tag_75\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7697:7726   */\n  tag_171\n    /* \"#utility.yul\":7719:7725   */\n  dup2\n    /* \"#utility.yul\":7697:7726   */\n  tag_76\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7692:7695   */\n  dup5\n    /* \"#utility.yul\":7688:7727   */\n  add\n    /* \"#utility.yul\":7681:7727   */\n  swap2\n  pop\n    /* \"#utility.yul\":7448:7733   */\n  pop\n    /* \"#utility.yul\":7356:7733   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7739:8052   */\ntag_44:\n    /* \"#utility.yul\":7852:7856   */\n  0x00\n    /* \"#utility.yul\":7890:7892   */\n  0x20\n    /* \"#utility.yul\":7879:7888   */\n  dup3\n    /* \"#utility.yul\":7875:7893   */\n  add\n    /* \"#utility.yul\":7867:7893   */\n  swap1\n  pop\n    /* \"#utility.yul\":7939:7948   */\n  dup2\n    /* \"#utility.yul\":7933:7937   */\n  dup2\n    /* \"#utility.yul\":7929:7949   */\n  sub\n    /* \"#utility.yul\":7925:7926   */\n  0x00\n    /* \"#utility.yul\":7914:7923   */\n  dup4\n    /* \"#utility.yul\":7910:7927   */\n  add\n    /* \"#utility.yul\":7903:7950   */\n  mstore\n    /* \"#utility.yul\":7967:8045   */\n  tag_173\n    /* \"#utility.yul\":8040:8044   */\n  dup2\n    /* \"#utility.yul\":8031:8037   */\n  dup5\n    /* \"#utility.yul\":7967:8045   */\n  tag_77\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7959:8045   */\n  swap1\n  pop\n    /* \"#utility.yul\":7739:8052   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8058:8156   */\ntag_78:\n    /* \"#utility.yul\":8109:8115   */\n  0x00\n    /* \"#utility.yul\":8143:8148   */\n  dup2\n    /* \"#utility.yul\":8137:8149   */\n  mload\n    /* \"#utility.yul\":8127:8149   */\n  swap1\n  pop\n    /* \"#utility.yul\":8058:8156   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8162:8278   */\ntag_79:\n    /* \"#utility.yul\":8213:8217   */\n  0x00\n    /* \"#utility.yul\":8236:8239   */\n  dup2\n    /* \"#utility.yul\":8228:8239   */\n  swap1\n  pop\n    /* \"#utility.yul\":8266:8270   */\n  0x20\n    /* \"#utility.yul\":8261:8264   */\n  dup3\n    /* \"#utility.yul\":8257:8271   */\n  add\n    /* \"#utility.yul\":8249:8271   */\n  swap1\n  pop\n    /* \"#utility.yul\":8162:8278   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8284:8438   */\ntag_80:\n    /* \"#utility.yul\":8327:8338   */\n  0x00\n    /* \"#utility.yul\":8363:8392   */\n  tag_177\n    /* \"#utility.yul\":8387:8390   */\n  dup3\n    /* \"#utility.yul\":8381:8391   */\n  mload\n    /* \"#utility.yul\":8363:8392   */\n  tag_71\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8426:8431   */\n  dup1\n    /* \"#utility.yul\":8402:8431   */\n  swap2\n  pop\n    /* \"#utility.yul\":8339:8438   */\n  pop\n    /* \"#utility.yul\":8284:8438   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8444:9038   */\ntag_46:\n    /* \"#utility.yul\":8528:8533   */\n  0x00\n    /* \"#utility.yul\":8559:8597   */\n  tag_179\n    /* \"#utility.yul\":8591:8596   */\n  dup3\n    /* \"#utility.yul\":8559:8597   */\n  tag_78\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8622:8627   */\n  dup3\n    /* \"#utility.yul\":8649:8689   */\n  tag_180\n    /* \"#utility.yul\":8683:8688   */\n  dup5\n    /* \"#utility.yul\":8649:8689   */\n  tag_79\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8637:8689   */\n  swap1\n  pop\n    /* \"#utility.yul\":8708:8743   */\n  tag_181\n    /* \"#utility.yul\":8734:8742   */\n  dup2\n    /* \"#utility.yul\":8708:8743   */\n  tag_80\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8699:8743   */\n  swap3\n  pop\n    /* \"#utility.yul\":8767:8769   */\n  0x20\n    /* \"#utility.yul\":8759:8765   */\n  dup3\n    /* \"#utility.yul\":8756:8770   */\n  lt\n    /* \"#utility.yul\":8753:9031   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":8838:9007   */\n  tag_183\n    /* \"#utility.yul\":8923:8989   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8893:8899   */\n  dup4\n    /* \"#utility.yul\":8889:8891   */\n  0x20\n    /* \"#utility.yul\":8885:8900   */\n  sub\n    /* \"#utility.yul\":8882:8883   */\n  0x08\n    /* \"#utility.yul\":8878:8901   */\n  mul\n    /* \"#utility.yul\":8838:9007   */\n  tag_54\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8815:8820   */\n  dup4\n    /* \"#utility.yul\":8794:9021   */\n  and\n    /* \"#utility.yul\":8785:9021   */\n  swap3\n  pop\n    /* \"#utility.yul\":8753:9031   */\ntag_182:\n    /* \"#utility.yul\":8534:9038   */\n  pop\n  pop\n    /* \"#utility.yul\":8444:9038   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/PepoStablecoin.sol\":321:1960  contract PepoStablecoin is ERC20, ERC20Permit, Ownable{... */\ntag_27:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x88a9212fd0f7b4413dd5e22695ef38344770f45b3083970cb665e0e17dcb0bd6\")\n  0x00\n  assignImmutable(\"0x1a9d81b69a492c90d45241c17e21e75a0dfce976e6e4f4787646342d15de5831\")\n  0x00\n  assignImmutable(\"0xdf2d24c2d874d48b2dabce9e2d6532f89ac89bcd3a2fa18c072f46a075054de9\")\n  0x00\n  assignImmutable(\"0xbc3ba252f8041edd3ef6da5977b996ba149c3c4e1b7a0e1b1cfeb5ce24e1a570\")\n  0x00\n  assignImmutable(\"0xf73cad1bd82f5ecfaa44e643676c8bc2dbfff68b10bdfd2ece012251191c9803\")\n  0x00\n  assignImmutable(\"0xfd6071d659db89e8c5cd76f742b98262bad343c48d8e112fec697f28b0f6a85d\")\n  0x00\n  assignImmutable(\"0x0c33b51a7fc957312a3715e50adff78df156f236b317db19e164c2154d0c029f\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/PepoStablecoin.sol\":321:1960  contract PepoStablecoin is ERC20, ERC20Permit, Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc5ebeaec\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x2f865568\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x2f865568\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x67c9b017\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PepoStablecoin.sol\":1475:1953  function liquidate(address addr) public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PepoStablecoin.sol\":909:1055  function getEthPrice() public view returns (uint) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PepoStablecoin.sol\":1061:1469  function borrow(uint ratio) public payable{... */\n    tag_17:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n    tag_98:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_119\n      jump\t// in\n    tag_120:\n      dup1\n      iszero\n      tag_121\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_122\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_121)\n    tag_122:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_123:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_123\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PepoStablecoin.sol\":1475:1953  function liquidate(address addr) public onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/PepoStablecoin.sol\":1642:1644  85 */\n      0x55\n        /* \"contracts/PepoStablecoin.sol\":1635:1638  100 */\n      0x64\n        /* \"contracts/PepoStablecoin.sol\":1594:1614  deptCollateralRatios */\n      0x09\n        /* \"contracts/PepoStablecoin.sol\":1594:1620  deptCollateralRatios[addr] */\n      0x00\n        /* \"contracts/PepoStablecoin.sol\":1615:1619  addr */\n      dup5\n        /* \"contracts/PepoStablecoin.sol\":1594:1620  deptCollateralRatios[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PepoStablecoin.sol\":1594:1631  deptCollateralRatios[addr].collateral */\n      0x01\n      add\n      sload\n        /* \"contracts/PepoStablecoin.sol\":1578:1591  getEthPrice() */\n      tag_140\n        /* \"contracts/PepoStablecoin.sol\":1578:1589  getEthPrice */\n      tag_64\n        /* \"contracts/PepoStablecoin.sol\":1578:1591  getEthPrice() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/PepoStablecoin.sol\":1578:1631  getEthPrice() * deptCollateralRatios[addr].collateral */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"contracts/PepoStablecoin.sol\":1543:1563  deptCollateralRatios */\n      0x09\n        /* \"contracts/PepoStablecoin.sol\":1543:1569  deptCollateralRatios[addr] */\n      0x00\n        /* \"contracts/PepoStablecoin.sol\":1564:1568  addr */\n      dup6\n        /* \"contracts/PepoStablecoin.sol\":1543:1569  deptCollateralRatios[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PepoStablecoin.sol\":1543:1574  deptCollateralRatios[addr].dept */\n      0x00\n      add\n      sload\n        /* \"contracts/PepoStablecoin.sol\":1543:1632  deptCollateralRatios[addr].dept / (getEthPrice() * deptCollateralRatios[addr].collateral) */\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"contracts/PepoStablecoin.sol\":1543:1638  deptCollateralRatios[addr].dept / (getEthPrice() * deptCollateralRatios[addr].collateral) * 100 */\n      tag_145\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_145:\n        /* \"contracts/PepoStablecoin.sol\":1543:1644  deptCollateralRatios[addr].dept / (getEthPrice() * deptCollateralRatios[addr].collateral) * 100 >= 85 */\n      lt\n      iszero\n        /* \"contracts/PepoStablecoin.sol\":1535:1697  require(deptCollateralRatios[addr].dept / (getEthPrice() * deptCollateralRatios[addr].collateral) * 100 >= 85, \"currently dept to correteral ratio less than 85%\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/PepoStablecoin.sol\":1758:1781  uint liquidateEthAmount */\n      0x00\n        /* \"contracts/PepoStablecoin.sol\":1784:1804  deptCollateralRatios */\n      0x09\n        /* \"contracts/PepoStablecoin.sol\":1784:1810  deptCollateralRatios[addr] */\n      0x00\n        /* \"contracts/PepoStablecoin.sol\":1805:1809  addr */\n      dup4\n        /* \"contracts/PepoStablecoin.sol\":1784:1810  deptCollateralRatios[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PepoStablecoin.sol\":1784:1821  deptCollateralRatios[addr].collateral */\n      0x01\n      add\n      sload\n        /* \"contracts/PepoStablecoin.sol\":1758:1821  uint liquidateEthAmount = deptCollateralRatios[addr].collateral */\n      swap1\n      pop\n        /* \"contracts/PepoStablecoin.sol\":1860:1884  deptCollateralRatio(0,0) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PepoStablecoin.sol\":1880:1881  0 */\n      0x00\n        /* \"contracts/PepoStablecoin.sol\":1860:1884  deptCollateralRatio(0,0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PepoStablecoin.sol\":1882:1883  0 */\n      0x00\n        /* \"contracts/PepoStablecoin.sol\":1860:1884  deptCollateralRatio(0,0) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/PepoStablecoin.sol\":1831:1851  deptCollateralRatios */\n      0x09\n        /* \"contracts/PepoStablecoin.sol\":1831:1857  deptCollateralRatios[addr] */\n      0x00\n        /* \"contracts/PepoStablecoin.sol\":1852:1856  addr */\n      dup5\n        /* \"contracts/PepoStablecoin.sol\":1831:1857  deptCollateralRatios[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PepoStablecoin.sol\":1831:1884  deptCollateralRatios[addr] = deptCollateralRatio(0,0) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/PepoStablecoin.sol\":1907:1919  _msgSender() */\n      tag_149\n        /* \"contracts/PepoStablecoin.sol\":1907:1917  _msgSender */\n      tag_126\n        /* \"contracts/PepoStablecoin.sol\":1907:1919  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/PepoStablecoin.sol\":1900:1946  Borrow(_msgSender(), liquidateEthAmount, true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd9d00ed0decba63a0ad16a878de20d30a429554f47b378787a818b7284da17b5\n        /* \"contracts/PepoStablecoin.sol\":1921:1939  liquidateEthAmount */\n      dup3\n        /* \"contracts/PepoStablecoin.sol\":1941:1945  true */\n      0x01\n        /* \"contracts/PepoStablecoin.sol\":1900:1946  Borrow(_msgSender(), liquidateEthAmount, true) */\n      mload(0x40)\n      tag_150\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PepoStablecoin.sol\":1525:1953  {... */\n      pop\n        /* \"contracts/PepoStablecoin.sol\":1475:1953  function liquidate(address addr) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2715:2722  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2741:2761  _domainSeparatorV4() */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2741:2759  _domainSeparatorV4 */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2741:2761  _domainSeparatorV4() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2734:2761  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PepoStablecoin.sol\":909:1055  function getEthPrice() public view returns (uint) {... */\n    tag_64:\n        /* \"contracts/PepoStablecoin.sol\":953:957  uint */\n      0x00\n        /* \"contracts/PepoStablecoin.sol\":972:981  int price */\n      dup1\n        /* \"contracts/PepoStablecoin.sol\":990:1002  ethPriceFeed */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PepoStablecoin.sol\":990:1018  ethPriceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/PepoStablecoin.sol\":990:1020  ethPriceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"contracts/PepoStablecoin.sol\":969:1020  (, int price, , ,) = ethPriceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/PepoStablecoin.sol\":1042:1047  price */\n      dup1\n        /* \"contracts/PepoStablecoin.sol\":1030:1048  return uint(price) */\n      swap2\n      pop\n      pop\n        /* \"contracts/PepoStablecoin.sol\":909:1055  function getEthPrice() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_163\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_165\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_166\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2497:2504  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2523:2542  super.nonces(owner) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2536:2541  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2523:2535  super.nonces */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2523:2542  super.nonces(owner) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2516:2542  return super.nonces(owner) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5242:5255  bytes1 fields */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5269:5287  string memory name */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5301:5322  string memory version */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5336:5351  uint256 chainId */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5365:5390  address verifyingContract */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5404:5416  bytes32 salt */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5430:5457  uint256[] memory extensions */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      tag_171\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5544  _EIP712Name */\n      tag_172\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5574  _EIP712Version */\n      tag_174\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5590:5603  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5625:5629  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5644:5654  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5682:5683  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_175\n      jumpi\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n    tag_175:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_178\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_178:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1710:1716  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_181\n      swap1\n      tag_119\n      jump\t// in\n    tag_181:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_182\n      swap1\n      tag_119\n      jump\t// in\n    tag_182:\n      dup1\n      iszero\n      tag_183\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_184\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_183)\n    tag_184:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_185:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_185\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PepoStablecoin.sol\":1061:1469  function borrow(uint ratio) public payable{... */\n    tag_101:\n        /* \"contracts/PepoStablecoin.sol\":1130:1132  75 */\n      0x4b\n        /* \"contracts/PepoStablecoin.sol\":1121:1126  ratio */\n      dup2\n        /* \"contracts/PepoStablecoin.sol\":1121:1132  ratio <= 75 */\n      gt\n      iszero\n        /* \"contracts/PepoStablecoin.sol\":1113:1167  require(ratio <= 75, \"Ratio must less than equal 75%\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/PepoStablecoin.sol\":1178:1193  uint collateral */\n      0x00\n        /* \"contracts/PepoStablecoin.sol\":1213:1222  msg.value */\n      callvalue\n        /* \"contracts/PepoStablecoin.sol\":1197:1210  getEthPrice() */\n      tag_193\n        /* \"contracts/PepoStablecoin.sol\":1197:1208  getEthPrice */\n      tag_64\n        /* \"contracts/PepoStablecoin.sol\":1197:1210  getEthPrice() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/PepoStablecoin.sol\":1197:1222  getEthPrice() * msg.value */\n      tag_194\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_194:\n        /* \"contracts/PepoStablecoin.sol\":1178:1222  uint collateral =  getEthPrice() * msg.value */\n      swap1\n      pop\n        /* \"contracts/PepoStablecoin.sol\":1232:1241  uint dept */\n      0x00\n        /* \"contracts/PepoStablecoin.sol\":1257:1262  ratio */\n      dup3\n        /* \"contracts/PepoStablecoin.sol\":1244:1254  collateral */\n      dup3\n        /* \"contracts/PepoStablecoin.sol\":1244:1262  collateral * ratio */\n      tag_195\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_195:\n        /* \"contracts/PepoStablecoin.sol\":1232:1262  uint dept = collateral * ratio */\n      swap1\n      pop\n        /* \"contracts/PepoStablecoin.sol\":1307:1378  deptCollateralRatio(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PepoStablecoin.sol\":1340:1344  dept */\n      dup3\n        /* \"contracts/PepoStablecoin.sol\":1307:1378  deptCollateralRatio(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PepoStablecoin.sol\":1358:1368  collateral */\n      dup4\n        /* \"contracts/PepoStablecoin.sol\":1307:1378  deptCollateralRatio(... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/PepoStablecoin.sol\":1272:1292  deptCollateralRatios */\n      0x09\n        /* \"contracts/PepoStablecoin.sol\":1272:1304  deptCollateralRatios[msg.sender] */\n      0x00\n        /* \"contracts/PepoStablecoin.sol\":1293:1303  msg.sender */\n      caller\n        /* \"contracts/PepoStablecoin.sol\":1272:1304  deptCollateralRatios[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PepoStablecoin.sol\":1272:1378  deptCollateralRatios[msg.sender] = deptCollateralRatio(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/PepoStablecoin.sol\":1389:1414  _mint(_msgSender(), dept) */\n      tag_196\n        /* \"contracts/PepoStablecoin.sol\":1395:1407  _msgSender() */\n      tag_197\n        /* \"contracts/PepoStablecoin.sol\":1395:1405  _msgSender */\n      tag_126\n        /* \"contracts/PepoStablecoin.sol\":1395:1407  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"contracts/PepoStablecoin.sol\":1409:1413  dept */\n      dup3\n        /* \"contracts/PepoStablecoin.sol\":1389:1394  _mint */\n      tag_198\n        /* \"contracts/PepoStablecoin.sol\":1389:1414  _mint(_msgSender(), dept) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/PepoStablecoin.sol\":1437:1449  _msgSender() */\n      tag_199\n        /* \"contracts/PepoStablecoin.sol\":1437:1447  _msgSender */\n      tag_126\n        /* \"contracts/PepoStablecoin.sol\":1437:1449  _msgSender() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/PepoStablecoin.sol\":1430:1462  Borrow(_msgSender(), dept, true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd9d00ed0decba63a0ad16a878de20d30a429554f47b378787a818b7284da17b5\n        /* \"contracts/PepoStablecoin.sol\":1451:1455  dept */\n      dup3\n        /* \"contracts/PepoStablecoin.sol\":1457:1461  true */\n      0x01\n        /* \"contracts/PepoStablecoin.sol\":1430:1462  Borrow(_msgSender(), dept, true) */\n      mload(0x40)\n      tag_200\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PepoStablecoin.sol\":1103:1469  {... */\n      pop\n      pop\n        /* \"contracts/PepoStablecoin.sol\":1061:1469  function borrow(uint ratio) public payable{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1901:1909  deadline */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1883:1898  block.timestamp */\n      timestamp\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1883:1909  block.timestamp > deadline */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1879:1976  if (block.timestamp > deadline) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1956:1964  deadline */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1932:1965  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      0x6279130200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1879:1976  if (block.timestamp > deadline) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1986:2004  bytes32 structHash */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1022:1117  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2045:2050  owner */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2052:2059  spender */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2061:2066  value */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2068:2084  _useNonce(owner) */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2078:2083  owner */\n      dup13\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2068:2077  _useNonce */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2068:2084  _useNonce(owner) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2086:2094  deadline */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2017:2095  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      tag_206\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2007:2096  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1986:2096  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2107:2119  bytes32 hash */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2122:2150  _hashTypedDataV4(structHash) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2139:2149  structHash */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2122:2138  _hashTypedDataV4 */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2122:2150  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2107:2150  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2161:2175  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2178:2206  ECDSA.recover(hash, v, r, s) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2192:2196  hash */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2198:2199  v */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2201:2202  r */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2204:2205  s */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2178:2191  ECDSA.recover */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2178:2206  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2161:2206  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2230:2235  owner */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2220:2235  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2220:2226  signer */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2220:2235  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2216:2304  if (signer != owner) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2279:2285  signer */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2287:2292  owner */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2258:2293  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      0x4b800e4600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2216:2304  if (signer != owner) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2314:2345  _approve(owner, spender, value) */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2323:2328  owner */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2330:2337  spender */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2339:2344  value */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2314:2322  _approve */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2314:2345  _approve(owner, spender, value) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1869:2352  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_222\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_166\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1866:1878  _msgSender() */\n      tag_242\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1866:1876  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1855:1862  owner() */\n      tag_243\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1855:1860  owner */\n      tag_86\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1928:1940  _msgSender() */\n      tag_245\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1928:1938  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3898:3905  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3938:3949  _cachedThis */\n      immutable(\"0xf73cad1bd82f5ecfaa44e643676c8bc2dbfff68b10bdfd2ece012251191c9803\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3929:3933  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_248\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3970:3984  _cachedChainId */\n      immutable(\"0xfd6071d659db89e8c5cd76f742b98262bad343c48d8e112fec697f28b0f6a85d\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3953:3966  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3953:3984  block.chainid == _cachedChainId */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4007:4029  _cachedDomainSeparator */\n      immutable(\"0x0c33b51a7fc957312a3715e50adff78df156f236b317db19e164c2154d0c029f\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4000:4029  return _cachedDomainSeparator */\n      swap1\n      pop\n      jump(tag_247)\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      tag_251\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4088  _buildDomainSeparator */\n      tag_252\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4060:4090  return _buildDomainSeparator() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_247:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3004:3010  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3020:3026  _owner */\n      0x08\n      0x00\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/ownership/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":538:645  function nonces(address owner) public view virtual returns (uint256) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":598:605  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":624:631  _nonces */\n      0x07\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":624:638  _nonces[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":632:637  owner */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":624:638  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":617:638  return _nonces[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":538:645  function nonces(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6067:6080  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      tag_256\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6126:6139  _nameFallback */\n      0x05\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6104  _name */\n      immutable(\"0x1a9d81b69a492c90d45241c17e21e75a0dfce976e6e4f4787646342d15de5831\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6125  _name.toStringWithFallback */\n      tag_257\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6092:6140  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6522:6535  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      tag_259\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6584:6600  _versionFallback */\n      0x06\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6562  _version */\n      immutable(\"0x88a9212fd0f7b4413dd5e22695ef38344770f45b3083970cb665e0e17dcb0bd6\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6583  _version.toStringWithFallback */\n      tag_257\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6547:6601  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":759:1154  function _useNonce(address owner) internal virtual returns (uint256) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":819:826  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1121:1128  _nonces */\n      0x07\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1129:1134  owner */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1121:1137  _nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1114:1137  return _nonces[owner]++ */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":759:1154  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4994:5001  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_266\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      tag_267\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5071  _domainSeparatorV4 */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5075:5085  structHash */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5052  MessageHashUtils.toTypedDataHash */\n      tag_268\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5013:5086  return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6888:6895  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6908:6925  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6927:6945  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6947:6963  bytes32 errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      tag_270\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6978:6982  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6984:6985  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6987:6988  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6990:6991  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6977  tryRecover */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6907:6992  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      tag_272\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7014:7019  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7021:7029  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7013  _throwError */\n      tag_273\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7047:7056  recovered */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7040:7056  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_280\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_283\n      swap2\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_285)\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_289)\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_290\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n      immutable(\"0xbc3ba252f8041edd3ef6da5977b996ba149c3c4e1b7a0e1b1cfeb5ce24e1a570\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n      immutable(\"0xdf2d24c2d874d48b2dabce9e2d6532f89ac89bcd3a2fa18c072f46a075054de9\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      add(0x20, mload(0x40))\n      tag_292\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3479:3492  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3537:3554  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3527:3532  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3508:3554  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      tag_296\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3586:3591  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3585  toString */\n      tag_297\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3570:3592  return toString(value) */\n      swap1\n      pop\n      jump(tag_294)\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3630:3635  store */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3623:3635  return store */\n      dup1\n      sload\n      tag_299\n      swap1\n      tag_119\n      jump\t// in\n    tag_299:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_300\n      swap1\n      tag_119\n      jump\t// in\n    tag_300:\n      dup1\n      iszero\n      tag_301\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_302\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_301)\n    tag_302:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_303:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_303\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_301:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_294:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3446:3460  bytes32 digest */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3555:3559  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3549:3560  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3585:3595  hex\"19_01\" */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3580:3583  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3573:3596  mstore(ptr, hex\"19_01\") */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3632:3647  domainSeparator */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3625:3629  0x02 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3620:3623  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3616:3630  add(ptr, 0x02) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3609:3648  mstore(add(ptr, 0x02), domainSeparator) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3684:3694  structHash */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3677:3681  0x22 */\n      0x22\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3672:3675  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3668:3682  add(ptr, 0x22) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3661:3695  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3733:3737  0x42 */\n      0x42\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3728:3731  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3718:3738  keccak256(ptr, 0x42) */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3708:3738  digest := keccak256(ptr, 0x42) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3524:3748  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5266:5273  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5275:5287  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5289:5296  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6199:6265  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6194:6195  s */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6196  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6265  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6297:6298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6301:6331  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6333:6334  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_305)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6454  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6467:6471  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6473:6474  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6476:6477  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6479:6480  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_307\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_310\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_310:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6481  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6513:6514  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6501  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6551:6580  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6590:6591  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6582:6592  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_305)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6622:6628  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6630:6650  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6660:6661  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6652:6662  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6614:6663  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_305:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7291:7311  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_313\n      jumpi\n      tag_314\n      tag_315\n      jump\t// in\n    tag_314:\n    tag_313:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7287  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_316\n      jumpi\n      tag_317\n      tag_315\n      jump\t// in\n    tag_317:\n    tag_316:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7327:7334  return; */\n      tag_312\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7387:7416  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_320\n      jumpi\n      tag_321\n      tag_315\n      jump\t// in\n    tag_321:\n    tag_320:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7383  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_322\n      jumpi\n      tag_323\n      tag_315\n      jump\t// in\n    tag_323:\n    tag_322:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7439:7462  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7492:7527  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_326\n      jumpi\n      tag_327\n      tag_315\n      jump\t// in\n    tag_327:\n    tag_326:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7488  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_328\n      jumpi\n      tag_329\n      tag_315\n      jump\t// in\n    tag_329:\n    tag_328:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7586:7594  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7578:7595  uint256(errorArg) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7626:7656  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_333\n      jumpi\n      tag_334\n      tag_315\n      jump\t// in\n    tag_334:\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7622  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_335\n      jumpi\n      tag_336\n      tag_315\n      jump\t// in\n    tag_336:\n    tag_335:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7702:7710  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_338\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_312:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2137:2150  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2173  uint256 len */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      tag_340\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2187:2191  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2186  byteLength */\n      tag_341\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2192  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2297  string memory str */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2311:2313  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_342\n      jumpi\n      tag_343\n      tag_177\n      jump\t// in\n    tag_343:\n    tag_342:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_344\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_344:\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2314  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2402:2405  len */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2397:2400  str */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2390:2406  mstore(str, len) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2442:2446  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2435:2439  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2430:2433  str */\n      dup3\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2426:2440  add(str, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2419:2447  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2473:2476  str */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2466:2476  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2616:2623  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2635:2649  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2688:2692  0xFF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2679:2683  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2685  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2692  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2635:2692  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2715:2717  31 */\n      0x1f\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2712  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2717  result > 31 */\n      gt\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2740:2760  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2787:2793  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2780:2793  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_347:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_348:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_349:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_401:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_401)\n    tag_403:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_350:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_351:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_406\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_347\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":818:889   */\n      tag_407\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_348\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_408\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_349\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":988:1017   */\n      tag_409\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_350\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_28:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_411\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_351\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_353:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_355:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_356:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_417\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_355\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_357:\n        /* \"#utility.yul\":1983:2007   */\n      tag_419\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_356\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_420:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_358:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_422\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_357\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_359:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_360:\n        /* \"#utility.yul\":2339:2363   */\n      tag_425\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_359\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_426:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_361:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_428\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_360\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_32:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_431\n      tag_353\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2632:2751   */\n    tag_430:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_432\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_358\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_433\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_361\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_362:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_363:\n        /* \"#utility.yul\":3196:3217   */\n      tag_436\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_362\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_35:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_438\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_363\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_364:\n        /* \"#utility.yul\":3533:3557   */\n      tag_440\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_359\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_40:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_442\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_364\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_44:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_445\n      tag_353\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3908:4027   */\n    tag_444:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_446\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_358\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_447\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_358\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_448\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_361\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4752   */\n    tag_50:\n        /* \"#utility.yul\":4482:4488   */\n      0x00\n        /* \"#utility.yul\":4531:4533   */\n      0x20\n        /* \"#utility.yul\":4519:4528   */\n      dup3\n        /* \"#utility.yul\":4510:4517   */\n      dup5\n        /* \"#utility.yul\":4506:4529   */\n      sub\n        /* \"#utility.yul\":4502:4534   */\n      slt\n        /* \"#utility.yul\":4499:4618   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":4537:4616   */\n      tag_451\n      tag_353\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4499:4618   */\n    tag_450:\n        /* \"#utility.yul\":4657:4658   */\n      0x00\n        /* \"#utility.yul\":4682:4735   */\n      tag_452\n        /* \"#utility.yul\":4727:4734   */\n      dup5\n        /* \"#utility.yul\":4718:4724   */\n      dup3\n        /* \"#utility.yul\":4707:4716   */\n      dup6\n        /* \"#utility.yul\":4703:4725   */\n      add\n        /* \"#utility.yul\":4682:4735   */\n      tag_358\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4672:4735   */\n      swap2\n      pop\n        /* \"#utility.yul\":4628:4745   */\n      pop\n        /* \"#utility.yul\":4423:4752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4758:4844   */\n    tag_365:\n        /* \"#utility.yul\":4793:4800   */\n      0x00\n        /* \"#utility.yul\":4833:4837   */\n      0xff\n        /* \"#utility.yul\":4826:4831   */\n      dup3\n        /* \"#utility.yul\":4822:4838   */\n      and\n        /* \"#utility.yul\":4811:4838   */\n      swap1\n      pop\n        /* \"#utility.yul\":4758:4844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4850:4962   */\n    tag_366:\n        /* \"#utility.yul\":4933:4955   */\n      tag_455\n        /* \"#utility.yul\":4949:4954   */\n      dup2\n        /* \"#utility.yul\":4933:4955   */\n      tag_365\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":4928:4931   */\n      dup3\n        /* \"#utility.yul\":4921:4956   */\n      mstore\n        /* \"#utility.yul\":4850:4962   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4968:5182   */\n    tag_56:\n        /* \"#utility.yul\":5057:5061   */\n      0x00\n        /* \"#utility.yul\":5095:5097   */\n      0x20\n        /* \"#utility.yul\":5084:5093   */\n      dup3\n        /* \"#utility.yul\":5080:5098   */\n      add\n        /* \"#utility.yul\":5072:5098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5108:5175   */\n      tag_457\n        /* \"#utility.yul\":5172:5173   */\n      0x00\n        /* \"#utility.yul\":5161:5170   */\n      dup4\n        /* \"#utility.yul\":5157:5174   */\n      add\n        /* \"#utility.yul\":5148:5154   */\n      dup5\n        /* \"#utility.yul\":5108:5175   */\n      tag_366\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4968:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5265   */\n    tag_367:\n        /* \"#utility.yul\":5225:5232   */\n      0x00\n        /* \"#utility.yul\":5254:5259   */\n      dup2\n        /* \"#utility.yul\":5243:5259   */\n      swap1\n      pop\n        /* \"#utility.yul\":5188:5265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5271:5389   */\n    tag_368:\n        /* \"#utility.yul\":5358:5382   */\n      tag_460\n        /* \"#utility.yul\":5376:5381   */\n      dup2\n        /* \"#utility.yul\":5358:5382   */\n      tag_367\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5353:5356   */\n      dup3\n        /* \"#utility.yul\":5346:5383   */\n      mstore\n        /* \"#utility.yul\":5271:5389   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5395:5617   */\n    tag_61:\n        /* \"#utility.yul\":5488:5492   */\n      0x00\n        /* \"#utility.yul\":5526:5528   */\n      0x20\n        /* \"#utility.yul\":5515:5524   */\n      dup3\n        /* \"#utility.yul\":5511:5529   */\n      add\n        /* \"#utility.yul\":5503:5529   */\n      swap1\n      pop\n        /* \"#utility.yul\":5539:5610   */\n      tag_462\n        /* \"#utility.yul\":5607:5608   */\n      0x00\n        /* \"#utility.yul\":5596:5605   */\n      dup4\n        /* \"#utility.yul\":5592:5609   */\n      add\n        /* \"#utility.yul\":5583:5589   */\n      dup5\n        /* \"#utility.yul\":5539:5610   */\n      tag_368\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5395:5617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5772   */\n    tag_369:\n        /* \"#utility.yul\":5659:5666   */\n      0x00\n        /* \"#utility.yul\":5699:5765   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5692:5697   */\n      dup3\n        /* \"#utility.yul\":5688:5766   */\n      and\n        /* \"#utility.yul\":5677:5766   */\n      swap1\n      pop\n        /* \"#utility.yul\":5623:5772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5778:5893   */\n    tag_370:\n        /* \"#utility.yul\":5863:5886   */\n      tag_465\n        /* \"#utility.yul\":5880:5885   */\n      dup2\n        /* \"#utility.yul\":5863:5886   */\n      tag_369\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5858:5861   */\n      dup3\n        /* \"#utility.yul\":5851:5887   */\n      mstore\n        /* \"#utility.yul\":5778:5893   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5899:6017   */\n    tag_371:\n        /* \"#utility.yul\":5986:6010   */\n      tag_467\n        /* \"#utility.yul\":6004:6009   */\n      dup2\n        /* \"#utility.yul\":5986:6010   */\n      tag_356\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":5981:5984   */\n      dup3\n        /* \"#utility.yul\":5974:6011   */\n      mstore\n        /* \"#utility.yul\":5899:6017   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6137   */\n    tag_372:\n        /* \"#utility.yul\":6090:6096   */\n      0x00\n        /* \"#utility.yul\":6124:6129   */\n      dup2\n        /* \"#utility.yul\":6118:6130   */\n      mload\n        /* \"#utility.yul\":6108:6130   */\n      swap1\n      pop\n        /* \"#utility.yul\":6023:6137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6143:6327   */\n    tag_373:\n        /* \"#utility.yul\":6242:6253   */\n      0x00\n        /* \"#utility.yul\":6276:6282   */\n      dup3\n        /* \"#utility.yul\":6271:6274   */\n      dup3\n        /* \"#utility.yul\":6264:6283   */\n      mstore\n        /* \"#utility.yul\":6316:6320   */\n      0x20\n        /* \"#utility.yul\":6311:6314   */\n      dup3\n        /* \"#utility.yul\":6307:6321   */\n      add\n        /* \"#utility.yul\":6292:6321   */\n      swap1\n      pop\n        /* \"#utility.yul\":6143:6327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6333:6465   */\n    tag_374:\n        /* \"#utility.yul\":6400:6404   */\n      0x00\n        /* \"#utility.yul\":6423:6426   */\n      dup2\n        /* \"#utility.yul\":6415:6426   */\n      swap1\n      pop\n        /* \"#utility.yul\":6453:6457   */\n      0x20\n        /* \"#utility.yul\":6448:6451   */\n      dup3\n        /* \"#utility.yul\":6444:6458   */\n      add\n        /* \"#utility.yul\":6436:6458   */\n      swap1\n      pop\n        /* \"#utility.yul\":6333:6465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6471:6579   */\n    tag_375:\n        /* \"#utility.yul\":6548:6572   */\n      tag_472\n        /* \"#utility.yul\":6566:6571   */\n      dup2\n        /* \"#utility.yul\":6548:6572   */\n      tag_359\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6543:6546   */\n      dup3\n        /* \"#utility.yul\":6536:6573   */\n      mstore\n        /* \"#utility.yul\":6471:6579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6585:6764   */\n    tag_376:\n        /* \"#utility.yul\":6654:6664   */\n      0x00\n        /* \"#utility.yul\":6675:6721   */\n      tag_474\n        /* \"#utility.yul\":6717:6720   */\n      dup4\n        /* \"#utility.yul\":6709:6715   */\n      dup4\n        /* \"#utility.yul\":6675:6721   */\n      tag_375\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":6753:6757   */\n      0x20\n        /* \"#utility.yul\":6748:6751   */\n      dup4\n        /* \"#utility.yul\":6744:6758   */\n      add\n        /* \"#utility.yul\":6730:6758   */\n      swap1\n      pop\n        /* \"#utility.yul\":6585:6764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6770:6883   */\n    tag_377:\n        /* \"#utility.yul\":6840:6844   */\n      0x00\n        /* \"#utility.yul\":6872:6876   */\n      0x20\n        /* \"#utility.yul\":6867:6870   */\n      dup3\n        /* \"#utility.yul\":6863:6877   */\n      add\n        /* \"#utility.yul\":6855:6877   */\n      swap1\n      pop\n        /* \"#utility.yul\":6770:6883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6919:7651   */\n    tag_378:\n        /* \"#utility.yul\":7038:7041   */\n      0x00\n        /* \"#utility.yul\":7067:7121   */\n      tag_477\n        /* \"#utility.yul\":7115:7120   */\n      dup3\n        /* \"#utility.yul\":7067:7121   */\n      tag_372\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7137:7223   */\n      tag_478\n        /* \"#utility.yul\":7216:7222   */\n      dup2\n        /* \"#utility.yul\":7211:7214   */\n      dup6\n        /* \"#utility.yul\":7137:7223   */\n      tag_373\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7130:7223   */\n      swap4\n      pop\n        /* \"#utility.yul\":7247:7303   */\n      tag_479\n        /* \"#utility.yul\":7297:7302   */\n      dup4\n        /* \"#utility.yul\":7247:7303   */\n      tag_374\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7326:7333   */\n      dup1\n        /* \"#utility.yul\":7357:7358   */\n      0x00\n        /* \"#utility.yul\":7342:7626   */\n    tag_480:\n        /* \"#utility.yul\":7367:7373   */\n      dup4\n        /* \"#utility.yul\":7364:7365   */\n      dup2\n        /* \"#utility.yul\":7361:7374   */\n      lt\n        /* \"#utility.yul\":7342:7626   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":7443:7449   */\n      dup2\n        /* \"#utility.yul\":7437:7450   */\n      mload\n        /* \"#utility.yul\":7470:7533   */\n      tag_483\n        /* \"#utility.yul\":7529:7532   */\n      dup9\n        /* \"#utility.yul\":7514:7527   */\n      dup3\n        /* \"#utility.yul\":7470:7533   */\n      tag_376\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":7463:7533   */\n      swap8\n      pop\n        /* \"#utility.yul\":7556:7616   */\n      tag_484\n        /* \"#utility.yul\":7609:7615   */\n      dup4\n        /* \"#utility.yul\":7556:7616   */\n      tag_377\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7546:7616   */\n      swap3\n      pop\n        /* \"#utility.yul\":7402:7626   */\n      pop\n        /* \"#utility.yul\":7389:7390   */\n      0x01\n        /* \"#utility.yul\":7386:7387   */\n      dup2\n        /* \"#utility.yul\":7382:7391   */\n      add\n        /* \"#utility.yul\":7377:7391   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7626   */\n      jump(tag_480)\n    tag_482:\n        /* \"#utility.yul\":7346:7360   */\n      pop\n        /* \"#utility.yul\":7642:7645   */\n      dup6\n        /* \"#utility.yul\":7635:7645   */\n      swap4\n      pop\n        /* \"#utility.yul\":7043:7651   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6919:7651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7657:8872   */\n    tag_83:\n        /* \"#utility.yul\":8006:8010   */\n      0x00\n        /* \"#utility.yul\":8044:8047   */\n      0xe0\n        /* \"#utility.yul\":8033:8042   */\n      dup3\n        /* \"#utility.yul\":8029:8048   */\n      add\n        /* \"#utility.yul\":8021:8048   */\n      swap1\n      pop\n        /* \"#utility.yul\":8058:8127   */\n      tag_486\n        /* \"#utility.yul\":8124:8125   */\n      0x00\n        /* \"#utility.yul\":8113:8122   */\n      dup4\n        /* \"#utility.yul\":8109:8126   */\n      add\n        /* \"#utility.yul\":8100:8106   */\n      dup11\n        /* \"#utility.yul\":8058:8127   */\n      tag_370\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8174:8183   */\n      dup2\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8164:8184   */\n      sub\n        /* \"#utility.yul\":8159:8161   */\n      0x20\n        /* \"#utility.yul\":8148:8157   */\n      dup4\n        /* \"#utility.yul\":8144:8162   */\n      add\n        /* \"#utility.yul\":8137:8185   */\n      mstore\n        /* \"#utility.yul\":8202:8280   */\n      tag_487\n        /* \"#utility.yul\":8275:8279   */\n      dup2\n        /* \"#utility.yul\":8266:8272   */\n      dup10\n        /* \"#utility.yul\":8202:8280   */\n      tag_351\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":8194:8280   */\n      swap1\n      pop\n        /* \"#utility.yul\":8327:8336   */\n      dup2\n        /* \"#utility.yul\":8321:8325   */\n      dup2\n        /* \"#utility.yul\":8317:8337   */\n      sub\n        /* \"#utility.yul\":8312:8314   */\n      0x40\n        /* \"#utility.yul\":8301:8310   */\n      dup4\n        /* \"#utility.yul\":8297:8315   */\n      add\n        /* \"#utility.yul\":8290:8338   */\n      mstore\n        /* \"#utility.yul\":8355:8433   */\n      tag_488\n        /* \"#utility.yul\":8428:8432   */\n      dup2\n        /* \"#utility.yul\":8419:8425   */\n      dup9\n        /* \"#utility.yul\":8355:8433   */\n      tag_351\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":8347:8433   */\n      swap1\n      pop\n        /* \"#utility.yul\":8443:8515   */\n      tag_489\n        /* \"#utility.yul\":8511:8513   */\n      0x60\n        /* \"#utility.yul\":8500:8509   */\n      dup4\n        /* \"#utility.yul\":8496:8514   */\n      add\n        /* \"#utility.yul\":8487:8493   */\n      dup8\n        /* \"#utility.yul\":8443:8515   */\n      tag_364\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":8525:8598   */\n      tag_490\n        /* \"#utility.yul\":8593:8596   */\n      0x80\n        /* \"#utility.yul\":8582:8591   */\n      dup4\n        /* \"#utility.yul\":8578:8597   */\n      add\n        /* \"#utility.yul\":8569:8575   */\n      dup7\n        /* \"#utility.yul\":8525:8598   */\n      tag_371\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8608:8681   */\n      tag_491\n        /* \"#utility.yul\":8676:8679   */\n      0xa0\n        /* \"#utility.yul\":8665:8674   */\n      dup4\n        /* \"#utility.yul\":8661:8680   */\n      add\n        /* \"#utility.yul\":8652:8658   */\n      dup6\n        /* \"#utility.yul\":8608:8681   */\n      tag_368\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8729:8738   */\n      dup2\n        /* \"#utility.yul\":8723:8727   */\n      dup2\n        /* \"#utility.yul\":8719:8739   */\n      sub\n        /* \"#utility.yul\":8713:8716   */\n      0xc0\n        /* \"#utility.yul\":8702:8711   */\n      dup4\n        /* \"#utility.yul\":8698:8717   */\n      add\n        /* \"#utility.yul\":8691:8740   */\n      mstore\n        /* \"#utility.yul\":8757:8865   */\n      tag_492\n        /* \"#utility.yul\":8860:8864   */\n      dup2\n        /* \"#utility.yul\":8851:8857   */\n      dup5\n        /* \"#utility.yul\":8757:8865   */\n      tag_378\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8749:8865   */\n      swap1\n      pop\n        /* \"#utility.yul\":7657:8872   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:9100   */\n    tag_88:\n        /* \"#utility.yul\":8971:8975   */\n      0x00\n        /* \"#utility.yul\":9009:9011   */\n      0x20\n        /* \"#utility.yul\":8998:9007   */\n      dup3\n        /* \"#utility.yul\":8994:9012   */\n      add\n        /* \"#utility.yul\":8986:9012   */\n      swap1\n      pop\n        /* \"#utility.yul\":9022:9093   */\n      tag_494\n        /* \"#utility.yul\":9090:9091   */\n      0x00\n        /* \"#utility.yul\":9079:9088   */\n      dup4\n        /* \"#utility.yul\":9075:9092   */\n      add\n        /* \"#utility.yul\":9066:9072   */\n      dup5\n        /* \"#utility.yul\":9022:9093   */\n      tag_371\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":8878:9100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9106:9435   */\n    tag_100:\n        /* \"#utility.yul\":9165:9171   */\n      0x00\n        /* \"#utility.yul\":9214:9216   */\n      0x20\n        /* \"#utility.yul\":9202:9211   */\n      dup3\n        /* \"#utility.yul\":9193:9200   */\n      dup5\n        /* \"#utility.yul\":9189:9212   */\n      sub\n        /* \"#utility.yul\":9185:9217   */\n      slt\n        /* \"#utility.yul\":9182:9301   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":9220:9299   */\n      tag_497\n      tag_353\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":9182:9301   */\n    tag_496:\n        /* \"#utility.yul\":9340:9341   */\n      0x00\n        /* \"#utility.yul\":9365:9418   */\n      tag_498\n        /* \"#utility.yul\":9410:9417   */\n      dup5\n        /* \"#utility.yul\":9401:9407   */\n      dup3\n        /* \"#utility.yul\":9390:9399   */\n      dup6\n        /* \"#utility.yul\":9386:9408   */\n      add\n        /* \"#utility.yul\":9365:9418   */\n      tag_361\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9355:9418   */\n      swap2\n      pop\n        /* \"#utility.yul\":9311:9428   */\n      pop\n        /* \"#utility.yul\":9106:9435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9441:9559   */\n    tag_379:\n        /* \"#utility.yul\":9512:9534   */\n      tag_500\n        /* \"#utility.yul\":9528:9533   */\n      dup2\n        /* \"#utility.yul\":9512:9534   */\n      tag_365\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":9505:9510   */\n      dup2\n        /* \"#utility.yul\":9502:9535   */\n      eq\n        /* \"#utility.yul\":9492:9553   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":9549:9550   */\n      0x00\n        /* \"#utility.yul\":9546:9547   */\n      dup1\n        /* \"#utility.yul\":9539:9551   */\n      revert\n        /* \"#utility.yul\":9492:9553   */\n    tag_501:\n        /* \"#utility.yul\":9441:9559   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9565:9700   */\n    tag_380:\n        /* \"#utility.yul\":9609:9614   */\n      0x00\n        /* \"#utility.yul\":9647:9653   */\n      dup2\n        /* \"#utility.yul\":9634:9654   */\n      calldataload\n        /* \"#utility.yul\":9625:9654   */\n      swap1\n      pop\n        /* \"#utility.yul\":9663:9694   */\n      tag_503\n        /* \"#utility.yul\":9688:9693   */\n      dup2\n        /* \"#utility.yul\":9663:9694   */\n      tag_379\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9565:9700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9706:9828   */\n    tag_381:\n        /* \"#utility.yul\":9779:9803   */\n      tag_505\n        /* \"#utility.yul\":9797:9802   */\n      dup2\n        /* \"#utility.yul\":9779:9803   */\n      tag_367\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":9772:9777   */\n      dup2\n        /* \"#utility.yul\":9769:9804   */\n      eq\n        /* \"#utility.yul\":9759:9822   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":9818:9819   */\n      0x00\n        /* \"#utility.yul\":9815:9816   */\n      dup1\n        /* \"#utility.yul\":9808:9820   */\n      revert\n        /* \"#utility.yul\":9759:9822   */\n    tag_506:\n        /* \"#utility.yul\":9706:9828   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9834:9973   */\n    tag_382:\n        /* \"#utility.yul\":9880:9885   */\n      0x00\n        /* \"#utility.yul\":9918:9924   */\n      dup2\n        /* \"#utility.yul\":9905:9925   */\n      calldataload\n        /* \"#utility.yul\":9896:9925   */\n      swap1\n      pop\n        /* \"#utility.yul\":9934:9967   */\n      tag_508\n        /* \"#utility.yul\":9961:9966   */\n      dup2\n        /* \"#utility.yul\":9934:9967   */\n      tag_381\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":9834:9973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9979:11178   */\n    tag_105:\n        /* \"#utility.yul\":10090:10096   */\n      0x00\n        /* \"#utility.yul\":10098:10104   */\n      dup1\n        /* \"#utility.yul\":10106:10112   */\n      0x00\n        /* \"#utility.yul\":10114:10120   */\n      dup1\n        /* \"#utility.yul\":10122:10128   */\n      0x00\n        /* \"#utility.yul\":10130:10136   */\n      dup1\n        /* \"#utility.yul\":10138:10144   */\n      0x00\n        /* \"#utility.yul\":10187:10190   */\n      0xe0\n        /* \"#utility.yul\":10175:10184   */\n      dup9\n        /* \"#utility.yul\":10166:10173   */\n      dup11\n        /* \"#utility.yul\":10162:10185   */\n      sub\n        /* \"#utility.yul\":10158:10191   */\n      slt\n        /* \"#utility.yul\":10155:10275   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":10194:10273   */\n      tag_511\n      tag_353\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10155:10275   */\n    tag_510:\n        /* \"#utility.yul\":10314:10315   */\n      0x00\n        /* \"#utility.yul\":10339:10392   */\n      tag_512\n        /* \"#utility.yul\":10384:10391   */\n      dup11\n        /* \"#utility.yul\":10375:10381   */\n      dup3\n        /* \"#utility.yul\":10364:10373   */\n      dup12\n        /* \"#utility.yul\":10360:10382   */\n      add\n        /* \"#utility.yul\":10339:10392   */\n      tag_358\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10329:10392   */\n      swap8\n      pop\n        /* \"#utility.yul\":10285:10402   */\n      pop\n        /* \"#utility.yul\":10441:10443   */\n      0x20\n        /* \"#utility.yul\":10467:10520   */\n      tag_513\n        /* \"#utility.yul\":10512:10519   */\n      dup11\n        /* \"#utility.yul\":10503:10509   */\n      dup3\n        /* \"#utility.yul\":10492:10501   */\n      dup12\n        /* \"#utility.yul\":10488:10510   */\n      add\n        /* \"#utility.yul\":10467:10520   */\n      tag_358\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10457:10520   */\n      swap7\n      pop\n        /* \"#utility.yul\":10412:10530   */\n      pop\n        /* \"#utility.yul\":10569:10571   */\n      0x40\n        /* \"#utility.yul\":10595:10648   */\n      tag_514\n        /* \"#utility.yul\":10640:10647   */\n      dup11\n        /* \"#utility.yul\":10631:10637   */\n      dup3\n        /* \"#utility.yul\":10620:10629   */\n      dup12\n        /* \"#utility.yul\":10616:10638   */\n      add\n        /* \"#utility.yul\":10595:10648   */\n      tag_361\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":10585:10648   */\n      swap6\n      pop\n        /* \"#utility.yul\":10540:10658   */\n      pop\n        /* \"#utility.yul\":10697:10699   */\n      0x60\n        /* \"#utility.yul\":10723:10776   */\n      tag_515\n        /* \"#utility.yul\":10768:10775   */\n      dup11\n        /* \"#utility.yul\":10759:10765   */\n      dup3\n        /* \"#utility.yul\":10748:10757   */\n      dup12\n        /* \"#utility.yul\":10744:10766   */\n      add\n        /* \"#utility.yul\":10723:10776   */\n      tag_361\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10713:10776   */\n      swap5\n      pop\n        /* \"#utility.yul\":10668:10786   */\n      pop\n        /* \"#utility.yul\":10825:10828   */\n      0x80\n        /* \"#utility.yul\":10852:10903   */\n      tag_516\n        /* \"#utility.yul\":10895:10902   */\n      dup11\n        /* \"#utility.yul\":10886:10892   */\n      dup3\n        /* \"#utility.yul\":10875:10884   */\n      dup12\n        /* \"#utility.yul\":10871:10893   */\n      add\n        /* \"#utility.yul\":10852:10903   */\n      tag_380\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":10842:10903   */\n      swap4\n      pop\n        /* \"#utility.yul\":10796:10913   */\n      pop\n        /* \"#utility.yul\":10952:10955   */\n      0xa0\n        /* \"#utility.yul\":10979:11032   */\n      tag_517\n        /* \"#utility.yul\":11024:11031   */\n      dup11\n        /* \"#utility.yul\":11015:11021   */\n      dup3\n        /* \"#utility.yul\":11004:11013   */\n      dup12\n        /* \"#utility.yul\":11000:11022   */\n      add\n        /* \"#utility.yul\":10979:11032   */\n      tag_382\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":10969:11032   */\n      swap3\n      pop\n        /* \"#utility.yul\":10923:11042   */\n      pop\n        /* \"#utility.yul\":11081:11084   */\n      0xc0\n        /* \"#utility.yul\":11108:11161   */\n      tag_518\n        /* \"#utility.yul\":11153:11160   */\n      dup11\n        /* \"#utility.yul\":11144:11150   */\n      dup3\n        /* \"#utility.yul\":11133:11142   */\n      dup12\n        /* \"#utility.yul\":11129:11151   */\n      add\n        /* \"#utility.yul\":11108:11161   */\n      tag_382\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11098:11161   */\n      swap2\n      pop\n        /* \"#utility.yul\":11052:11171   */\n      pop\n        /* \"#utility.yul\":9979:11178   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11184:11658   */\n    tag_110:\n        /* \"#utility.yul\":11252:11258   */\n      0x00\n        /* \"#utility.yul\":11260:11266   */\n      dup1\n        /* \"#utility.yul\":11309:11311   */\n      0x40\n        /* \"#utility.yul\":11297:11306   */\n      dup4\n        /* \"#utility.yul\":11288:11295   */\n      dup6\n        /* \"#utility.yul\":11284:11307   */\n      sub\n        /* \"#utility.yul\":11280:11312   */\n      slt\n        /* \"#utility.yul\":11277:11396   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":11315:11394   */\n      tag_521\n      tag_353\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11277:11396   */\n    tag_520:\n        /* \"#utility.yul\":11435:11436   */\n      0x00\n        /* \"#utility.yul\":11460:11513   */\n      tag_522\n        /* \"#utility.yul\":11505:11512   */\n      dup6\n        /* \"#utility.yul\":11496:11502   */\n      dup3\n        /* \"#utility.yul\":11485:11494   */\n      dup7\n        /* \"#utility.yul\":11481:11503   */\n      add\n        /* \"#utility.yul\":11460:11513   */\n      tag_358\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":11450:11513   */\n      swap3\n      pop\n        /* \"#utility.yul\":11406:11523   */\n      pop\n        /* \"#utility.yul\":11562:11564   */\n      0x20\n        /* \"#utility.yul\":11588:11641   */\n      tag_523\n        /* \"#utility.yul\":11633:11640   */\n      dup6\n        /* \"#utility.yul\":11624:11630   */\n      dup3\n        /* \"#utility.yul\":11613:11622   */\n      dup7\n        /* \"#utility.yul\":11609:11631   */\n      add\n        /* \"#utility.yul\":11588:11641   */\n      tag_358\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":11578:11641   */\n      swap2\n      pop\n        /* \"#utility.yul\":11533:11651   */\n      pop\n        /* \"#utility.yul\":11184:11658   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11664:11844   */\n    tag_383:\n        /* \"#utility.yul\":11712:11789   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11709:11710   */\n      0x00\n        /* \"#utility.yul\":11702:11790   */\n      mstore\n        /* \"#utility.yul\":11809:11813   */\n      0x22\n        /* \"#utility.yul\":11806:11807   */\n      0x04\n        /* \"#utility.yul\":11799:11814   */\n      mstore\n        /* \"#utility.yul\":11833:11837   */\n      0x24\n        /* \"#utility.yul\":11830:11831   */\n      0x00\n        /* \"#utility.yul\":11823:11838   */\n      revert\n        /* \"#utility.yul\":11850:12170   */\n    tag_119:\n        /* \"#utility.yul\":11894:11900   */\n      0x00\n        /* \"#utility.yul\":11931:11932   */\n      0x02\n        /* \"#utility.yul\":11925:11929   */\n      dup3\n        /* \"#utility.yul\":11921:11933   */\n      div\n        /* \"#utility.yul\":11911:11933   */\n      swap1\n      pop\n        /* \"#utility.yul\":11978:11979   */\n      0x01\n        /* \"#utility.yul\":11972:11976   */\n      dup3\n        /* \"#utility.yul\":11968:11980   */\n      and\n        /* \"#utility.yul\":11999:12017   */\n      dup1\n        /* \"#utility.yul\":11989:12070   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":12055:12059   */\n      0x7f\n        /* \"#utility.yul\":12047:12053   */\n      dup3\n        /* \"#utility.yul\":12043:12060   */\n      and\n        /* \"#utility.yul\":12033:12060   */\n      swap2\n      pop\n        /* \"#utility.yul\":11989:12070   */\n    tag_526:\n        /* \"#utility.yul\":12117:12119   */\n      0x20\n        /* \"#utility.yul\":12109:12115   */\n      dup3\n        /* \"#utility.yul\":12106:12120   */\n      lt\n        /* \"#utility.yul\":12086:12104   */\n      dup2\n        /* \"#utility.yul\":12083:12121   */\n      sub\n        /* \"#utility.yul\":12080:12164   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":12136:12154   */\n      tag_528\n      tag_383\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":12080:12164   */\n    tag_527:\n        /* \"#utility.yul\":11901:12170   */\n      pop\n        /* \"#utility.yul\":11850:12170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12176:12356   */\n    tag_384:\n        /* \"#utility.yul\":12224:12301   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12221:12222   */\n      0x00\n        /* \"#utility.yul\":12214:12302   */\n      mstore\n        /* \"#utility.yul\":12321:12325   */\n      0x11\n        /* \"#utility.yul\":12318:12319   */\n      0x04\n        /* \"#utility.yul\":12311:12326   */\n      mstore\n        /* \"#utility.yul\":12345:12349   */\n      0x24\n        /* \"#utility.yul\":12342:12343   */\n      0x00\n        /* \"#utility.yul\":12335:12350   */\n      revert\n        /* \"#utility.yul\":12362:12772   */\n    tag_142:\n        /* \"#utility.yul\":12402:12409   */\n      0x00\n        /* \"#utility.yul\":12425:12445   */\n      tag_531\n        /* \"#utility.yul\":12443:12444   */\n      dup3\n        /* \"#utility.yul\":12425:12445   */\n      tag_359\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12420:12445   */\n      swap2\n      pop\n        /* \"#utility.yul\":12459:12479   */\n      tag_532\n        /* \"#utility.yul\":12477:12478   */\n      dup4\n        /* \"#utility.yul\":12459:12479   */\n      tag_359\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":12454:12479   */\n      swap3\n      pop\n        /* \"#utility.yul\":12514:12515   */\n      dup3\n        /* \"#utility.yul\":12511:12512   */\n      dup3\n        /* \"#utility.yul\":12507:12516   */\n      mul\n        /* \"#utility.yul\":12536:12566   */\n      tag_533\n        /* \"#utility.yul\":12554:12565   */\n      dup2\n        /* \"#utility.yul\":12536:12566   */\n      tag_359\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12525:12566   */\n      swap2\n      pop\n        /* \"#utility.yul\":12715:12716   */\n      dup3\n        /* \"#utility.yul\":12706:12713   */\n      dup3\n        /* \"#utility.yul\":12702:12717   */\n      div\n        /* \"#utility.yul\":12699:12700   */\n      dup5\n        /* \"#utility.yul\":12696:12718   */\n      eq\n        /* \"#utility.yul\":12676:12677   */\n      dup4\n        /* \"#utility.yul\":12669:12678   */\n      iszero\n        /* \"#utility.yul\":12649:12732   */\n      or\n        /* \"#utility.yul\":12626:12765   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":12745:12763   */\n      tag_535\n      tag_384\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12626:12765   */\n    tag_534:\n        /* \"#utility.yul\":12410:12772   */\n      pop\n        /* \"#utility.yul\":12362:12772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12778:12958   */\n    tag_385:\n        /* \"#utility.yul\":12826:12903   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12823:12824   */\n      0x00\n        /* \"#utility.yul\":12816:12904   */\n      mstore\n        /* \"#utility.yul\":12923:12927   */\n      0x12\n        /* \"#utility.yul\":12920:12921   */\n      0x04\n        /* \"#utility.yul\":12913:12928   */\n      mstore\n        /* \"#utility.yul\":12947:12951   */\n      0x24\n        /* \"#utility.yul\":12944:12945   */\n      0x00\n        /* \"#utility.yul\":12937:12952   */\n      revert\n        /* \"#utility.yul\":12964:13149   */\n    tag_144:\n        /* \"#utility.yul\":13004:13005   */\n      0x00\n        /* \"#utility.yul\":13021:13041   */\n      tag_538\n        /* \"#utility.yul\":13039:13040   */\n      dup3\n        /* \"#utility.yul\":13021:13041   */\n      tag_359\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":13016:13041   */\n      swap2\n      pop\n        /* \"#utility.yul\":13055:13075   */\n      tag_539\n        /* \"#utility.yul\":13073:13074   */\n      dup4\n        /* \"#utility.yul\":13055:13075   */\n      tag_359\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":13050:13075   */\n      swap3\n      pop\n        /* \"#utility.yul\":13094:13095   */\n      dup3\n        /* \"#utility.yul\":13084:13119   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":13099:13117   */\n      tag_541\n      tag_385\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":13084:13119   */\n    tag_540:\n        /* \"#utility.yul\":13141:13142   */\n      dup3\n        /* \"#utility.yul\":13138:13139   */\n      dup3\n        /* \"#utility.yul\":13134:13143   */\n      div\n        /* \"#utility.yul\":13129:13143   */\n      swap1\n      pop\n        /* \"#utility.yul\":12964:13149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13155:13390   */\n    tag_386:\n        /* \"#utility.yul\":13295:13329   */\n      0x63757272656e746c79206465707420746f20636f727265746572616c20726174\n        /* \"#utility.yul\":13291:13292   */\n      0x00\n        /* \"#utility.yul\":13283:13289   */\n      dup3\n        /* \"#utility.yul\":13279:13293   */\n      add\n        /* \"#utility.yul\":13272:13330   */\n      mstore\n        /* \"#utility.yul\":13364:13382   */\n      0x696f206c657373207468616e2038352500000000000000000000000000000000\n        /* \"#utility.yul\":13359:13361   */\n      0x20\n        /* \"#utility.yul\":13351:13357   */\n      dup3\n        /* \"#utility.yul\":13347:13362   */\n      add\n        /* \"#utility.yul\":13340:13383   */\n      mstore\n        /* \"#utility.yul\":13155:13390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13396:13762   */\n    tag_387:\n        /* \"#utility.yul\":13538:13541   */\n      0x00\n        /* \"#utility.yul\":13559:13626   */\n      tag_544\n        /* \"#utility.yul\":13623:13625   */\n      0x30\n        /* \"#utility.yul\":13618:13621   */\n      dup4\n        /* \"#utility.yul\":13559:13626   */\n      tag_348\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13552:13626   */\n      swap2\n      pop\n        /* \"#utility.yul\":13635:13728   */\n      tag_545\n        /* \"#utility.yul\":13724:13727   */\n      dup3\n        /* \"#utility.yul\":13635:13728   */\n      tag_386\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13753:13755   */\n      0x40\n        /* \"#utility.yul\":13748:13751   */\n      dup3\n        /* \"#utility.yul\":13744:13756   */\n      add\n        /* \"#utility.yul\":13737:13756   */\n      swap1\n      pop\n        /* \"#utility.yul\":13396:13762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13768:14187   */\n    tag_148:\n        /* \"#utility.yul\":13934:13938   */\n      0x00\n        /* \"#utility.yul\":13972:13974   */\n      0x20\n        /* \"#utility.yul\":13961:13970   */\n      dup3\n        /* \"#utility.yul\":13957:13975   */\n      add\n        /* \"#utility.yul\":13949:13975   */\n      swap1\n      pop\n        /* \"#utility.yul\":14021:14030   */\n      dup2\n        /* \"#utility.yul\":14015:14019   */\n      dup2\n        /* \"#utility.yul\":14011:14031   */\n      sub\n        /* \"#utility.yul\":14007:14008   */\n      0x00\n        /* \"#utility.yul\":13996:14005   */\n      dup4\n        /* \"#utility.yul\":13992:14009   */\n      add\n        /* \"#utility.yul\":13985:14032   */\n      mstore\n        /* \"#utility.yul\":14049:14180   */\n      tag_547\n        /* \"#utility.yul\":14175:14179   */\n      dup2\n        /* \"#utility.yul\":14049:14180   */\n      tag_387\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":14041:14180   */\n      swap1\n      pop\n        /* \"#utility.yul\":13768:14187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14193:14513   */\n    tag_151:\n        /* \"#utility.yul\":14308:14312   */\n      0x00\n        /* \"#utility.yul\":14346:14348   */\n      0x40\n        /* \"#utility.yul\":14335:14344   */\n      dup3\n        /* \"#utility.yul\":14331:14349   */\n      add\n        /* \"#utility.yul\":14323:14349   */\n      swap1\n      pop\n        /* \"#utility.yul\":14359:14430   */\n      tag_549\n        /* \"#utility.yul\":14427:14428   */\n      0x00\n        /* \"#utility.yul\":14416:14425   */\n      dup4\n        /* \"#utility.yul\":14412:14429   */\n      add\n        /* \"#utility.yul\":14403:14409   */\n      dup6\n        /* \"#utility.yul\":14359:14430   */\n      tag_364\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":14440:14506   */\n      tag_550\n        /* \"#utility.yul\":14502:14504   */\n      0x20\n        /* \"#utility.yul\":14491:14500   */\n      dup4\n        /* \"#utility.yul\":14487:14505   */\n      add\n        /* \"#utility.yul\":14478:14484   */\n      dup5\n        /* \"#utility.yul\":14440:14506   */\n      tag_363\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":14193:14513   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14519:14624   */\n    tag_388:\n        /* \"#utility.yul\":14555:14562   */\n      0x00\n        /* \"#utility.yul\":14595:14617   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":14588:14593   */\n      dup3\n        /* \"#utility.yul\":14584:14618   */\n      and\n        /* \"#utility.yul\":14573:14618   */\n      swap1\n      pop\n        /* \"#utility.yul\":14519:14624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14630:14750   */\n    tag_389:\n        /* \"#utility.yul\":14702:14725   */\n      tag_553\n        /* \"#utility.yul\":14719:14724   */\n      dup2\n        /* \"#utility.yul\":14702:14725   */\n      tag_388\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":14695:14700   */\n      dup2\n        /* \"#utility.yul\":14692:14726   */\n      eq\n        /* \"#utility.yul\":14682:14744   */\n      tag_554\n      jumpi\n        /* \"#utility.yul\":14740:14741   */\n      0x00\n        /* \"#utility.yul\":14737:14738   */\n      dup1\n        /* \"#utility.yul\":14730:14742   */\n      revert\n        /* \"#utility.yul\":14682:14744   */\n    tag_554:\n        /* \"#utility.yul\":14630:14750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14756:14897   */\n    tag_390:\n        /* \"#utility.yul\":14812:14817   */\n      0x00\n        /* \"#utility.yul\":14843:14849   */\n      dup2\n        /* \"#utility.yul\":14837:14850   */\n      mload\n        /* \"#utility.yul\":14828:14850   */\n      swap1\n      pop\n        /* \"#utility.yul\":14859:14891   */\n      tag_556\n        /* \"#utility.yul\":14885:14890   */\n      dup2\n        /* \"#utility.yul\":14859:14891   */\n      tag_389\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":14756:14897   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14903:14979   */\n    tag_391:\n        /* \"#utility.yul\":14939:14946   */\n      0x00\n        /* \"#utility.yul\":14968:14973   */\n      dup2\n        /* \"#utility.yul\":14957:14973   */\n      swap1\n      pop\n        /* \"#utility.yul\":14903:14979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14985:15105   */\n    tag_392:\n        /* \"#utility.yul\":15057:15080   */\n      tag_559\n        /* \"#utility.yul\":15074:15079   */\n      dup2\n        /* \"#utility.yul\":15057:15080   */\n      tag_391\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":15050:15055   */\n      dup2\n        /* \"#utility.yul\":15047:15081   */\n      eq\n        /* \"#utility.yul\":15037:15099   */\n      tag_560\n      jumpi\n        /* \"#utility.yul\":15095:15096   */\n      0x00\n        /* \"#utility.yul\":15092:15093   */\n      dup1\n        /* \"#utility.yul\":15085:15097   */\n      revert\n        /* \"#utility.yul\":15037:15099   */\n    tag_560:\n        /* \"#utility.yul\":14985:15105   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15111:15252   */\n    tag_393:\n        /* \"#utility.yul\":15167:15172   */\n      0x00\n        /* \"#utility.yul\":15198:15204   */\n      dup2\n        /* \"#utility.yul\":15192:15205   */\n      mload\n        /* \"#utility.yul\":15183:15205   */\n      swap1\n      pop\n        /* \"#utility.yul\":15214:15246   */\n      tag_562\n        /* \"#utility.yul\":15240:15245   */\n      dup2\n        /* \"#utility.yul\":15214:15246   */\n      tag_392\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":15111:15252   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15258:15401   */\n    tag_394:\n        /* \"#utility.yul\":15315:15320   */\n      0x00\n        /* \"#utility.yul\":15346:15352   */\n      dup2\n        /* \"#utility.yul\":15340:15353   */\n      mload\n        /* \"#utility.yul\":15331:15353   */\n      swap1\n      pop\n        /* \"#utility.yul\":15362:15395   */\n      tag_564\n        /* \"#utility.yul\":15389:15394   */\n      dup2\n        /* \"#utility.yul\":15362:15395   */\n      tag_360\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":15258:15401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15407:16378   */\n    tag_160:\n        /* \"#utility.yul\":15510:15516   */\n      0x00\n        /* \"#utility.yul\":15518:15524   */\n      dup1\n        /* \"#utility.yul\":15526:15532   */\n      0x00\n        /* \"#utility.yul\":15534:15540   */\n      dup1\n        /* \"#utility.yul\":15542:15548   */\n      0x00\n        /* \"#utility.yul\":15591:15594   */\n      0xa0\n        /* \"#utility.yul\":15579:15588   */\n      dup7\n        /* \"#utility.yul\":15570:15577   */\n      dup9\n        /* \"#utility.yul\":15566:15589   */\n      sub\n        /* \"#utility.yul\":15562:15595   */\n      slt\n        /* \"#utility.yul\":15559:15679   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":15598:15677   */\n      tag_567\n      tag_353\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":15559:15679   */\n    tag_566:\n        /* \"#utility.yul\":15718:15719   */\n      0x00\n        /* \"#utility.yul\":15743:15806   */\n      tag_568\n        /* \"#utility.yul\":15798:15805   */\n      dup9\n        /* \"#utility.yul\":15789:15795   */\n      dup3\n        /* \"#utility.yul\":15778:15787   */\n      dup10\n        /* \"#utility.yul\":15774:15796   */\n      add\n        /* \"#utility.yul\":15743:15806   */\n      tag_390\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":15733:15806   */\n      swap6\n      pop\n        /* \"#utility.yul\":15689:15816   */\n      pop\n        /* \"#utility.yul\":15855:15857   */\n      0x20\n        /* \"#utility.yul\":15881:15944   */\n      tag_569\n        /* \"#utility.yul\":15936:15943   */\n      dup9\n        /* \"#utility.yul\":15927:15933   */\n      dup3\n        /* \"#utility.yul\":15916:15925   */\n      dup10\n        /* \"#utility.yul\":15912:15934   */\n      add\n        /* \"#utility.yul\":15881:15944   */\n      tag_393\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":15871:15944   */\n      swap5\n      pop\n        /* \"#utility.yul\":15826:15954   */\n      pop\n        /* \"#utility.yul\":15993:15995   */\n      0x40\n        /* \"#utility.yul\":16019:16083   */\n      tag_570\n        /* \"#utility.yul\":16075:16082   */\n      dup9\n        /* \"#utility.yul\":16066:16072   */\n      dup3\n        /* \"#utility.yul\":16055:16064   */\n      dup10\n        /* \"#utility.yul\":16051:16073   */\n      add\n        /* \"#utility.yul\":16019:16083   */\n      tag_394\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":16009:16083   */\n      swap4\n      pop\n        /* \"#utility.yul\":15964:16093   */\n      pop\n        /* \"#utility.yul\":16132:16134   */\n      0x60\n        /* \"#utility.yul\":16158:16222   */\n      tag_571\n        /* \"#utility.yul\":16214:16221   */\n      dup9\n        /* \"#utility.yul\":16205:16211   */\n      dup3\n        /* \"#utility.yul\":16194:16203   */\n      dup10\n        /* \"#utility.yul\":16190:16212   */\n      add\n        /* \"#utility.yul\":16158:16222   */\n      tag_394\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":16148:16222   */\n      swap3\n      pop\n        /* \"#utility.yul\":16103:16232   */\n      pop\n        /* \"#utility.yul\":16271:16274   */\n      0x80\n        /* \"#utility.yul\":16298:16361   */\n      tag_572\n        /* \"#utility.yul\":16353:16360   */\n      dup9\n        /* \"#utility.yul\":16344:16350   */\n      dup3\n        /* \"#utility.yul\":16333:16342   */\n      dup10\n        /* \"#utility.yul\":16329:16351   */\n      add\n        /* \"#utility.yul\":16298:16361   */\n      tag_390\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16288:16361   */\n      swap2\n      pop\n        /* \"#utility.yul\":16242:16371   */\n      pop\n        /* \"#utility.yul\":15407:16378   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16384:16564   */\n    tag_177:\n        /* \"#utility.yul\":16432:16509   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16429:16430   */\n      0x00\n        /* \"#utility.yul\":16422:16510   */\n      mstore\n        /* \"#utility.yul\":16529:16533   */\n      0x41\n        /* \"#utility.yul\":16526:16527   */\n      0x04\n        /* \"#utility.yul\":16519:16534   */\n      mstore\n        /* \"#utility.yul\":16553:16557   */\n      0x24\n        /* \"#utility.yul\":16550:16551   */\n      0x00\n        /* \"#utility.yul\":16543:16558   */\n      revert\n        /* \"#utility.yul\":16570:16750   */\n    tag_395:\n        /* \"#utility.yul\":16710:16742   */\n      0x526174696f206d757374206c657373207468616e20657175616c203735250000\n        /* \"#utility.yul\":16706:16707   */\n      0x00\n        /* \"#utility.yul\":16698:16704   */\n      dup3\n        /* \"#utility.yul\":16694:16708   */\n      add\n        /* \"#utility.yul\":16687:16743   */\n      mstore\n        /* \"#utility.yul\":16570:16750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16756:17122   */\n    tag_396:\n        /* \"#utility.yul\":16898:16901   */\n      0x00\n        /* \"#utility.yul\":16919:16986   */\n      tag_576\n        /* \"#utility.yul\":16983:16985   */\n      0x1e\n        /* \"#utility.yul\":16978:16981   */\n      dup4\n        /* \"#utility.yul\":16919:16986   */\n      tag_348\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":16912:16986   */\n      swap2\n      pop\n        /* \"#utility.yul\":16995:17088   */\n      tag_577\n        /* \"#utility.yul\":17084:17087   */\n      dup3\n        /* \"#utility.yul\":16995:17088   */\n      tag_395\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":17113:17115   */\n      0x20\n        /* \"#utility.yul\":17108:17111   */\n      dup3\n        /* \"#utility.yul\":17104:17116   */\n      add\n        /* \"#utility.yul\":17097:17116   */\n      swap1\n      pop\n        /* \"#utility.yul\":16756:17122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17128:17547   */\n    tag_192:\n        /* \"#utility.yul\":17294:17298   */\n      0x00\n        /* \"#utility.yul\":17332:17334   */\n      0x20\n        /* \"#utility.yul\":17321:17330   */\n      dup3\n        /* \"#utility.yul\":17317:17335   */\n      add\n        /* \"#utility.yul\":17309:17335   */\n      swap1\n      pop\n        /* \"#utility.yul\":17381:17390   */\n      dup2\n        /* \"#utility.yul\":17375:17379   */\n      dup2\n        /* \"#utility.yul\":17371:17391   */\n      sub\n        /* \"#utility.yul\":17367:17368   */\n      0x00\n        /* \"#utility.yul\":17356:17365   */\n      dup4\n        /* \"#utility.yul\":17352:17369   */\n      add\n        /* \"#utility.yul\":17345:17392   */\n      mstore\n        /* \"#utility.yul\":17409:17540   */\n      tag_579\n        /* \"#utility.yul\":17535:17539   */\n      dup2\n        /* \"#utility.yul\":17409:17540   */\n      tag_396\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":17401:17540   */\n      swap1\n      pop\n        /* \"#utility.yul\":17128:17547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17553:18328   */\n    tag_207:\n        /* \"#utility.yul\":17786:17790   */\n      0x00\n        /* \"#utility.yul\":17824:17827   */\n      0xc0\n        /* \"#utility.yul\":17813:17822   */\n      dup3\n        /* \"#utility.yul\":17809:17828   */\n      add\n        /* \"#utility.yul\":17801:17828   */\n      swap1\n      pop\n        /* \"#utility.yul\":17838:17909   */\n      tag_581\n        /* \"#utility.yul\":17906:17907   */\n      0x00\n        /* \"#utility.yul\":17895:17904   */\n      dup4\n        /* \"#utility.yul\":17891:17908   */\n      add\n        /* \"#utility.yul\":17882:17888   */\n      dup10\n        /* \"#utility.yul\":17838:17909   */\n      tag_368\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17919:17991   */\n      tag_582\n        /* \"#utility.yul\":17987:17989   */\n      0x20\n        /* \"#utility.yul\":17976:17985   */\n      dup4\n        /* \"#utility.yul\":17972:17990   */\n      add\n        /* \"#utility.yul\":17963:17969   */\n      dup9\n        /* \"#utility.yul\":17919:17991   */\n      tag_371\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":18001:18073   */\n      tag_583\n        /* \"#utility.yul\":18069:18071   */\n      0x40\n        /* \"#utility.yul\":18058:18067   */\n      dup4\n        /* \"#utility.yul\":18054:18072   */\n      add\n        /* \"#utility.yul\":18045:18051   */\n      dup8\n        /* \"#utility.yul\":18001:18073   */\n      tag_371\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":18083:18155   */\n      tag_584\n        /* \"#utility.yul\":18151:18153   */\n      0x60\n        /* \"#utility.yul\":18140:18149   */\n      dup4\n        /* \"#utility.yul\":18136:18154   */\n      add\n        /* \"#utility.yul\":18127:18133   */\n      dup7\n        /* \"#utility.yul\":18083:18155   */\n      tag_364\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":18165:18238   */\n      tag_585\n        /* \"#utility.yul\":18233:18236   */\n      0x80\n        /* \"#utility.yul\":18222:18231   */\n      dup4\n        /* \"#utility.yul\":18218:18237   */\n      add\n        /* \"#utility.yul\":18209:18215   */\n      dup6\n        /* \"#utility.yul\":18165:18238   */\n      tag_364\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":18248:18321   */\n      tag_586\n        /* \"#utility.yul\":18316:18319   */\n      0xa0\n        /* \"#utility.yul\":18305:18314   */\n      dup4\n        /* \"#utility.yul\":18301:18320   */\n      add\n        /* \"#utility.yul\":18292:18298   */\n      dup5\n        /* \"#utility.yul\":18248:18321   */\n      tag_364\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":17553:18328   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18334:18666   */\n    tag_214:\n        /* \"#utility.yul\":18455:18459   */\n      0x00\n        /* \"#utility.yul\":18493:18495   */\n      0x40\n        /* \"#utility.yul\":18482:18491   */\n      dup3\n        /* \"#utility.yul\":18478:18496   */\n      add\n        /* \"#utility.yul\":18470:18496   */\n      swap1\n      pop\n        /* \"#utility.yul\":18506:18577   */\n      tag_588\n        /* \"#utility.yul\":18574:18575   */\n      0x00\n        /* \"#utility.yul\":18563:18572   */\n      dup4\n        /* \"#utility.yul\":18559:18576   */\n      add\n        /* \"#utility.yul\":18550:18556   */\n      dup6\n        /* \"#utility.yul\":18506:18577   */\n      tag_371\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":18587:18659   */\n      tag_589\n        /* \"#utility.yul\":18655:18657   */\n      0x20\n        /* \"#utility.yul\":18644:18653   */\n      dup4\n        /* \"#utility.yul\":18640:18658   */\n      add\n        /* \"#utility.yul\":18631:18637   */\n      dup5\n        /* \"#utility.yul\":18587:18659   */\n      tag_371\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":18334:18666   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18672:19114   */\n    tag_232:\n        /* \"#utility.yul\":18821:18825   */\n      0x00\n        /* \"#utility.yul\":18859:18861   */\n      0x60\n        /* \"#utility.yul\":18848:18857   */\n      dup3\n        /* \"#utility.yul\":18844:18862   */\n      add\n        /* \"#utility.yul\":18836:18862   */\n      swap1\n      pop\n        /* \"#utility.yul\":18872:18943   */\n      tag_591\n        /* \"#utility.yul\":18940:18941   */\n      0x00\n        /* \"#utility.yul\":18929:18938   */\n      dup4\n        /* \"#utility.yul\":18925:18942   */\n      add\n        /* \"#utility.yul\":18916:18922   */\n      dup7\n        /* \"#utility.yul\":18872:18943   */\n      tag_371\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":18953:19025   */\n      tag_592\n        /* \"#utility.yul\":19021:19023   */\n      0x20\n        /* \"#utility.yul\":19010:19019   */\n      dup4\n        /* \"#utility.yul\":19006:19024   */\n      add\n        /* \"#utility.yul\":18997:19003   */\n      dup6\n        /* \"#utility.yul\":18953:19025   */\n      tag_364\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":19035:19107   */\n      tag_593\n        /* \"#utility.yul\":19103:19105   */\n      0x40\n        /* \"#utility.yul\":19092:19101   */\n      dup4\n        /* \"#utility.yul\":19088:19106   */\n      add\n        /* \"#utility.yul\":19079:19085   */\n      dup5\n        /* \"#utility.yul\":19035:19107   */\n      tag_364\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":18672:19114   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19120:19311   */\n    tag_284:\n        /* \"#utility.yul\":19160:19163   */\n      0x00\n        /* \"#utility.yul\":19179:19199   */\n      tag_595\n        /* \"#utility.yul\":19197:19198   */\n      dup3\n        /* \"#utility.yul\":19179:19199   */\n      tag_359\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":19174:19199   */\n      swap2\n      pop\n        /* \"#utility.yul\":19213:19233   */\n      tag_596\n        /* \"#utility.yul\":19231:19232   */\n      dup4\n        /* \"#utility.yul\":19213:19233   */\n      tag_359\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":19208:19233   */\n      swap3\n      pop\n        /* \"#utility.yul\":19256:19257   */\n      dup3\n        /* \"#utility.yul\":19253:19254   */\n      dup3\n        /* \"#utility.yul\":19249:19258   */\n      add\n        /* \"#utility.yul\":19242:19258   */\n      swap1\n      pop\n        /* \"#utility.yul\":19277:19280   */\n      dup1\n        /* \"#utility.yul\":19274:19275   */\n      dup3\n        /* \"#utility.yul\":19271:19281   */\n      gt\n        /* \"#utility.yul\":19268:19304   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":19284:19302   */\n      tag_598\n      tag_384\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":19268:19304   */\n    tag_597:\n        /* \"#utility.yul\":19120:19311   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19317:19981   */\n    tag_293:\n        /* \"#utility.yul\":19522:19526   */\n      0x00\n        /* \"#utility.yul\":19560:19563   */\n      0xa0\n        /* \"#utility.yul\":19549:19558   */\n      dup3\n        /* \"#utility.yul\":19545:19564   */\n      add\n        /* \"#utility.yul\":19537:19564   */\n      swap1\n      pop\n        /* \"#utility.yul\":19574:19645   */\n      tag_600\n        /* \"#utility.yul\":19642:19643   */\n      0x00\n        /* \"#utility.yul\":19631:19640   */\n      dup4\n        /* \"#utility.yul\":19627:19644   */\n      add\n        /* \"#utility.yul\":19618:19624   */\n      dup9\n        /* \"#utility.yul\":19574:19645   */\n      tag_368\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":19655:19727   */\n      tag_601\n        /* \"#utility.yul\":19723:19725   */\n      0x20\n        /* \"#utility.yul\":19712:19721   */\n      dup4\n        /* \"#utility.yul\":19708:19726   */\n      add\n        /* \"#utility.yul\":19699:19705   */\n      dup8\n        /* \"#utility.yul\":19655:19727   */\n      tag_368\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":19737:19809   */\n      tag_602\n        /* \"#utility.yul\":19805:19807   */\n      0x40\n        /* \"#utility.yul\":19794:19803   */\n      dup4\n        /* \"#utility.yul\":19790:19808   */\n      add\n        /* \"#utility.yul\":19781:19787   */\n      dup7\n        /* \"#utility.yul\":19737:19809   */\n      tag_368\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":19819:19891   */\n      tag_603\n        /* \"#utility.yul\":19887:19889   */\n      0x60\n        /* \"#utility.yul\":19876:19885   */\n      dup4\n        /* \"#utility.yul\":19872:19890   */\n      add\n        /* \"#utility.yul\":19863:19869   */\n      dup6\n        /* \"#utility.yul\":19819:19891   */\n      tag_364\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":19901:19974   */\n      tag_604\n        /* \"#utility.yul\":19969:19972   */\n      0x80\n        /* \"#utility.yul\":19958:19967   */\n      dup4\n        /* \"#utility.yul\":19954:19973   */\n      add\n        /* \"#utility.yul\":19945:19951   */\n      dup5\n        /* \"#utility.yul\":19901:19974   */\n      tag_371\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":19317:19981   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19987:20532   */\n    tag_308:\n        /* \"#utility.yul\":20160:20164   */\n      0x00\n        /* \"#utility.yul\":20198:20201   */\n      0x80\n        /* \"#utility.yul\":20187:20196   */\n      dup3\n        /* \"#utility.yul\":20183:20202   */\n      add\n        /* \"#utility.yul\":20175:20202   */\n      swap1\n      pop\n        /* \"#utility.yul\":20212:20283   */\n      tag_606\n        /* \"#utility.yul\":20280:20281   */\n      0x00\n        /* \"#utility.yul\":20269:20278   */\n      dup4\n        /* \"#utility.yul\":20265:20282   */\n      add\n        /* \"#utility.yul\":20256:20262   */\n      dup8\n        /* \"#utility.yul\":20212:20283   */\n      tag_368\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":20293:20361   */\n      tag_607\n        /* \"#utility.yul\":20357:20359   */\n      0x20\n        /* \"#utility.yul\":20346:20355   */\n      dup4\n        /* \"#utility.yul\":20342:20360   */\n      add\n        /* \"#utility.yul\":20333:20339   */\n      dup7\n        /* \"#utility.yul\":20293:20361   */\n      tag_366\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":20371:20443   */\n      tag_608\n        /* \"#utility.yul\":20439:20441   */\n      0x40\n        /* \"#utility.yul\":20428:20437   */\n      dup4\n        /* \"#utility.yul\":20424:20442   */\n      add\n        /* \"#utility.yul\":20415:20421   */\n      dup6\n        /* \"#utility.yul\":20371:20443   */\n      tag_368\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":20453:20525   */\n      tag_609\n        /* \"#utility.yul\":20521:20523   */\n      0x60\n        /* \"#utility.yul\":20510:20519   */\n      dup4\n        /* \"#utility.yul\":20506:20524   */\n      add\n        /* \"#utility.yul\":20497:20503   */\n      dup5\n        /* \"#utility.yul\":20453:20525   */\n      tag_368\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":19987:20532   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20538:20718   */\n    tag_315:\n        /* \"#utility.yul\":20586:20663   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20583:20584   */\n      0x00\n        /* \"#utility.yul\":20576:20664   */\n      mstore\n        /* \"#utility.yul\":20683:20687   */\n      0x21\n        /* \"#utility.yul\":20680:20681   */\n      0x04\n        /* \"#utility.yul\":20673:20688   */\n      mstore\n        /* \"#utility.yul\":20707:20711   */\n      0x24\n        /* \"#utility.yul\":20704:20705   */\n      0x00\n        /* \"#utility.yul\":20697:20712   */\n      revert\n\n    auxdata: 0xa26469706673582212202863a85ac47b5d9ae1b1bd47376db3b288f0ab83184c876f759788f57eb9746764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2289": {
									"entryPoint": null,
									"id": 2289,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3714": {
									"entryPoint": null,
									"id": 3714,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_407": {
									"entryPoint": null,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_997": {
									"entryPoint": null,
									"id": 997,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2336": {
									"entryPoint": 781,
									"id": 2336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1176": {
									"entryPoint": 689,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_354": {
									"entryPoint": 873,
									"id": 354,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getStringSlot_1566": {
									"entryPoint": 1174,
									"id": 1566,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_1420": {
									"entryPoint": 696,
									"id": 1420,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_1322": {
									"entryPoint": 1068,
									"id": 1322,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 2160,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1644,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 2448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1380,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1531,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9041:20",
										"nodeType": "YulBlock",
										"src": "0:9041:20",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:20",
													"nodeType": "YulBlock",
													"src": "66:40:20",
													"statements": [
														{
															"nativeSrc": "77:22:20",
															"nodeType": "YulAssignment",
															"src": "77:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:20"
																},
																"nativeSrc": "87:12:20",
																"nodeType": "YulFunctionCall",
																"src": "87:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:20",
														"nodeType": "YulTypedName",
														"src": "49:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:20",
														"nodeType": "YulTypedName",
														"src": "59:6:20",
														"type": ""
													}
												],
												"src": "7:99:20"
											},
											{
												"body": {
													"nativeSrc": "140:152:20",
													"nodeType": "YulBlock",
													"src": "140:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:20",
																		"nodeType": "YulLiteral",
																		"src": "157:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:20",
																		"nodeType": "YulLiteral",
																		"src": "160:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:20"
																},
																"nativeSrc": "150:88:20",
																"nodeType": "YulFunctionCall",
																"src": "150:88:20"
															},
															"nativeSrc": "150:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:20",
																		"nodeType": "YulLiteral",
																		"src": "254:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:20",
																		"nodeType": "YulLiteral",
																		"src": "257:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:20"
																},
																"nativeSrc": "247:15:20",
																"nodeType": "YulFunctionCall",
																"src": "247:15:20"
															},
															"nativeSrc": "247:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:20",
																		"nodeType": "YulLiteral",
																		"src": "278:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:20",
																		"nodeType": "YulLiteral",
																		"src": "281:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:20"
																},
																"nativeSrc": "271:15:20",
																"nodeType": "YulFunctionCall",
																"src": "271:15:20"
															},
															"nativeSrc": "271:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:20"
											},
											{
												"body": {
													"nativeSrc": "326:152:20",
													"nodeType": "YulBlock",
													"src": "326:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:20",
																		"nodeType": "YulLiteral",
																		"src": "343:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:20",
																		"nodeType": "YulLiteral",
																		"src": "346:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:20"
																},
																"nativeSrc": "336:88:20",
																"nodeType": "YulFunctionCall",
																"src": "336:88:20"
															},
															"nativeSrc": "336:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:20",
																		"nodeType": "YulLiteral",
																		"src": "440:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:20",
																		"nodeType": "YulLiteral",
																		"src": "443:4:20",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:20"
																},
																"nativeSrc": "433:15:20",
																"nodeType": "YulFunctionCall",
																"src": "433:15:20"
															},
															"nativeSrc": "433:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:20",
																		"nodeType": "YulLiteral",
																		"src": "464:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:20",
																		"nodeType": "YulLiteral",
																		"src": "467:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:20"
																},
																"nativeSrc": "457:15:20",
																"nodeType": "YulFunctionCall",
																"src": "457:15:20"
															},
															"nativeSrc": "457:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:20"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:20"
											},
											{
												"body": {
													"nativeSrc": "535:269:20",
													"nodeType": "YulBlock",
													"src": "535:269:20",
													"statements": [
														{
															"nativeSrc": "545:22:20",
															"nodeType": "YulAssignment",
															"src": "545:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:20",
																		"nodeType": "YulLiteral",
																		"src": "565:1:20",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:20"
																},
																"nativeSrc": "555:12:20",
																"nodeType": "YulFunctionCall",
																"src": "555:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:20"
																}
															]
														},
														{
															"nativeSrc": "576:38:20",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:20",
																		"nodeType": "YulLiteral",
																		"src": "612:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:20"
																},
																"nativeSrc": "602:12:20",
																"nodeType": "YulFunctionCall",
																"src": "602:12:20"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:20",
																	"nodeType": "YulTypedName",
																	"src": "580:18:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:20",
																"nodeType": "YulBlock",
																"src": "653:51:20",
																"statements": [
																	{
																		"nativeSrc": "667:27:20",
																		"nodeType": "YulAssignment",
																		"src": "667:27:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:20",
																					"nodeType": "YulLiteral",
																					"src": "689:4:20",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:20"
																			},
																			"nativeSrc": "677:17:20",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:20"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:20"
																},
																"nativeSrc": "626:26:20",
																"nodeType": "YulFunctionCall",
																"src": "626:26:20"
															},
															"nativeSrc": "623:81:20",
															"nodeType": "YulIf",
															"src": "623:81:20"
														},
														{
															"body": {
																"nativeSrc": "756:42:20",
																"nodeType": "YulBlock",
																"src": "756:42:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:20"
																			},
																			"nativeSrc": "770:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:20"
																		},
																		"nativeSrc": "770:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:20",
																				"nodeType": "YulLiteral",
																				"src": "751:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:20"
																		},
																		"nativeSrc": "740:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:20"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:20"
																},
																"nativeSrc": "717:38:20",
																"nodeType": "YulFunctionCall",
																"src": "717:38:20"
															},
															"nativeSrc": "714:84:20",
															"nodeType": "YulIf",
															"src": "714:84:20"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:20",
														"nodeType": "YulTypedName",
														"src": "519:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:20",
														"nodeType": "YulTypedName",
														"src": "528:6:20",
														"type": ""
													}
												],
												"src": "484:320:20"
											},
											{
												"body": {
													"nativeSrc": "864:87:20",
													"nodeType": "YulBlock",
													"src": "864:87:20",
													"statements": [
														{
															"nativeSrc": "874:11:20",
															"nodeType": "YulAssignment",
															"src": "874:11:20",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:20",
																"nodeType": "YulIdentifier",
																"src": "882:3:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:20",
																		"nodeType": "YulLiteral",
																		"src": "902:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:20"
																},
																"nativeSrc": "895:14:20",
																"nodeType": "YulFunctionCall",
																"src": "895:14:20"
															},
															"nativeSrc": "895:14:20",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:20"
														},
														{
															"nativeSrc": "918:26:20",
															"nodeType": "YulAssignment",
															"src": "918:26:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:20",
																		"nodeType": "YulLiteral",
																		"src": "936:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:20",
																		"nodeType": "YulLiteral",
																		"src": "939:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:20"
																},
																"nativeSrc": "926:18:20",
																"nodeType": "YulFunctionCall",
																"src": "926:18:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:20"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:20",
														"nodeType": "YulTypedName",
														"src": "851:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:20",
														"nodeType": "YulTypedName",
														"src": "859:4:20",
														"type": ""
													}
												],
												"src": "810:141:20"
											},
											{
												"body": {
													"nativeSrc": "1001:49:20",
													"nodeType": "YulBlock",
													"src": "1001:49:20",
													"statements": [
														{
															"nativeSrc": "1011:33:20",
															"nodeType": "YulAssignment",
															"src": "1011:33:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:20",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:20"
																		},
																		"nativeSrc": "1025:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:20"
																},
																"nativeSrc": "1021:23:20",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:20"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:20",
														"nodeType": "YulTypedName",
														"src": "984:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:20",
														"nodeType": "YulTypedName",
														"src": "994:6:20",
														"type": ""
													}
												],
												"src": "957:93:20"
											},
											{
												"body": {
													"nativeSrc": "1109:54:20",
													"nodeType": "YulBlock",
													"src": "1109:54:20",
													"statements": [
														{
															"nativeSrc": "1119:37:20",
															"nodeType": "YulAssignment",
															"src": "1119:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:20"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:20"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:20"
																},
																"nativeSrc": "1140:16:20",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:20"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:20"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:20",
														"nodeType": "YulTypedName",
														"src": "1084:4:20",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:20",
														"nodeType": "YulTypedName",
														"src": "1090:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:20",
														"nodeType": "YulTypedName",
														"src": "1100:8:20",
														"type": ""
													}
												],
												"src": "1056:107:20"
											},
											{
												"body": {
													"nativeSrc": "1245:317:20",
													"nodeType": "YulBlock",
													"src": "1245:317:20",
													"statements": [
														{
															"nativeSrc": "1255:35:20",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:20",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:20",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:20"
																},
																"nativeSrc": "1272:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:20"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:20",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:20",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:20",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:20",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:20"
																},
																"nativeSrc": "1311:97:20",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:20"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:20",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:20",
															"nodeType": "YulAssignment",
															"src": "1417:51:20",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:20"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:20"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:20"
																},
																"nativeSrc": "1429:39:20",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:20"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:20"
																}
															]
														},
														{
															"nativeSrc": "1477:30:20",
															"nodeType": "YulAssignment",
															"src": "1477:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:20"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:20"
																		},
																		"nativeSrc": "1497:9:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:20"
																},
																"nativeSrc": "1486:21:20",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:20"
																}
															]
														},
														{
															"nativeSrc": "1516:40:20",
															"nodeType": "YulAssignment",
															"src": "1516:40:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:20",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:20"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:20"
																		},
																		"nativeSrc": "1536:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:20"
																},
																"nativeSrc": "1526:30:20",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:20"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:20",
														"nodeType": "YulTypedName",
														"src": "1206:5:20",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:20",
														"nodeType": "YulTypedName",
														"src": "1213:10:20",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:20",
														"nodeType": "YulTypedName",
														"src": "1225:8:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:20",
														"nodeType": "YulTypedName",
														"src": "1238:6:20",
														"type": ""
													}
												],
												"src": "1169:393:20"
											},
											{
												"body": {
													"nativeSrc": "1613:32:20",
													"nodeType": "YulBlock",
													"src": "1613:32:20",
													"statements": [
														{
															"nativeSrc": "1623:16:20",
															"nodeType": "YulAssignment",
															"src": "1623:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:20",
																"nodeType": "YulIdentifier",
																"src": "1634:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:20",
														"nodeType": "YulTypedName",
														"src": "1595:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:20",
														"nodeType": "YulTypedName",
														"src": "1605:7:20",
														"type": ""
													}
												],
												"src": "1568:77:20"
											},
											{
												"body": {
													"nativeSrc": "1683:28:20",
													"nodeType": "YulBlock",
													"src": "1683:28:20",
													"statements": [
														{
															"nativeSrc": "1693:12:20",
															"nodeType": "YulAssignment",
															"src": "1693:12:20",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:20",
																"nodeType": "YulIdentifier",
																"src": "1700:5:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:20"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:20",
														"nodeType": "YulTypedName",
														"src": "1669:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:20",
														"nodeType": "YulTypedName",
														"src": "1679:3:20",
														"type": ""
													}
												],
												"src": "1651:60:20"
											},
											{
												"body": {
													"nativeSrc": "1777:82:20",
													"nodeType": "YulBlock",
													"src": "1777:82:20",
													"statements": [
														{
															"nativeSrc": "1787:66:20",
															"nodeType": "YulAssignment",
															"src": "1787:66:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:20"
																				},
																				"nativeSrc": "1827:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:20"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:20",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:20"
																		},
																		"nativeSrc": "1818:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:20"
																},
																"nativeSrc": "1800:53:20",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:20",
														"nodeType": "YulTypedName",
														"src": "1757:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:20",
														"nodeType": "YulTypedName",
														"src": "1767:9:20",
														"type": ""
													}
												],
												"src": "1717:142:20"
											},
											{
												"body": {
													"nativeSrc": "1912:28:20",
													"nodeType": "YulBlock",
													"src": "1912:28:20",
													"statements": [
														{
															"nativeSrc": "1922:12:20",
															"nodeType": "YulAssignment",
															"src": "1922:12:20",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:20",
																"nodeType": "YulIdentifier",
																"src": "1929:5:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:20"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:20",
														"nodeType": "YulTypedName",
														"src": "1898:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:20",
														"nodeType": "YulTypedName",
														"src": "1908:3:20",
														"type": ""
													}
												],
												"src": "1865:75:20"
											},
											{
												"body": {
													"nativeSrc": "2022:193:20",
													"nodeType": "YulBlock",
													"src": "2022:193:20",
													"statements": [
														{
															"nativeSrc": "2032:63:20",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:20",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:20",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:20"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:20",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:20"
																},
																"nativeSrc": "2056:39:20",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:20"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:20",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:20",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:20"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:20"
																				},
																				"nativeSrc": "2145:11:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:20"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:20",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:20"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:20",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:20"
																				},
																				"nativeSrc": "2166:41:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:20"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:20",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:20"
																		},
																		"nativeSrc": "2117:91:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:20"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:20"
																},
																"nativeSrc": "2104:105:20",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:20"
															},
															"nativeSrc": "2104:105:20",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:20"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:20",
														"nodeType": "YulTypedName",
														"src": "1999:4:20",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:20",
														"nodeType": "YulTypedName",
														"src": "2005:6:20",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:20",
														"nodeType": "YulTypedName",
														"src": "2013:7:20",
														"type": ""
													}
												],
												"src": "1946:269:20"
											},
											{
												"body": {
													"nativeSrc": "2270:24:20",
													"nodeType": "YulBlock",
													"src": "2270:24:20",
													"statements": [
														{
															"nativeSrc": "2280:8:20",
															"nodeType": "YulAssignment",
															"src": "2280:8:20",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:20",
																"nodeType": "YulLiteral",
																"src": "2287:1:20",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:20"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:20",
														"nodeType": "YulTypedName",
														"src": "2266:3:20",
														"type": ""
													}
												],
												"src": "2221:73:20"
											},
											{
												"body": {
													"nativeSrc": "2353:136:20",
													"nodeType": "YulBlock",
													"src": "2353:136:20",
													"statements": [
														{
															"nativeSrc": "2363:46:20",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:20",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:20",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:20"
																},
																"nativeSrc": "2377:32:20",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:20"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:20",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:20"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:20"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:20"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:20"
																},
																"nativeSrc": "2418:65:20",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:20"
															},
															"nativeSrc": "2418:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:20"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:20",
														"nodeType": "YulTypedName",
														"src": "2339:4:20",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:20",
														"nodeType": "YulTypedName",
														"src": "2345:6:20",
														"type": ""
													}
												],
												"src": "2300:189:20"
											},
											{
												"body": {
													"nativeSrc": "2545:136:20",
													"nodeType": "YulBlock",
													"src": "2545:136:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:20",
																"nodeType": "YulBlock",
																"src": "2612:63:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:20",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:20"
																			},
																			"nativeSrc": "2626:39:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:20"
																		},
																		"nativeSrc": "2626:39:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:20"
																},
																"nativeSrc": "2562:14:20",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:20"
															},
															"nativeSrc": "2555:120:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:20",
																"nodeType": "YulBlock",
																"src": "2577:26:20",
																"statements": [
																	{
																		"nativeSrc": "2579:22:20",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:20",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:20"
																			},
																			"nativeSrc": "2588:13:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:20"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:20",
																"nodeType": "YulBlock",
																"src": "2559:2:20",
																"statements": []
															},
															"src": "2555:120:20"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:20",
														"nodeType": "YulTypedName",
														"src": "2533:5:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:20",
														"nodeType": "YulTypedName",
														"src": "2540:3:20",
														"type": ""
													}
												],
												"src": "2495:186:20"
											},
											{
												"body": {
													"nativeSrc": "2766:464:20",
													"nodeType": "YulBlock",
													"src": "2766:464:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:20",
																"nodeType": "YulBlock",
																"src": "2792:431:20",
																"statements": [
																	{
																		"nativeSrc": "2806:54:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:20"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:20",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:20"
																			},
																			"nativeSrc": "2822:38:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:20"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:20",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:20",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:20",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:20"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:20",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:20"
																					},
																					"nativeSrc": "2906:29:20",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:20"
																			},
																			"nativeSrc": "2892:44:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:20"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:20",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:20",
																			"nodeType": "YulBlock",
																			"src": "3093:27:20",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:20",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:20",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:20",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:20"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:20",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:20"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:20",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:20",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:20",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:20",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:20"
																			},
																			"nativeSrc": "3074:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:20"
																		},
																		"nativeSrc": "3071:49:20",
																		"nodeType": "YulIf",
																		"src": "3071:49:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:20",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:20",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:20"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:20"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:20",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:20"
																							},
																							"nativeSrc": "3189:22:20",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:20"
																					},
																					"nativeSrc": "3175:37:20",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:20"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:20",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:20"
																			},
																			"nativeSrc": "3133:80:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:20"
																		},
																		"nativeSrc": "3133:80:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:20",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:20"
																},
																"nativeSrc": "2780:11:20",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:20"
															},
															"nativeSrc": "2777:446:20",
															"nodeType": "YulIf",
															"src": "2777:446:20"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:20",
														"nodeType": "YulTypedName",
														"src": "2742:5:20",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:20",
														"nodeType": "YulTypedName",
														"src": "2749:3:20",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:20",
														"nodeType": "YulTypedName",
														"src": "2754:10:20",
														"type": ""
													}
												],
												"src": "2687:543:20"
											},
											{
												"body": {
													"nativeSrc": "3299:54:20",
													"nodeType": "YulBlock",
													"src": "3299:54:20",
													"statements": [
														{
															"nativeSrc": "3309:37:20",
															"nodeType": "YulAssignment",
															"src": "3309:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:20"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:20"
																},
																"nativeSrc": "3330:16:20",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:20"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:20"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:20",
														"nodeType": "YulTypedName",
														"src": "3274:4:20",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:20",
														"nodeType": "YulTypedName",
														"src": "3280:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:20",
														"nodeType": "YulTypedName",
														"src": "3290:8:20",
														"type": ""
													}
												],
												"src": "3236:117:20"
											},
											{
												"body": {
													"nativeSrc": "3410:118:20",
													"nodeType": "YulBlock",
													"src": "3410:118:20",
													"statements": [
														{
															"nativeSrc": "3420:68:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:20",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:20",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:20"
																				},
																				"nativeSrc": "3465:13:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:20"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:20",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:20",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:20"
																				},
																				"nativeSrc": "3480:6:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:20"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:20",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:20"
																		},
																		"nativeSrc": "3436:51:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:20"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:20"
																},
																"nativeSrc": "3432:56:20",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:20"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:20",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:20",
															"nodeType": "YulAssignment",
															"src": "3497:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:20"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:20"
																},
																"nativeSrc": "3507:15:20",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:20"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:20",
														"nodeType": "YulTypedName",
														"src": "3387:4:20",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:20",
														"nodeType": "YulTypedName",
														"src": "3393:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:20",
														"nodeType": "YulTypedName",
														"src": "3403:6:20",
														"type": ""
													}
												],
												"src": "3359:169:20"
											},
											{
												"body": {
													"nativeSrc": "3614:214:20",
													"nodeType": "YulBlock",
													"src": "3614:214:20",
													"statements": [
														{
															"nativeSrc": "3747:37:20",
															"nodeType": "YulAssignment",
															"src": "3747:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:20"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:20"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:20"
																},
																"nativeSrc": "3755:29:20",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:20"
																}
															]
														},
														{
															"nativeSrc": "3793:29:20",
															"nodeType": "YulAssignment",
															"src": "3793:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:20",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:20",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:20"
																		},
																		"nativeSrc": "3810:11:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:20"
																},
																"nativeSrc": "3801:21:20",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:20"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:20"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:20",
														"nodeType": "YulTypedName",
														"src": "3595:4:20",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:20",
														"nodeType": "YulTypedName",
														"src": "3601:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:20",
														"nodeType": "YulTypedName",
														"src": "3609:4:20",
														"type": ""
													}
												],
												"src": "3533:295:20"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:20",
													"nodeType": "YulBlock",
													"src": "3925:1303:20",
													"statements": [
														{
															"nativeSrc": "3936:51:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:20",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:20"
																},
																"nativeSrc": "3950:37:20",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:20"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:20",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:20",
																"nodeType": "YulBlock",
																"src": "4072:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:20"
																			},
																			"nativeSrc": "4074:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:20"
																		},
																		"nativeSrc": "4074:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:20",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:20"
																},
																"nativeSrc": "4041:30:20",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:20"
															},
															"nativeSrc": "4038:56:20",
															"nodeType": "YulIf",
															"src": "4038:56:20"
														},
														{
															"nativeSrc": "4104:52:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:20"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:20",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:20"
																		},
																		"nativeSrc": "4144:11:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:20"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:20",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:20"
																},
																"nativeSrc": "4118:38:20",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:20"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:20",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:20"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:20"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:20"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:20",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:20"
																},
																"nativeSrc": "4203:67:20",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:20"
															},
															"nativeSrc": "4203:67:20",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:20"
														},
														{
															"nativeSrc": "4280:18:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:20",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:20",
																"nodeType": "YulLiteral",
																"src": "4297:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:20",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:20",
															"nodeType": "YulAssignment",
															"src": "4308:17:20",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:20",
																"nodeType": "YulLiteral",
																"src": "4321:4:20",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:20"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:20",
																		"nodeType": "YulBlock",
																		"src": "4372:611:20",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:20",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:20"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:20",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:20",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:20"
																							},
																							"nativeSrc": "4413:9:20",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:20"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:20"
																					},
																					"nativeSrc": "4401:22:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:20"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:20",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:20",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:20"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:20",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:20"
																					},
																					"nativeSrc": "4451:37:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:20"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:20",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:20",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:20",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:20",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:20",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:20",
																					"nodeType": "YulBlock",
																					"src": "4569:163:20",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:20"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:20",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:20"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:20",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:20"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:20",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:20"
																												},
																												"nativeSrc": "4608:19:20",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:20"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:20",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:20"
																										},
																										"nativeSrc": "4602:26:20",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:20"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:20"
																								},
																								"nativeSrc": "4587:42:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:20"
																							},
																							"nativeSrc": "4587:42:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:20"
																						},
																						{
																							"nativeSrc": "4646:24:20",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:20",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:20",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:20"
																								},
																								"nativeSrc": "4656:14:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:20"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:20"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:20",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:20",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:20",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:20",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:20"
																								},
																								"nativeSrc": "4700:18:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:20"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:20",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:20"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:20",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:20"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:20",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:20"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:20"
																					},
																					"nativeSrc": "4532:14:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:20"
																				},
																				"nativeSrc": "4524:208:20",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:20",
																					"nodeType": "YulBlock",
																					"src": "4547:21:20",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:20",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:20",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:20",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:20",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:20"
																								},
																								"nativeSrc": "4554:12:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:20"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:20",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:20"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:20",
																					"nodeType": "YulBlock",
																					"src": "4528:3:20",
																					"statements": []
																				},
																				"src": "4524:208:20"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:20",
																					"nodeType": "YulBlock",
																					"src": "4768:156:20",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:20",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:20",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:20",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:20"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:20"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:20",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:20"
																										},
																										"nativeSrc": "4809:19:20",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:20"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:20"
																								},
																								"nativeSrc": "4803:26:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:20"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:20",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:20",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:20"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:20"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:20",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:20"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:20",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:20",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:20",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:20"
																												},
																												"nativeSrc": "4891:17:20",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:20"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:20",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:20"
																										},
																										"nativeSrc": "4861:48:20",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:20"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:20"
																								},
																								"nativeSrc": "4846:64:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:20"
																							},
																							"nativeSrc": "4846:64:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:20"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:20",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:20"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:20"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:20"
																					},
																					"nativeSrc": "4748:19:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:20"
																				},
																				"nativeSrc": "4745:179:20",
																				"nodeType": "YulIf",
																				"src": "4745:179:20"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:20"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:20",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:20"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:20",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:20",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:20",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:20"
																									},
																									"nativeSrc": "4954:14:20",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:20"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:20",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:20",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:20"
																							},
																							"nativeSrc": "4950:22:20",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:20"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:20"
																					},
																					"nativeSrc": "4937:36:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:20"
																				},
																				"nativeSrc": "4937:36:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:20"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:20",
																	"nodeType": "YulCase",
																	"src": "4365:618:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:20",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:20",
																		"nodeType": "YulBlock",
																		"src": "5000:222:20",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:20",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:20",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:20",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:20",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:20",
																					"nodeType": "YulBlock",
																					"src": "5051:67:20",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:20",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:20",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:20",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:20"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:20"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:20",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:20"
																										},
																										"nativeSrc": "5084:19:20",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:20"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:20"
																								},
																								"nativeSrc": "5078:26:20",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:20"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:20"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:20"
																				},
																				"nativeSrc": "5041:77:20",
																				"nodeType": "YulIf",
																				"src": "5041:77:20"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:20"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:20"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:20"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:20",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:20"
																							},
																							"nativeSrc": "5144:67:20",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:20"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:20"
																					},
																					"nativeSrc": "5131:81:20",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:20"
																				},
																				"nativeSrc": "5131:81:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:20"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:20",
																	"nodeType": "YulCase",
																	"src": "4992:230:20",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:20",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:20"
																},
																"nativeSrc": "4342:14:20",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:20"
															},
															"nativeSrc": "4335:887:20",
															"nodeType": "YulSwitch",
															"src": "4335:887:20"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:20",
														"nodeType": "YulTypedName",
														"src": "3914:4:20",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:20",
														"nodeType": "YulTypedName",
														"src": "3920:3:20",
														"type": ""
													}
												],
												"src": "3833:1395:20"
											},
											{
												"body": {
													"nativeSrc": "5279:81:20",
													"nodeType": "YulBlock",
													"src": "5279:81:20",
													"statements": [
														{
															"nativeSrc": "5289:65:20",
															"nodeType": "YulAssignment",
															"src": "5289:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:20",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:20"
																},
																"nativeSrc": "5300:54:20",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:20",
														"nodeType": "YulTypedName",
														"src": "5261:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:20",
														"nodeType": "YulTypedName",
														"src": "5271:7:20",
														"type": ""
													}
												],
												"src": "5234:126:20"
											},
											{
												"body": {
													"nativeSrc": "5411:51:20",
													"nodeType": "YulBlock",
													"src": "5411:51:20",
													"statements": [
														{
															"nativeSrc": "5421:35:20",
															"nodeType": "YulAssignment",
															"src": "5421:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:20"
																},
																"nativeSrc": "5432:24:20",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:20",
														"nodeType": "YulTypedName",
														"src": "5393:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:20",
														"nodeType": "YulTypedName",
														"src": "5403:7:20",
														"type": ""
													}
												],
												"src": "5366:96:20"
											},
											{
												"body": {
													"nativeSrc": "5533:53:20",
													"nodeType": "YulBlock",
													"src": "5533:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:20"
																		},
																		"nativeSrc": "5555:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:20"
																},
																"nativeSrc": "5543:37:20",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:20"
															},
															"nativeSrc": "5543:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:20",
														"nodeType": "YulTypedName",
														"src": "5521:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:20",
														"nodeType": "YulTypedName",
														"src": "5528:3:20",
														"type": ""
													}
												],
												"src": "5468:118:20"
											},
											{
												"body": {
													"nativeSrc": "5690:124:20",
													"nodeType": "YulBlock",
													"src": "5690:124:20",
													"statements": [
														{
															"nativeSrc": "5700:26:20",
															"nodeType": "YulAssignment",
															"src": "5700:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:20"
																},
																"nativeSrc": "5708:18:20",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:20",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:20"
																		},
																		"nativeSrc": "5789:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:20"
																},
																"nativeSrc": "5736:71:20",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:20"
															},
															"nativeSrc": "5736:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:20",
														"nodeType": "YulTypedName",
														"src": "5662:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:20",
														"nodeType": "YulTypedName",
														"src": "5674:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:20",
														"nodeType": "YulTypedName",
														"src": "5685:4:20",
														"type": ""
													}
												],
												"src": "5592:222:20"
											},
											{
												"body": {
													"nativeSrc": "5865:32:20",
													"nodeType": "YulBlock",
													"src": "5865:32:20",
													"statements": [
														{
															"nativeSrc": "5875:16:20",
															"nodeType": "YulAssignment",
															"src": "5875:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "5886:5:20",
																"nodeType": "YulIdentifier",
																"src": "5886:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5875:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "5875:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5820:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5847:5:20",
														"nodeType": "YulTypedName",
														"src": "5847:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5857:7:20",
														"nodeType": "YulTypedName",
														"src": "5857:7:20",
														"type": ""
													}
												],
												"src": "5820:77:20"
											},
											{
												"body": {
													"nativeSrc": "5968:53:20",
													"nodeType": "YulBlock",
													"src": "5968:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5985:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5985:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6008:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "6008:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5990:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "5990:17:20"
																		},
																		"nativeSrc": "5990:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5990:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5978:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5978:6:20"
																},
																"nativeSrc": "5978:37:20",
																"nodeType": "YulFunctionCall",
																"src": "5978:37:20"
															},
															"nativeSrc": "5978:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "5978:37:20"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5903:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5956:5:20",
														"nodeType": "YulTypedName",
														"src": "5956:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5963:3:20",
														"nodeType": "YulTypedName",
														"src": "5963:3:20",
														"type": ""
													}
												],
												"src": "5903:118:20"
											},
											{
												"body": {
													"nativeSrc": "6092:53:20",
													"nodeType": "YulBlock",
													"src": "6092:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6109:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6109:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6132:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "6132:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6114:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "6114:17:20"
																		},
																		"nativeSrc": "6114:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6114:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6102:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6102:6:20"
																},
																"nativeSrc": "6102:37:20",
																"nodeType": "YulFunctionCall",
																"src": "6102:37:20"
															},
															"nativeSrc": "6102:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "6102:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6027:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6080:5:20",
														"nodeType": "YulTypedName",
														"src": "6080:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6087:3:20",
														"nodeType": "YulTypedName",
														"src": "6087:3:20",
														"type": ""
													}
												],
												"src": "6027:118:20"
											},
											{
												"body": {
													"nativeSrc": "6361:454:20",
													"nodeType": "YulBlock",
													"src": "6361:454:20",
													"statements": [
														{
															"nativeSrc": "6371:27:20",
															"nodeType": "YulAssignment",
															"src": "6371:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6383:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6383:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6394:3:20",
																		"nodeType": "YulLiteral",
																		"src": "6394:3:20",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6379:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6379:3:20"
																},
																"nativeSrc": "6379:19:20",
																"nodeType": "YulFunctionCall",
																"src": "6379:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6371:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6371:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6452:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6452:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6465:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6465:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6476:1:20",
																				"nodeType": "YulLiteral",
																				"src": "6476:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6461:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6461:3:20"
																		},
																		"nativeSrc": "6461:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6461:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6408:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "6408:43:20"
																},
																"nativeSrc": "6408:71:20",
																"nodeType": "YulFunctionCall",
																"src": "6408:71:20"
															},
															"nativeSrc": "6408:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "6408:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6533:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6533:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6546:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6546:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6557:2:20",
																				"nodeType": "YulLiteral",
																				"src": "6557:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6542:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6542:3:20"
																		},
																		"nativeSrc": "6542:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6542:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6489:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "6489:43:20"
																},
																"nativeSrc": "6489:72:20",
																"nodeType": "YulFunctionCall",
																"src": "6489:72:20"
															},
															"nativeSrc": "6489:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "6489:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6615:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6615:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6628:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6628:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6639:2:20",
																				"nodeType": "YulLiteral",
																				"src": "6639:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6624:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6624:3:20"
																		},
																		"nativeSrc": "6624:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6624:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6571:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "6571:43:20"
																},
																"nativeSrc": "6571:72:20",
																"nodeType": "YulFunctionCall",
																"src": "6571:72:20"
															},
															"nativeSrc": "6571:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "6571:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6697:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6697:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6710:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6710:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6721:2:20",
																				"nodeType": "YulLiteral",
																				"src": "6721:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6706:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6706:3:20"
																		},
																		"nativeSrc": "6706:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6706:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6653:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "6653:43:20"
																},
																"nativeSrc": "6653:72:20",
																"nodeType": "YulFunctionCall",
																"src": "6653:72:20"
															},
															"nativeSrc": "6653:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "6653:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6779:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6779:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6792:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6792:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6803:3:20",
																				"nodeType": "YulLiteral",
																				"src": "6803:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6788:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6788:3:20"
																		},
																		"nativeSrc": "6788:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6788:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6735:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "6735:43:20"
																},
																"nativeSrc": "6735:73:20",
																"nodeType": "YulFunctionCall",
																"src": "6735:73:20"
															},
															"nativeSrc": "6735:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "6735:73:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "6151:664:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6301:9:20",
														"nodeType": "YulTypedName",
														"src": "6301:9:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6313:6:20",
														"nodeType": "YulTypedName",
														"src": "6313:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6321:6:20",
														"nodeType": "YulTypedName",
														"src": "6321:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6329:6:20",
														"nodeType": "YulTypedName",
														"src": "6329:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6337:6:20",
														"nodeType": "YulTypedName",
														"src": "6337:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6345:6:20",
														"nodeType": "YulTypedName",
														"src": "6345:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6356:4:20",
														"nodeType": "YulTypedName",
														"src": "6356:4:20",
														"type": ""
													}
												],
												"src": "6151:664:20"
											},
											{
												"body": {
													"nativeSrc": "6917:73:20",
													"nodeType": "YulBlock",
													"src": "6917:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6934:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6934:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6939:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6939:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6927:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6927:6:20"
																},
																"nativeSrc": "6927:19:20",
																"nodeType": "YulFunctionCall",
																"src": "6927:19:20"
															},
															"nativeSrc": "6927:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "6927:19:20"
														},
														{
															"nativeSrc": "6955:29:20",
															"nodeType": "YulAssignment",
															"src": "6955:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6974:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6974:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6979:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6979:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6970:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6970:3:20"
																},
																"nativeSrc": "6970:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6970:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6955:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "6955:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6821:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6889:3:20",
														"nodeType": "YulTypedName",
														"src": "6889:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6894:6:20",
														"nodeType": "YulTypedName",
														"src": "6894:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6905:11:20",
														"nodeType": "YulTypedName",
														"src": "6905:11:20",
														"type": ""
													}
												],
												"src": "6821:169:20"
											},
											{
												"body": {
													"nativeSrc": "7058:184:20",
													"nodeType": "YulBlock",
													"src": "7058:184:20",
													"statements": [
														{
															"nativeSrc": "7068:10:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7068:10:20",
															"value": {
																"kind": "number",
																"nativeSrc": "7077:1:20",
																"nodeType": "YulLiteral",
																"src": "7077:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "7072:1:20",
																	"nodeType": "YulTypedName",
																	"src": "7072:1:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7137:63:20",
																"nodeType": "YulBlock",
																"src": "7137:63:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "7162:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "7162:3:20"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "7167:1:20",
																							"nodeType": "YulIdentifier",
																							"src": "7167:1:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7158:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "7158:3:20"
																					},
																					"nativeSrc": "7158:11:20",
																					"nodeType": "YulFunctionCall",
																					"src": "7158:11:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "7181:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "7181:3:20"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "7186:1:20",
																									"nodeType": "YulIdentifier",
																									"src": "7186:1:20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7177:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "7177:3:20"
																							},
																							"nativeSrc": "7177:11:20",
																							"nodeType": "YulFunctionCall",
																							"src": "7177:11:20"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7171:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "7171:5:20"
																					},
																					"nativeSrc": "7171:18:20",
																					"nodeType": "YulFunctionCall",
																					"src": "7171:18:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7151:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7151:6:20"
																			},
																			"nativeSrc": "7151:39:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7151:39:20"
																		},
																		"nativeSrc": "7151:39:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "7151:39:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7098:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7098:1:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7101:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7101:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7095:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "7095:2:20"
																},
																"nativeSrc": "7095:13:20",
																"nodeType": "YulFunctionCall",
																"src": "7095:13:20"
															},
															"nativeSrc": "7087:113:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7109:19:20",
																"nodeType": "YulBlock",
																"src": "7109:19:20",
																"statements": [
																	{
																		"nativeSrc": "7111:15:20",
																		"nodeType": "YulAssignment",
																		"src": "7111:15:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7120:1:20",
																					"nodeType": "YulIdentifier",
																					"src": "7120:1:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7123:2:20",
																					"nodeType": "YulLiteral",
																					"src": "7123:2:20",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7116:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "7116:3:20"
																			},
																			"nativeSrc": "7116:10:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7116:10:20"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7111:1:20",
																				"nodeType": "YulIdentifier",
																				"src": "7111:1:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7091:3:20",
																"nodeType": "YulBlock",
																"src": "7091:3:20",
																"statements": []
															},
															"src": "7087:113:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7220:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "7220:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7225:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7225:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7216:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:20"
																		},
																		"nativeSrc": "7216:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7216:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7234:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7234:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7209:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7209:6:20"
																},
																"nativeSrc": "7209:27:20",
																"nodeType": "YulFunctionCall",
																"src": "7209:27:20"
															},
															"nativeSrc": "7209:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "7209:27:20"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6996:246:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7040:3:20",
														"nodeType": "YulTypedName",
														"src": "7040:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7045:3:20",
														"nodeType": "YulTypedName",
														"src": "7045:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7050:6:20",
														"nodeType": "YulTypedName",
														"src": "7050:6:20",
														"type": ""
													}
												],
												"src": "6996:246:20"
											},
											{
												"body": {
													"nativeSrc": "7296:54:20",
													"nodeType": "YulBlock",
													"src": "7296:54:20",
													"statements": [
														{
															"nativeSrc": "7306:38:20",
															"nodeType": "YulAssignment",
															"src": "7306:38:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7324:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "7324:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7331:2:20",
																				"nodeType": "YulLiteral",
																				"src": "7331:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7320:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7320:3:20"
																		},
																		"nativeSrc": "7320:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7320:14:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7340:2:20",
																				"nodeType": "YulLiteral",
																				"src": "7340:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7336:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7336:3:20"
																		},
																		"nativeSrc": "7336:7:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7336:7:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7316:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7316:3:20"
																},
																"nativeSrc": "7316:28:20",
																"nodeType": "YulFunctionCall",
																"src": "7316:28:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7306:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7306:6:20"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "7248:102:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7279:5:20",
														"nodeType": "YulTypedName",
														"src": "7279:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7289:6:20",
														"nodeType": "YulTypedName",
														"src": "7289:6:20",
														"type": ""
													}
												],
												"src": "7248:102:20"
											},
											{
												"body": {
													"nativeSrc": "7448:285:20",
													"nodeType": "YulBlock",
													"src": "7448:285:20",
													"statements": [
														{
															"nativeSrc": "7458:53:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7458:53:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7505:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7505:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7472:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "7472:32:20"
																},
																"nativeSrc": "7472:39:20",
																"nodeType": "YulFunctionCall",
																"src": "7472:39:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7462:6:20",
																	"nodeType": "YulTypedName",
																	"src": "7462:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7520:78:20",
															"nodeType": "YulAssignment",
															"src": "7520:78:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7586:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7586:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7591:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7591:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7527:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "7527:58:20"
																},
																"nativeSrc": "7527:71:20",
																"nodeType": "YulFunctionCall",
																"src": "7527:71:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7520:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7520:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7646:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "7646:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7653:4:20",
																				"nodeType": "YulLiteral",
																				"src": "7653:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7642:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7642:3:20"
																		},
																		"nativeSrc": "7642:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7642:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7660:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7660:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7665:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7665:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7607:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "7607:34:20"
																},
																"nativeSrc": "7607:65:20",
																"nodeType": "YulFunctionCall",
																"src": "7607:65:20"
															},
															"nativeSrc": "7607:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "7607:65:20"
														},
														{
															"nativeSrc": "7681:46:20",
															"nodeType": "YulAssignment",
															"src": "7681:46:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7692:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7692:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7719:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7719:6:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7697:21:20",
																			"nodeType": "YulIdentifier",
																			"src": "7697:21:20"
																		},
																		"nativeSrc": "7697:29:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7697:29:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7688:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7688:3:20"
																},
																"nativeSrc": "7688:39:20",
																"nodeType": "YulFunctionCall",
																"src": "7688:39:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7681:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7681:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7356:377:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7429:5:20",
														"nodeType": "YulTypedName",
														"src": "7429:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7436:3:20",
														"nodeType": "YulTypedName",
														"src": "7436:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7444:3:20",
														"nodeType": "YulTypedName",
														"src": "7444:3:20",
														"type": ""
													}
												],
												"src": "7356:377:20"
											},
											{
												"body": {
													"nativeSrc": "7857:195:20",
													"nodeType": "YulBlock",
													"src": "7857:195:20",
													"statements": [
														{
															"nativeSrc": "7867:26:20",
															"nodeType": "YulAssignment",
															"src": "7867:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7879:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "7879:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7890:2:20",
																		"nodeType": "YulLiteral",
																		"src": "7890:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7875:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7875:3:20"
																},
																"nativeSrc": "7875:18:20",
																"nodeType": "YulFunctionCall",
																"src": "7875:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7867:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7867:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7914:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7914:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7925:1:20",
																				"nodeType": "YulLiteral",
																				"src": "7925:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7910:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7910:3:20"
																		},
																		"nativeSrc": "7910:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7910:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7933:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "7933:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7939:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7939:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7929:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7929:3:20"
																		},
																		"nativeSrc": "7929:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7929:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7903:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7903:6:20"
																},
																"nativeSrc": "7903:47:20",
																"nodeType": "YulFunctionCall",
																"src": "7903:47:20"
															},
															"nativeSrc": "7903:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "7903:47:20"
														},
														{
															"nativeSrc": "7959:86:20",
															"nodeType": "YulAssignment",
															"src": "7959:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8031:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8031:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8040:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8040:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7967:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "7967:63:20"
																},
																"nativeSrc": "7967:78:20",
																"nodeType": "YulFunctionCall",
																"src": "7967:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7959:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7959:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7739:313:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7829:9:20",
														"nodeType": "YulTypedName",
														"src": "7829:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7841:6:20",
														"nodeType": "YulTypedName",
														"src": "7841:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7852:4:20",
														"nodeType": "YulTypedName",
														"src": "7852:4:20",
														"type": ""
													}
												],
												"src": "7739:313:20"
											},
											{
												"body": {
													"nativeSrc": "8116:40:20",
													"nodeType": "YulBlock",
													"src": "8116:40:20",
													"statements": [
														{
															"nativeSrc": "8127:22:20",
															"nodeType": "YulAssignment",
															"src": "8127:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8143:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "8143:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8137:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "8137:5:20"
																},
																"nativeSrc": "8137:12:20",
																"nodeType": "YulFunctionCall",
																"src": "8137:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8127:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8127:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "8058:98:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8099:5:20",
														"nodeType": "YulTypedName",
														"src": "8099:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8109:6:20",
														"nodeType": "YulTypedName",
														"src": "8109:6:20",
														"type": ""
													}
												],
												"src": "8058:98:20"
											},
											{
												"body": {
													"nativeSrc": "8218:60:20",
													"nodeType": "YulBlock",
													"src": "8218:60:20",
													"statements": [
														{
															"nativeSrc": "8228:11:20",
															"nodeType": "YulAssignment",
															"src": "8228:11:20",
															"value": {
																"name": "ptr",
																"nativeSrc": "8236:3:20",
																"nodeType": "YulIdentifier",
																"src": "8236:3:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8228:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8228:4:20"
																}
															]
														},
														{
															"nativeSrc": "8249:22:20",
															"nodeType": "YulAssignment",
															"src": "8249:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8261:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "8261:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8266:4:20",
																		"nodeType": "YulLiteral",
																		"src": "8266:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8257:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8257:3:20"
																},
																"nativeSrc": "8257:14:20",
																"nodeType": "YulFunctionCall",
																"src": "8257:14:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8249:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8249:4:20"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nativeSrc": "8162:116:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8205:3:20",
														"nodeType": "YulTypedName",
														"src": "8205:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8213:4:20",
														"nodeType": "YulTypedName",
														"src": "8213:4:20",
														"type": ""
													}
												],
												"src": "8162:116:20"
											},
											{
												"body": {
													"nativeSrc": "8339:99:20",
													"nodeType": "YulBlock",
													"src": "8339:99:20",
													"statements": [
														{
															"nativeSrc": "8350:42:20",
															"nodeType": "YulVariableDeclaration",
															"src": "8350:42:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8387:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "8387:3:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8381:5:20",
																			"nodeType": "YulIdentifier",
																			"src": "8381:5:20"
																		},
																		"nativeSrc": "8381:10:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8381:10:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nativeSrc": "8363:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "8363:17:20"
																},
																"nativeSrc": "8363:29:20",
																"nodeType": "YulFunctionCall",
																"src": "8363:29:20"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8354:5:20",
																	"nodeType": "YulTypedName",
																	"src": "8354:5:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8402:29:20",
															"nodeType": "YulAssignment",
															"src": "8402:29:20",
															"value": {
																"name": "value",
																"nativeSrc": "8426:5:20",
																"nodeType": "YulIdentifier",
																"src": "8426:5:20"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8402:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "8402:11:20"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nativeSrc": "8284:154:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8319:3:20",
														"nodeType": "YulTypedName",
														"src": "8319:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "8327:11:20",
														"nodeType": "YulTypedName",
														"src": "8327:11:20",
														"type": ""
													}
												],
												"src": "8284:154:20"
											},
											{
												"body": {
													"nativeSrc": "8534:504:20",
													"nodeType": "YulBlock",
													"src": "8534:504:20",
													"statements": [
														{
															"nativeSrc": "8545:52:20",
															"nodeType": "YulVariableDeclaration",
															"src": "8545:52:20",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8591:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "8591:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "8559:31:20",
																	"nodeType": "YulIdentifier",
																	"src": "8559:31:20"
																},
																"nativeSrc": "8559:38:20",
																"nodeType": "YulFunctionCall",
																"src": "8559:38:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8549:6:20",
																	"nodeType": "YulTypedName",
																	"src": "8549:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8606:21:20",
															"nodeType": "YulVariableDeclaration",
															"src": "8606:21:20",
															"value": {
																"name": "array",
																"nativeSrc": "8622:5:20",
																"nodeType": "YulIdentifier",
																"src": "8622:5:20"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "8610:8:20",
																	"nodeType": "YulTypedName",
																	"src": "8610:8:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8637:52:20",
															"nodeType": "YulAssignment",
															"src": "8637:52:20",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8683:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "8683:5:20"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nativeSrc": "8649:33:20",
																	"nodeType": "YulIdentifier",
																	"src": "8649:33:20"
																},
																"nativeSrc": "8649:40:20",
																"nodeType": "YulFunctionCall",
																"src": "8649:40:20"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nativeSrc": "8637:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "8637:8:20"
																}
															]
														},
														{
															"nativeSrc": "8699:44:20",
															"nodeType": "YulAssignment",
															"src": "8699:44:20",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "8734:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "8734:8:20"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nativeSrc": "8708:25:20",
																	"nodeType": "YulIdentifier",
																	"src": "8708:25:20"
																},
																"nativeSrc": "8708:35:20",
																"nodeType": "YulFunctionCall",
																"src": "8708:35:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8699:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "8699:5:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8771:260:20",
																"nodeType": "YulBlock",
																"src": "8771:260:20",
																"statements": [
																	{
																		"nativeSrc": "8785:236:20",
																		"nodeType": "YulAssignment",
																		"src": "8785:236:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "8815:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "8815:5:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8882:1:20",
																									"nodeType": "YulLiteral",
																									"src": "8882:1:20",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "8889:2:20",
																											"nodeType": "YulLiteral",
																											"src": "8889:2:20",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "8893:6:20",
																											"nodeType": "YulIdentifier",
																											"src": "8893:6:20"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "8885:3:20",
																										"nodeType": "YulIdentifier",
																										"src": "8885:3:20"
																									},
																									"nativeSrc": "8885:15:20",
																									"nodeType": "YulFunctionCall",
																									"src": "8885:15:20"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "8878:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "8878:3:20"
																							},
																							"nativeSrc": "8878:23:20",
																							"nodeType": "YulFunctionCall",
																							"src": "8878:23:20"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8923:66:20",
																							"nodeType": "YulLiteral",
																							"src": "8923:66:20",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "8838:18:20",
																						"nodeType": "YulIdentifier",
																						"src": "8838:18:20"
																					},
																					"nativeSrc": "8838:169:20",
																					"nodeType": "YulFunctionCall",
																					"src": "8838:169:20"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8794:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "8794:3:20"
																			},
																			"nativeSrc": "8794:227:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8794:227:20"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "8785:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "8785:5:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8759:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8759:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8767:2:20",
																		"nodeType": "YulLiteral",
																		"src": "8767:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8756:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "8756:2:20"
																},
																"nativeSrc": "8756:14:20",
																"nodeType": "YulFunctionCall",
																"src": "8756:14:20"
															},
															"nativeSrc": "8753:278:20",
															"nodeType": "YulIf",
															"src": "8753:278:20"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "8444:594:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "8518:5:20",
														"nodeType": "YulTypedName",
														"src": "8518:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8528:5:20",
														"nodeType": "YulTypedName",
														"src": "8528:5:20",
														"type": ""
													}
												],
												"src": "8444:594:20"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0x2B1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5065706F20537461626C65636F696E0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x10C SWAP2 SWAP1 PUSH3 0x703 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x11E SWAP2 SWAP1 PUSH3 0x703 JUMP JUMPDEST POP POP POP PUSH3 0x137 PUSH1 0x5 DUP4 PUSH3 0x2B8 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x155 PUSH1 0x6 DUP3 PUSH3 0x2B8 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x194 PUSH3 0x30D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x245 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x23C SWAP2 SWAP1 PUSH3 0x82A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x256 DUP2 PUSH3 0x369 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH20 0x5F4EC3DF9CBD43714FE2740F5E3616155C5B8419 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xA15 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x2DD JUMPI PUSH3 0x2D5 DUP4 PUSH3 0x42C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x307 JUMP JUMPDEST DUP3 PUSH3 0x2EF DUP4 PUSH3 0x496 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH3 0x2FF SWAP2 SWAP1 PUSH3 0x703 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x34E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x870 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x47B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x472 SWAP2 SWAP1 PUSH3 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x489 SWAP1 PUSH3 0x9A6 JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x51B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x531 JUMPI PUSH3 0x530 PUSH3 0x4D6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x595 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x558 JUMP JUMPDEST PUSH3 0x5A1 DUP7 DUP4 PUSH3 0x558 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x5EB PUSH3 0x5E5 PUSH3 0x5DF DUP5 PUSH3 0x5B9 JUMP JUMPDEST PUSH3 0x5C2 JUMP JUMPDEST PUSH3 0x5B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x606 DUP4 PUSH3 0x5CB JUMP JUMPDEST PUSH3 0x61E PUSH3 0x615 DUP3 PUSH3 0x5F2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x564 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x634 PUSH3 0x626 JUMP JUMPDEST PUSH3 0x641 DUP2 DUP5 DUP5 PUSH3 0x5FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x668 JUMPI PUSH3 0x65C PUSH0 DUP3 PUSH3 0x62A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x647 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6B7 JUMPI PUSH3 0x681 DUP2 PUSH3 0x537 JUMP JUMPDEST PUSH3 0x68C DUP5 PUSH3 0x549 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x69C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6B4 PUSH3 0x6AB DUP6 PUSH3 0x549 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x646 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6D9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x6BC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6F3 DUP4 DUP4 PUSH3 0x6C8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x70E DUP3 PUSH3 0x49F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x72A JUMPI PUSH3 0x729 PUSH3 0x4A9 JUMP JUMPDEST JUMPDEST PUSH3 0x736 DUP3 SLOAD PUSH3 0x503 JUMP JUMPDEST PUSH3 0x743 DUP3 DUP3 DUP6 PUSH3 0x66C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x779 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x764 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x770 DUP6 DUP3 PUSH3 0x6E6 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x7DF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x789 DUP7 PUSH3 0x537 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x7B2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x78B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x7D2 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x7CE PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x6C8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x812 DUP3 PUSH3 0x7E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x824 DUP2 PUSH3 0x806 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x83F PUSH0 DUP4 ADD DUP5 PUSH3 0x819 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x859 DUP2 PUSH3 0x845 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x86A DUP2 PUSH3 0x5B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x885 PUSH0 DUP4 ADD DUP9 PUSH3 0x84E JUMP JUMPDEST PUSH3 0x894 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x84E JUMP JUMPDEST PUSH3 0x8A3 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x84E JUMP JUMPDEST PUSH3 0x8B2 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x85F JUMP JUMPDEST PUSH3 0x8C1 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x819 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x8FA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8DD JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x921 DUP3 PUSH3 0x49F JUMP JUMPDEST PUSH3 0x92D DUP2 DUP6 PUSH3 0x8CB JUMP JUMPDEST SWAP4 POP PUSH3 0x93F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x8DB JUMP JUMPDEST PUSH3 0x94A DUP2 PUSH3 0x905 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x96F DUP2 DUP5 PUSH3 0x915 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x99D DUP3 MLOAD PUSH3 0x845 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x9B2 DUP3 PUSH3 0x977 JUMP JUMPDEST DUP3 PUSH3 0x9BE DUP5 PUSH3 0x981 JUMP JUMPDEST SWAP1 POP PUSH3 0x9CB DUP2 PUSH3 0x990 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xA0E JUMPI PUSH3 0xA09 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x558 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2667 PUSH3 0xA67 PUSH0 CODECOPY PUSH0 PUSH2 0x11AC ADD MSTORE PUSH0 PUSH2 0x1171 ADD MSTORE PUSH0 PUSH2 0x1724 ADD MSTORE PUSH0 PUSH2 0x1703 ADD MSTORE PUSH0 PUSH2 0xFAC ADD MSTORE PUSH0 PUSH2 0x1002 ADD MSTORE PUSH0 PUSH2 0x102B ADD MSTORE PUSH2 0x2667 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xC5EBEAEC EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x457 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x2F865568 GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x2F865568 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x67C9B017 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x289 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x85B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35B PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0xB3C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x462 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0xD03 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x48E SWAP1 PUSH2 0x2140 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BA SWAP1 PUSH2 0x2140 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x505 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x505 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x519 PUSH2 0xD87 JUMP JUMPDEST SWAP1 POP PUSH2 0x526 DUP2 DUP6 DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x544 PUSH2 0xD87 JUMP JUMPDEST SWAP1 POP PUSH2 0x551 DUP6 DUP3 DUP6 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x55C DUP6 DUP6 DUP6 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x570 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x55 PUSH1 0x64 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5BD PUSH2 0x779 JUMP JUMPDEST PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP1 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0x70F PUSH2 0xD87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD9D00ED0DECBA63A0AD16A878DE20D30A429554F47B378787A818B7284DA17B5 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x757 SWAP3 SWAP2 SWAP1 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x774 PUSH2 0xFA9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x2376 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x863 PUSH2 0xF22 JUMP JUMPDEST PUSH2 0x86C PUSH0 PUSH2 0x105F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x878 DUP3 PUSH2 0x1122 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x890 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x898 PUSH2 0x11A3 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8B7 JUMPI PUSH2 0x8B6 PUSH2 0x23ED JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8E5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x95B SWAP1 PUSH2 0x2140 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x987 SWAP1 PUSH2 0x2140 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9E6 PUSH2 0xD87 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F3 DUP2 DUP6 DUP6 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4B DUP2 GT ISZERO PUSH2 0xA42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA39 SWAP1 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE PUSH2 0xA4C PUSH2 0x779 JUMP JUMPDEST PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0xADF PUSH2 0xAD9 PUSH2 0xD87 JUMP JUMPDEST DUP3 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0xAE7 PUSH2 0xD87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD9D00ED0DECBA63A0AD16A878DE20D30A429554F47B378787A818B7284DA17B5 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB2F SWAP3 SWAP2 SWAP1 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xB81 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xBAF DUP13 PUSH2 0x125D JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBC5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0xBE7 DUP3 PUSH2 0x12B0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBF6 DUP3 DUP8 DUP8 DUP8 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6A JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC61 SWAP3 SWAP2 SWAP1 PUSH2 0x24E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC75 DUP11 DUP11 DUP11 PUSH2 0xD8E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD0B PUSH2 0xF22 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD7B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0x105F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD9B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDAB DUP5 DUP5 PUSH2 0xC81 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xE2C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE1D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE14 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE99 SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF09 SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF1D DUP4 DUP4 DUP4 PUSH2 0x14C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF2A PUSH2 0xD87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF48 PUSH2 0x924 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFA7 JUMPI PUSH2 0xF6B PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1024 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1051 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x105C JUMP JUMPDEST PUSH2 0x1059 PUSH2 0x16DF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x119E PUSH1 0x5 PUSH32 0x0 PUSH2 0x1774 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11D9 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1774 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1259 PUSH0 DUP4 DUP4 PUSH2 0x14C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12C2 PUSH2 0x12BC PUSH2 0xFA9 JUMP JUMPDEST DUP4 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x12D9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x12E9 DUP3 DUP3 PUSH2 0x1948 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1367 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135E SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CE SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x14C0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x14B7 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1516 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x150A SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15E4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x159F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1596 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x162B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1675 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16D2 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1759 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x1790 JUMPI PUSH2 0x1789 DUP4 PUSH2 0x1AAA JUMP JUMPDEST SWAP1 POP PUSH2 0x181B JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x179C SWAP1 PUSH2 0x2140 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17C8 SWAP1 PUSH2 0x2140 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1813 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1813 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x189D JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x193E JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x18C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1931 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x193E JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x195B JUMPI PUSH2 0x195A PUSH2 0x2604 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x196E JUMPI PUSH2 0x196D PUSH2 0x2604 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1988 JUMPI PUSH2 0x1987 PUSH2 0x2604 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x199B JUMPI PUSH2 0x199A PUSH2 0x2604 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x19D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19E6 JUMPI PUSH2 0x19E5 PUSH2 0x2604 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19F9 JUMPI PUSH2 0x19F8 PUSH2 0x2604 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1A3D JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A34 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1A50 JUMPI PUSH2 0x1A4F PUSH2 0x2604 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A63 JUMPI PUSH2 0x1A62 PUSH2 0x2604 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1AA5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9C SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1AB6 DUP4 PUSH2 0x1B1C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AD4 JUMPI PUSH2 0x1AD3 PUSH2 0x23ED JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B06 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1B61 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B86 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC6 DUP3 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x1BD0 DUP2 DUP6 PUSH2 0x1B74 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BE0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x1BE9 DUP2 PUSH2 0x1BAC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C0C DUP2 DUP5 PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C41 DUP3 PUSH2 0x1C18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C51 DUP2 PUSH2 0x1C37 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C5B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C6C DUP2 PUSH2 0x1C48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C84 DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C9F DUP2 PUSH2 0x1C7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CBB JUMPI PUSH2 0x1CBA PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC8 DUP6 DUP3 DUP7 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CD9 DUP6 DUP3 DUP7 ADD PUSH2 0x1C91 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF7 DUP2 PUSH2 0x1CE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D10 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D1F DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D38 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D55 JUMPI PUSH2 0x1D54 PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D62 DUP7 DUP3 DUP8 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D73 DUP7 DUP3 DUP8 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D84 DUP7 DUP3 DUP8 ADD PUSH2 0x1C91 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA3 JUMPI PUSH2 0x1DA2 PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DB0 DUP5 DUP3 DUP6 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DCE DUP2 PUSH2 0x1DB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DE7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFF DUP2 PUSH2 0x1DED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E18 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E52 DUP2 PUSH2 0x1E1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1E61 DUP2 PUSH2 0x1C37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E99 DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAA DUP4 DUP4 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ECC DUP3 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x1ED6 DUP2 DUP6 PUSH2 0x1E71 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EE1 DUP4 PUSH2 0x1E81 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F11 JUMPI DUP2 MLOAD PUSH2 0x1EF8 DUP9 DUP3 PUSH2 0x1E9F JUMP JUMPDEST SWAP8 POP PUSH2 0x1F03 DUP4 PUSH2 0x1EB6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1EE4 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1F31 PUSH0 DUP4 ADD DUP11 PUSH2 0x1E49 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1F43 DUP2 DUP10 PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1F57 DUP2 DUP9 PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP PUSH2 0x1F66 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x1F73 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1E58 JUMP JUMPDEST PUSH2 0x1F80 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1DF6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1F92 DUP2 DUP5 PUSH2 0x1EC2 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FB3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FCE JUMPI PUSH2 0x1FCD PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FDB DUP5 DUP3 DUP6 ADD PUSH2 0x1C91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FED DUP2 PUSH2 0x1DB9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2008 DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2017 DUP2 PUSH2 0x1DED JUMP JUMPDEST DUP2 EQ PUSH2 0x2021 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2032 DUP2 PUSH2 0x200E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2053 JUMPI PUSH2 0x2052 PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2060 DUP11 DUP3 DUP12 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2071 DUP11 DUP3 DUP12 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2082 DUP11 DUP3 DUP12 ADD PUSH2 0x1C91 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2093 DUP11 DUP3 DUP12 ADD PUSH2 0x1C91 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x20A4 DUP11 DUP3 DUP12 ADD PUSH2 0x1FFA JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x20B5 DUP11 DUP3 DUP12 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x20C6 DUP11 DUP3 DUP12 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20EB JUMPI PUSH2 0x20EA PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20F8 DUP6 DUP3 DUP7 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2109 DUP6 DUP3 DUP7 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2157 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x216A JUMPI PUSH2 0x2169 PUSH2 0x2113 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21A7 DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x21B2 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x21C0 DUP2 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x21D7 JUMPI PUSH2 0x21D6 PUSH2 0x2170 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2215 DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2220 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2230 JUMPI PUSH2 0x222F PUSH2 0x21DE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63757272656E746C79206465707420746F20636F727265746572616C20726174 PUSH0 DUP3 ADD MSTORE PUSH32 0x696F206C657373207468616E2038352500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2295 PUSH1 0x30 DUP4 PUSH2 0x1B74 JUMP JUMPDEST SWAP2 POP PUSH2 0x22A0 DUP3 PUSH2 0x223B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22C2 DUP2 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22DC PUSH0 DUP4 ADD DUP6 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x22E9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CEE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x230E DUP2 PUSH2 0x22F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2318 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2329 DUP2 PUSH2 0x2305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2341 DUP2 PUSH2 0x232F JUMP JUMPDEST DUP2 EQ PUSH2 0x234B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x235C DUP2 PUSH2 0x2338 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2370 DUP2 PUSH2 0x1C7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x238F JUMPI PUSH2 0x238E PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239C DUP9 DUP3 DUP10 ADD PUSH2 0x231B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x23AD DUP9 DUP3 DUP10 ADD PUSH2 0x234E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x23BE DUP9 DUP3 DUP10 ADD PUSH2 0x2362 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x23CF DUP9 DUP3 DUP10 ADD PUSH2 0x2362 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x23E0 DUP9 DUP3 DUP10 ADD PUSH2 0x231B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x526174696F206D757374206C657373207468616E20657175616C203735250000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x244E PUSH1 0x1E DUP4 PUSH2 0x1B74 JUMP JUMPDEST SWAP2 POP PUSH2 0x2459 DUP3 PUSH2 0x241A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x247B DUP2 PUSH2 0x2442 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2495 PUSH0 DUP4 ADD DUP10 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x24A2 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1E58 JUMP JUMPDEST PUSH2 0x24AF PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1E58 JUMP JUMPDEST PUSH2 0x24BC PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x24C9 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x24D6 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1D16 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24F4 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E58 JUMP JUMPDEST PUSH2 0x2501 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E58 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x251B PUSH0 DUP4 ADD DUP7 PUSH2 0x1E58 JUMP JUMPDEST PUSH2 0x2528 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x2535 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D16 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2547 DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2552 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x2170 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2583 PUSH0 DUP4 ADD DUP9 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x2590 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x259D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x25AA PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x25B7 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1E58 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x25D4 PUSH0 DUP4 ADD DUP8 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x25E1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DC5 JUMP JUMPDEST PUSH2 0x25EE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x25FB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1DF6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 PUSH4 0xA85AC47B 0x5D SWAP11 0xE1 0xB1 0xBD SELFBALANCE CALLDATACOPY PUSH14 0xB3B288F0AB83184C876F759788F5 PUSH31 0xB9746764736F6C634300081600330000000000000000000000000000000000 ",
							"sourceMap": "321:1639:19:-:0;;;717:186;;;;;;;;;;792:12;:10;;;:12;;:::i;:::-;1574:52:6;;;;;;;;;;;;;;;;;1613:4;3328:431:15;;;;;;;;;;;;;;;;;1896:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:15;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:6;1297:1:3;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;853:42:19::3;816:12;;:80;;;;;;;;;;;;;;;;;;321:1639:::0;;656:96:9;709:7;735:10;728:17;;656:96;:::o;2914:340:11:-;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:15:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;2912:187:3:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1708:286:11:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:12:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;7:99:20:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:77::-;5857:7;5886:5;5875:16;;5820:77;;;:::o;5903:118::-;5990:24;6008:5;5990:24;:::i;:::-;5985:3;5978:37;5903:118;;:::o;6027:::-;6114:24;6132:5;6114:24;:::i;:::-;6109:3;6102:37;6027:118;;:::o;6151:664::-;6356:4;6394:3;6383:9;6379:19;6371:27;;6408:71;6476:1;6465:9;6461:17;6452:6;6408:71;:::i;:::-;6489:72;6557:2;6546:9;6542:18;6533:6;6489:72;:::i;:::-;6571;6639:2;6628:9;6624:18;6615:6;6571:72;:::i;:::-;6653;6721:2;6710:9;6706:18;6697:6;6653:72;:::i;:::-;6735:73;6803:3;6792:9;6788:19;6779:6;6735:73;:::i;:::-;6151:664;;;;;;;;:::o;6821:169::-;6905:11;6939:6;6934:3;6927:19;6979:4;6974:3;6970:14;6955:29;;6821:169;;;;:::o;6996:246::-;7077:1;7087:113;7101:6;7098:1;7095:13;7087:113;;;7186:1;7181:3;7177:11;7171:18;7167:1;7162:3;7158:11;7151:39;7123:2;7120:1;7116:10;7111:15;;7087:113;;;7234:1;7225:6;7220:3;7216:16;7209:27;7058:184;6996:246;;;:::o;7248:102::-;7289:6;7340:2;7336:7;7331:2;7324:5;7320:14;7316:28;7306:38;;7248:102;;;:::o;7356:377::-;7444:3;7472:39;7505:5;7472:39;:::i;:::-;7527:71;7591:6;7586:3;7527:71;:::i;:::-;7520:78;;7607:65;7665:6;7660:3;7653:4;7646:5;7642:16;7607:65;:::i;:::-;7697:29;7719:6;7697:29;:::i;:::-;7692:3;7688:39;7681:46;;7448:285;7356:377;;;;:::o;7739:313::-;7852:4;7890:2;7879:9;7875:18;7867:26;;7939:9;7933:4;7929:20;7925:1;7914:9;7910:17;7903:47;7967:78;8040:4;8031:6;7967:78;:::i;:::-;7959:86;;7739:313;;;;:::o;8058:98::-;8109:6;8143:5;8137:12;8127:22;;8058:98;;;:::o;8162:116::-;8213:4;8236:3;8228:11;;8266:4;8261:3;8257:14;8249:22;;8162:116;;;:::o;8284:154::-;8327:11;8363:29;8387:3;8381:10;8363:29;:::i;:::-;8426:5;8402:29;;8339:99;8284:154;;;:::o;8444:594::-;8528:5;8559:38;8591:5;8559:38;:::i;:::-;8622:5;8649:40;8683:5;8649:40;:::i;:::-;8637:52;;8708:35;8734:8;8708:35;:::i;:::-;8699:44;;8767:2;8759:6;8756:14;8753:278;;;8838:169;8923:66;8893:6;8889:2;8885:15;8882:1;8878:23;8838:169;:::i;:::-;8815:5;8794:227;8785:236;;8753:278;8534:504;;8444:594;;;:::o;321:1639:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_1101": {
									"entryPoint": 1899,
									"id": 1101,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_2406": {
									"entryPoint": 4456,
									"id": 2406,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_2418": {
									"entryPoint": 4515,
									"id": 2418,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_761": {
									"entryPoint": 3470,
									"id": 761,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_821": {
									"entryPoint": 4855,
									"id": 821,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2336": {
									"entryPoint": 5855,
									"id": 2336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkOwner_292": {
									"entryPoint": 3874,
									"id": 292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_domainSeparatorV4_2315": {
									"entryPoint": 4009,
									"id": 2315,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_2352": {
									"entryPoint": 4784,
									"id": 2352,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_710": {
									"entryPoint": 4574,
									"id": 710,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1176": {
									"entryPoint": 3463,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_869": {
									"entryPoint": 3488,
									"id": 869,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_2191": {
									"entryPoint": 6472,
									"id": 2191,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_354": {
									"entryPoint": 4191,
									"id": 354,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_600": {
									"entryPoint": 3634,
									"id": 600,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_677": {
									"entryPoint": 5318,
									"id": 677,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_1236": {
									"entryPoint": 4701,
									"id": 1236,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_497": {
									"entryPoint": 3201,
									"id": 497,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_521": {
									"entryPoint": 1295,
									"id": 521,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_456": {
									"entryPoint": 2070,
									"id": 456,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@borrow_3781": {
									"entryPoint": 2558,
									"id": 3781,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@byteLength_1380": {
									"entryPoint": 6940,
									"id": 1380,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_434": {
									"entryPoint": 1891,
									"id": 434,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_2394": {
									"entryPoint": 2175,
									"id": 2394,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@getEthPrice_3731": {
									"entryPoint": 1913,
									"id": 3731,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@liquidate_3833": {
									"entryPoint": 1384,
									"id": 3833,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_416": {
									"entryPoint": 1151,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_1091": {
									"entryPoint": 2158,
									"id": 1091,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_1221": {
									"entryPoint": 4386,
									"id": 1221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_275": {
									"entryPoint": 2340,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permit_1074": {
									"entryPoint": 2876,
									"id": 1074,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_2142": {
									"entryPoint": 4809,
									"id": 2142,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_306": {
									"entryPoint": 2139,
									"id": 306,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_425": {
									"entryPoint": 2380,
									"id": 425,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_1447": {
									"entryPoint": 6004,
									"id": 1447,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_1348": {
									"entryPoint": 6826,
									"id": 1348,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2492": {
									"entryPoint": 6177,
									"id": 2492,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_443": {
									"entryPoint": 1329,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_553": {
									"entryPoint": 1338,
									"id": 553,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_334": {
									"entryPoint": 3331,
									"id": 334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_480": {
									"entryPoint": 2524,
									"id": 480,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_2106": {
									"entryPoint": 6241,
									"id": 2106,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_t_address": {
									"entryPoint": 7262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 9038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 8186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 8987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 8248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 9078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 7753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 9441,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9480,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7966,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9346,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9584,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 9665,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 8905,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 9007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 8944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7044,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8670,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 9732,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413": {
									"entryPoint": 8763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d": {
									"entryPoint": 9242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 9016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 8164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 8965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20721:20",
										"nodeType": "YulBlock",
										"src": "0:20721:20",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:20",
													"nodeType": "YulBlock",
													"src": "66:40:20",
													"statements": [
														{
															"nativeSrc": "77:22:20",
															"nodeType": "YulAssignment",
															"src": "77:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:20"
																},
																"nativeSrc": "87:12:20",
																"nodeType": "YulFunctionCall",
																"src": "87:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:20",
														"nodeType": "YulTypedName",
														"src": "49:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:20",
														"nodeType": "YulTypedName",
														"src": "59:6:20",
														"type": ""
													}
												],
												"src": "7:99:20"
											},
											{
												"body": {
													"nativeSrc": "208:73:20",
													"nodeType": "YulBlock",
													"src": "208:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:20"
																},
																"nativeSrc": "218:19:20",
																"nodeType": "YulFunctionCall",
																"src": "218:19:20"
															},
															"nativeSrc": "218:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:20"
														},
														{
															"nativeSrc": "246:29:20",
															"nodeType": "YulAssignment",
															"src": "246:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:20",
																		"nodeType": "YulLiteral",
																		"src": "270:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:20"
																},
																"nativeSrc": "261:14:20",
																"nodeType": "YulFunctionCall",
																"src": "261:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:20",
														"nodeType": "YulTypedName",
														"src": "180:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:20",
														"nodeType": "YulTypedName",
														"src": "185:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:20",
														"nodeType": "YulTypedName",
														"src": "196:11:20",
														"type": ""
													}
												],
												"src": "112:169:20"
											},
											{
												"body": {
													"nativeSrc": "349:184:20",
													"nodeType": "YulBlock",
													"src": "349:184:20",
													"statements": [
														{
															"nativeSrc": "359:10:20",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:20",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:20",
																"nodeType": "YulLiteral",
																"src": "368:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:20",
																	"nodeType": "YulTypedName",
																	"src": "363:1:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:20",
																"nodeType": "YulBlock",
																"src": "428:63:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:20"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:20",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:20"
																					},
																					"nativeSrc": "449:11:20",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:20"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:20",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:20"
																							},
																							"nativeSrc": "468:11:20",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:20"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:20"
																					},
																					"nativeSrc": "462:18:20",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:20"
																			},
																			"nativeSrc": "442:39:20",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:20"
																		},
																		"nativeSrc": "442:39:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:20"
																},
																"nativeSrc": "386:13:20",
																"nodeType": "YulFunctionCall",
																"src": "386:13:20"
															},
															"nativeSrc": "378:113:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:20",
																"nodeType": "YulBlock",
																"src": "400:19:20",
																"statements": [
																	{
																		"nativeSrc": "402:15:20",
																		"nodeType": "YulAssignment",
																		"src": "402:15:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:20",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:20",
																					"nodeType": "YulLiteral",
																					"src": "414:2:20",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:20"
																			},
																			"nativeSrc": "407:10:20",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:20"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:20",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:20",
																"nodeType": "YulBlock",
																"src": "382:3:20",
																"statements": []
															},
															"src": "378:113:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:20"
																		},
																		"nativeSrc": "507:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:20",
																		"nodeType": "YulLiteral",
																		"src": "525:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:20"
																},
																"nativeSrc": "500:27:20",
																"nodeType": "YulFunctionCall",
																"src": "500:27:20"
															},
															"nativeSrc": "500:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:20"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:20",
														"nodeType": "YulTypedName",
														"src": "331:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:20",
														"nodeType": "YulTypedName",
														"src": "336:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:20",
														"nodeType": "YulTypedName",
														"src": "341:6:20",
														"type": ""
													}
												],
												"src": "287:246:20"
											},
											{
												"body": {
													"nativeSrc": "587:54:20",
													"nodeType": "YulBlock",
													"src": "587:54:20",
													"statements": [
														{
															"nativeSrc": "597:38:20",
															"nodeType": "YulAssignment",
															"src": "597:38:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:20",
																				"nodeType": "YulLiteral",
																				"src": "622:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:20"
																		},
																		"nativeSrc": "611:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:20",
																				"nodeType": "YulLiteral",
																				"src": "631:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:20"
																		},
																		"nativeSrc": "627:7:20",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:20"
																},
																"nativeSrc": "607:28:20",
																"nodeType": "YulFunctionCall",
																"src": "607:28:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:20"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:20",
														"nodeType": "YulTypedName",
														"src": "570:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:20",
														"nodeType": "YulTypedName",
														"src": "580:6:20",
														"type": ""
													}
												],
												"src": "539:102:20"
											},
											{
												"body": {
													"nativeSrc": "739:285:20",
													"nodeType": "YulBlock",
													"src": "739:285:20",
													"statements": [
														{
															"nativeSrc": "749:53:20",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:20"
																},
																"nativeSrc": "763:39:20",
																"nodeType": "YulFunctionCall",
																"src": "763:39:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:20",
																	"nodeType": "YulTypedName",
																	"src": "753:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:20",
															"nodeType": "YulAssignment",
															"src": "811:78:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:20"
																},
																"nativeSrc": "818:71:20",
																"nodeType": "YulFunctionCall",
																"src": "818:71:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:20",
																				"nodeType": "YulLiteral",
																				"src": "944:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:20"
																		},
																		"nativeSrc": "933:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:20"
																},
																"nativeSrc": "898:65:20",
																"nodeType": "YulFunctionCall",
																"src": "898:65:20"
															},
															"nativeSrc": "898:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:20"
														},
														{
															"nativeSrc": "972:46:20",
															"nodeType": "YulAssignment",
															"src": "972:46:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:20",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:20"
																		},
																		"nativeSrc": "988:29:20",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:20"
																},
																"nativeSrc": "979:39:20",
																"nodeType": "YulFunctionCall",
																"src": "979:39:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:20",
														"nodeType": "YulTypedName",
														"src": "720:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:20",
														"nodeType": "YulTypedName",
														"src": "727:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:20",
														"nodeType": "YulTypedName",
														"src": "735:3:20",
														"type": ""
													}
												],
												"src": "647:377:20"
											},
											{
												"body": {
													"nativeSrc": "1148:195:20",
													"nodeType": "YulBlock",
													"src": "1148:195:20",
													"statements": [
														{
															"nativeSrc": "1158:26:20",
															"nodeType": "YulAssignment",
															"src": "1158:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:20"
																},
																"nativeSrc": "1166:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:20",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:20"
																		},
																		"nativeSrc": "1201:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:20"
																		},
																		"nativeSrc": "1220:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:20"
																},
																"nativeSrc": "1194:47:20",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:20"
															},
															"nativeSrc": "1194:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:20"
														},
														{
															"nativeSrc": "1250:86:20",
															"nodeType": "YulAssignment",
															"src": "1250:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:20"
																},
																"nativeSrc": "1258:78:20",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:20",
														"nodeType": "YulTypedName",
														"src": "1120:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:20",
														"nodeType": "YulTypedName",
														"src": "1132:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:20",
														"nodeType": "YulTypedName",
														"src": "1143:4:20",
														"type": ""
													}
												],
												"src": "1030:313:20"
											},
											{
												"body": {
													"nativeSrc": "1389:35:20",
													"nodeType": "YulBlock",
													"src": "1389:35:20",
													"statements": [
														{
															"nativeSrc": "1399:19:20",
															"nodeType": "YulAssignment",
															"src": "1399:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:20"
																},
																"nativeSrc": "1409:9:20",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:20"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:20",
														"nodeType": "YulTypedName",
														"src": "1382:6:20",
														"type": ""
													}
												],
												"src": "1349:75:20"
											},
											{
												"body": {
													"nativeSrc": "1519:28:20",
													"nodeType": "YulBlock",
													"src": "1519:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:20"
																},
																"nativeSrc": "1529:12:20",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:20"
															},
															"nativeSrc": "1529:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:20"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:20"
											},
											{
												"body": {
													"nativeSrc": "1642:28:20",
													"nodeType": "YulBlock",
													"src": "1642:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:20"
																},
																"nativeSrc": "1652:12:20",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:20"
															},
															"nativeSrc": "1652:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:20"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:20"
											},
											{
												"body": {
													"nativeSrc": "1721:81:20",
													"nodeType": "YulBlock",
													"src": "1721:81:20",
													"statements": [
														{
															"nativeSrc": "1731:65:20",
															"nodeType": "YulAssignment",
															"src": "1731:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:20",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:20"
																},
																"nativeSrc": "1742:54:20",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:20",
														"nodeType": "YulTypedName",
														"src": "1703:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:20",
														"nodeType": "YulTypedName",
														"src": "1713:7:20",
														"type": ""
													}
												],
												"src": "1676:126:20"
											},
											{
												"body": {
													"nativeSrc": "1853:51:20",
													"nodeType": "YulBlock",
													"src": "1853:51:20",
													"statements": [
														{
															"nativeSrc": "1863:35:20",
															"nodeType": "YulAssignment",
															"src": "1863:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:20"
																},
																"nativeSrc": "1874:24:20",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:20",
														"nodeType": "YulTypedName",
														"src": "1835:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:20",
														"nodeType": "YulTypedName",
														"src": "1845:7:20",
														"type": ""
													}
												],
												"src": "1808:96:20"
											},
											{
												"body": {
													"nativeSrc": "1953:79:20",
													"nodeType": "YulBlock",
													"src": "1953:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:20",
																"nodeType": "YulBlock",
																"src": "2010:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:20"
																			},
																			"nativeSrc": "2012:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:20"
																		},
																		"nativeSrc": "2012:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:20"
																				},
																				"nativeSrc": "1983:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:20"
																		},
																		"nativeSrc": "1973:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:20"
																},
																"nativeSrc": "1966:43:20",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:20"
															},
															"nativeSrc": "1963:63:20",
															"nodeType": "YulIf",
															"src": "1963:63:20"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:20",
														"nodeType": "YulTypedName",
														"src": "1946:5:20",
														"type": ""
													}
												],
												"src": "1910:122:20"
											},
											{
												"body": {
													"nativeSrc": "2090:87:20",
													"nodeType": "YulBlock",
													"src": "2090:87:20",
													"statements": [
														{
															"nativeSrc": "2100:29:20",
															"nodeType": "YulAssignment",
															"src": "2100:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:20"
																},
																"nativeSrc": "2109:20:20",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:20"
																},
																"nativeSrc": "2138:33:20",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:20"
															},
															"nativeSrc": "2138:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:20"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:20",
														"nodeType": "YulTypedName",
														"src": "2068:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:20",
														"nodeType": "YulTypedName",
														"src": "2076:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:20",
														"nodeType": "YulTypedName",
														"src": "2084:5:20",
														"type": ""
													}
												],
												"src": "2038:139:20"
											},
											{
												"body": {
													"nativeSrc": "2228:32:20",
													"nodeType": "YulBlock",
													"src": "2228:32:20",
													"statements": [
														{
															"nativeSrc": "2238:16:20",
															"nodeType": "YulAssignment",
															"src": "2238:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:20",
																"nodeType": "YulIdentifier",
																"src": "2249:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:20",
														"nodeType": "YulTypedName",
														"src": "2210:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:20",
														"nodeType": "YulTypedName",
														"src": "2220:7:20",
														"type": ""
													}
												],
												"src": "2183:77:20"
											},
											{
												"body": {
													"nativeSrc": "2309:79:20",
													"nodeType": "YulBlock",
													"src": "2309:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:20",
																"nodeType": "YulBlock",
																"src": "2366:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:20"
																			},
																			"nativeSrc": "2368:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:20"
																		},
																		"nativeSrc": "2368:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:20"
																				},
																				"nativeSrc": "2339:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:20"
																		},
																		"nativeSrc": "2329:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:20"
																},
																"nativeSrc": "2322:43:20",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:20"
															},
															"nativeSrc": "2319:63:20",
															"nodeType": "YulIf",
															"src": "2319:63:20"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:20",
														"nodeType": "YulTypedName",
														"src": "2302:5:20",
														"type": ""
													}
												],
												"src": "2266:122:20"
											},
											{
												"body": {
													"nativeSrc": "2446:87:20",
													"nodeType": "YulBlock",
													"src": "2446:87:20",
													"statements": [
														{
															"nativeSrc": "2456:29:20",
															"nodeType": "YulAssignment",
															"src": "2456:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:20"
																},
																"nativeSrc": "2465:20:20",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:20"
																},
																"nativeSrc": "2494:33:20",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:20"
															},
															"nativeSrc": "2494:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:20"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:20",
														"nodeType": "YulTypedName",
														"src": "2424:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:20",
														"nodeType": "YulTypedName",
														"src": "2432:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:20",
														"nodeType": "YulTypedName",
														"src": "2440:5:20",
														"type": ""
													}
												],
												"src": "2394:139:20"
											},
											{
												"body": {
													"nativeSrc": "2622:391:20",
													"nodeType": "YulBlock",
													"src": "2622:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:20",
																"nodeType": "YulBlock",
																"src": "2668:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:20"
																			},
																			"nativeSrc": "2670:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:20"
																		},
																		"nativeSrc": "2670:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:20"
																		},
																		"nativeSrc": "2639:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:20"
																},
																"nativeSrc": "2635:32:20",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:20"
															},
															"nativeSrc": "2632:119:20",
															"nodeType": "YulIf",
															"src": "2632:119:20"
														},
														{
															"nativeSrc": "2761:117:20",
															"nodeType": "YulBlock",
															"src": "2761:117:20",
															"statements": [
																{
																	"nativeSrc": "2776:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:20",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:20",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:20",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:20"
																				},
																				"nativeSrc": "2836:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:20"
																		},
																		"nativeSrc": "2815:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:20",
															"nodeType": "YulBlock",
															"src": "2888:118:20",
															"statements": [
																{
																	"nativeSrc": "2903:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:20",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:20",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:20"
																				},
																				"nativeSrc": "2964:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:20"
																		},
																		"nativeSrc": "2943:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:20",
														"nodeType": "YulTypedName",
														"src": "2584:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:20",
														"nodeType": "YulTypedName",
														"src": "2595:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:20",
														"nodeType": "YulTypedName",
														"src": "2607:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:20",
														"nodeType": "YulTypedName",
														"src": "2615:6:20",
														"type": ""
													}
												],
												"src": "2539:474:20"
											},
											{
												"body": {
													"nativeSrc": "3061:48:20",
													"nodeType": "YulBlock",
													"src": "3061:48:20",
													"statements": [
														{
															"nativeSrc": "3071:32:20",
															"nodeType": "YulAssignment",
															"src": "3071:32:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:20"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:20"
																		},
																		"nativeSrc": "3089:13:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:20"
																},
																"nativeSrc": "3082:21:20",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:20",
														"nodeType": "YulTypedName",
														"src": "3043:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:20",
														"nodeType": "YulTypedName",
														"src": "3053:7:20",
														"type": ""
													}
												],
												"src": "3019:90:20"
											},
											{
												"body": {
													"nativeSrc": "3174:50:20",
													"nodeType": "YulBlock",
													"src": "3174:50:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:20",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:20"
																		},
																		"nativeSrc": "3196:21:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:20"
																},
																"nativeSrc": "3184:34:20",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:20"
															},
															"nativeSrc": "3184:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:20"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:20",
														"nodeType": "YulTypedName",
														"src": "3162:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:20",
														"nodeType": "YulTypedName",
														"src": "3169:3:20",
														"type": ""
													}
												],
												"src": "3115:109:20"
											},
											{
												"body": {
													"nativeSrc": "3322:118:20",
													"nodeType": "YulBlock",
													"src": "3322:118:20",
													"statements": [
														{
															"nativeSrc": "3332:26:20",
															"nodeType": "YulAssignment",
															"src": "3332:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:20"
																},
																"nativeSrc": "3340:18:20",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:20",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:20"
																		},
																		"nativeSrc": "3415:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:20",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:20"
																},
																"nativeSrc": "3368:65:20",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:20"
															},
															"nativeSrc": "3368:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:20",
														"nodeType": "YulTypedName",
														"src": "3294:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:20",
														"nodeType": "YulTypedName",
														"src": "3306:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:20",
														"nodeType": "YulTypedName",
														"src": "3317:4:20",
														"type": ""
													}
												],
												"src": "3230:210:20"
											},
											{
												"body": {
													"nativeSrc": "3511:53:20",
													"nodeType": "YulBlock",
													"src": "3511:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:20"
																		},
																		"nativeSrc": "3533:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:20"
																},
																"nativeSrc": "3521:37:20",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:20"
															},
															"nativeSrc": "3521:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:20",
														"nodeType": "YulTypedName",
														"src": "3499:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:20",
														"nodeType": "YulTypedName",
														"src": "3506:3:20",
														"type": ""
													}
												],
												"src": "3446:118:20"
											},
											{
												"body": {
													"nativeSrc": "3668:124:20",
													"nodeType": "YulBlock",
													"src": "3668:124:20",
													"statements": [
														{
															"nativeSrc": "3678:26:20",
															"nodeType": "YulAssignment",
															"src": "3678:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:20"
																},
																"nativeSrc": "3686:18:20",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:20",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:20"
																		},
																		"nativeSrc": "3767:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:20"
																},
																"nativeSrc": "3714:71:20",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:20"
															},
															"nativeSrc": "3714:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:20",
														"nodeType": "YulTypedName",
														"src": "3640:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:20",
														"nodeType": "YulTypedName",
														"src": "3652:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:20",
														"nodeType": "YulTypedName",
														"src": "3663:4:20",
														"type": ""
													}
												],
												"src": "3570:222:20"
											},
											{
												"body": {
													"nativeSrc": "3898:519:20",
													"nodeType": "YulBlock",
													"src": "3898:519:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:20",
																"nodeType": "YulBlock",
																"src": "3944:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:20"
																			},
																			"nativeSrc": "3946:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:20"
																		},
																		"nativeSrc": "3946:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:20"
																		},
																		"nativeSrc": "3915:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:20"
																},
																"nativeSrc": "3911:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:20"
															},
															"nativeSrc": "3908:119:20",
															"nodeType": "YulIf",
															"src": "3908:119:20"
														},
														{
															"nativeSrc": "4037:117:20",
															"nodeType": "YulBlock",
															"src": "4037:117:20",
															"statements": [
																{
																	"nativeSrc": "4052:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:20"
																				},
																				"nativeSrc": "4112:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:20"
																		},
																		"nativeSrc": "4091:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:20",
															"nodeType": "YulBlock",
															"src": "4164:118:20",
															"statements": [
																{
																	"nativeSrc": "4179:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:20"
																				},
																				"nativeSrc": "4240:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:20"
																		},
																		"nativeSrc": "4219:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:20",
															"nodeType": "YulBlock",
															"src": "4292:118:20",
															"statements": [
																{
																	"nativeSrc": "4307:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:20"
																				},
																				"nativeSrc": "4368:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:20"
																		},
																		"nativeSrc": "4347:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:20",
														"nodeType": "YulTypedName",
														"src": "3852:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:20",
														"nodeType": "YulTypedName",
														"src": "3863:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:20",
														"nodeType": "YulTypedName",
														"src": "3875:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:20",
														"nodeType": "YulTypedName",
														"src": "3883:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:20",
														"nodeType": "YulTypedName",
														"src": "3891:6:20",
														"type": ""
													}
												],
												"src": "3798:619:20"
											},
											{
												"body": {
													"nativeSrc": "4489:263:20",
													"nodeType": "YulBlock",
													"src": "4489:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "4535:83:20",
																"nodeType": "YulBlock",
																"src": "4535:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4537:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "4537:77:20"
																			},
																			"nativeSrc": "4537:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4537:79:20"
																		},
																		"nativeSrc": "4537:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "4537:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4510:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4510:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4519:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4519:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4506:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4506:3:20"
																		},
																		"nativeSrc": "4506:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4506:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4531:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4531:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4502:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4502:3:20"
																},
																"nativeSrc": "4502:32:20",
																"nodeType": "YulFunctionCall",
																"src": "4502:32:20"
															},
															"nativeSrc": "4499:119:20",
															"nodeType": "YulIf",
															"src": "4499:119:20"
														},
														{
															"nativeSrc": "4628:117:20",
															"nodeType": "YulBlock",
															"src": "4628:117:20",
															"statements": [
																{
																	"nativeSrc": "4643:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4643:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4657:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4657:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4647:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4647:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4672:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4672:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4707:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4707:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4718:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4718:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4703:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4703:3:20"
																				},
																				"nativeSrc": "4703:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4703:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4727:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4727:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4682:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4682:20:20"
																		},
																		"nativeSrc": "4682:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4672:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4672:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4423:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4459:9:20",
														"nodeType": "YulTypedName",
														"src": "4459:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4470:7:20",
														"nodeType": "YulTypedName",
														"src": "4470:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4482:6:20",
														"nodeType": "YulTypedName",
														"src": "4482:6:20",
														"type": ""
													}
												],
												"src": "4423:329:20"
											},
											{
												"body": {
													"nativeSrc": "4801:43:20",
													"nodeType": "YulBlock",
													"src": "4801:43:20",
													"statements": [
														{
															"nativeSrc": "4811:27:20",
															"nodeType": "YulAssignment",
															"src": "4811:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4826:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "4826:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4833:4:20",
																		"nodeType": "YulLiteral",
																		"src": "4833:4:20",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4822:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4822:3:20"
																},
																"nativeSrc": "4822:16:20",
																"nodeType": "YulFunctionCall",
																"src": "4822:16:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4811:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "4811:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4758:86:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4783:5:20",
														"nodeType": "YulTypedName",
														"src": "4783:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4793:7:20",
														"nodeType": "YulTypedName",
														"src": "4793:7:20",
														"type": ""
													}
												],
												"src": "4758:86:20"
											},
											{
												"body": {
													"nativeSrc": "4911:51:20",
													"nodeType": "YulBlock",
													"src": "4911:51:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4928:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "4928:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4949:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "4949:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4933:15:20",
																			"nodeType": "YulIdentifier",
																			"src": "4933:15:20"
																		},
																		"nativeSrc": "4933:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4933:22:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4921:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:20"
																},
																"nativeSrc": "4921:35:20",
																"nodeType": "YulFunctionCall",
																"src": "4921:35:20"
															},
															"nativeSrc": "4921:35:20",
															"nodeType": "YulExpressionStatement",
															"src": "4921:35:20"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4850:112:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4899:5:20",
														"nodeType": "YulTypedName",
														"src": "4899:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4906:3:20",
														"nodeType": "YulTypedName",
														"src": "4906:3:20",
														"type": ""
													}
												],
												"src": "4850:112:20"
											},
											{
												"body": {
													"nativeSrc": "5062:120:20",
													"nodeType": "YulBlock",
													"src": "5062:120:20",
													"statements": [
														{
															"nativeSrc": "5072:26:20",
															"nodeType": "YulAssignment",
															"src": "5072:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5084:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5084:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5095:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5095:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5080:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:20"
																},
																"nativeSrc": "5080:18:20",
																"nodeType": "YulFunctionCall",
																"src": "5080:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5072:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5072:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5148:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5148:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5161:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5161:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5172:1:20",
																				"nodeType": "YulLiteral",
																				"src": "5172:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5157:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5157:3:20"
																		},
																		"nativeSrc": "5157:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5157:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5108:39:20",
																	"nodeType": "YulIdentifier",
																	"src": "5108:39:20"
																},
																"nativeSrc": "5108:67:20",
																"nodeType": "YulFunctionCall",
																"src": "5108:67:20"
															},
															"nativeSrc": "5108:67:20",
															"nodeType": "YulExpressionStatement",
															"src": "5108:67:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4968:214:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5034:9:20",
														"nodeType": "YulTypedName",
														"src": "5034:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5046:6:20",
														"nodeType": "YulTypedName",
														"src": "5046:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5057:4:20",
														"nodeType": "YulTypedName",
														"src": "5057:4:20",
														"type": ""
													}
												],
												"src": "4968:214:20"
											},
											{
												"body": {
													"nativeSrc": "5233:32:20",
													"nodeType": "YulBlock",
													"src": "5233:32:20",
													"statements": [
														{
															"nativeSrc": "5243:16:20",
															"nodeType": "YulAssignment",
															"src": "5243:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "5254:5:20",
																"nodeType": "YulIdentifier",
																"src": "5254:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5243:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "5243:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5188:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5215:5:20",
														"nodeType": "YulTypedName",
														"src": "5215:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5225:7:20",
														"nodeType": "YulTypedName",
														"src": "5225:7:20",
														"type": ""
													}
												],
												"src": "5188:77:20"
											},
											{
												"body": {
													"nativeSrc": "5336:53:20",
													"nodeType": "YulBlock",
													"src": "5336:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5353:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5353:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5376:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "5376:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5358:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "5358:17:20"
																		},
																		"nativeSrc": "5358:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5358:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5346:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5346:6:20"
																},
																"nativeSrc": "5346:37:20",
																"nodeType": "YulFunctionCall",
																"src": "5346:37:20"
															},
															"nativeSrc": "5346:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "5346:37:20"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5271:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5324:5:20",
														"nodeType": "YulTypedName",
														"src": "5324:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5331:3:20",
														"nodeType": "YulTypedName",
														"src": "5331:3:20",
														"type": ""
													}
												],
												"src": "5271:118:20"
											},
											{
												"body": {
													"nativeSrc": "5493:124:20",
													"nodeType": "YulBlock",
													"src": "5493:124:20",
													"statements": [
														{
															"nativeSrc": "5503:26:20",
															"nodeType": "YulAssignment",
															"src": "5503:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5515:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5515:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5526:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5526:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5511:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5511:3:20"
																},
																"nativeSrc": "5511:18:20",
																"nodeType": "YulFunctionCall",
																"src": "5511:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5503:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5503:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5583:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5583:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5596:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5596:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5607:1:20",
																				"nodeType": "YulLiteral",
																				"src": "5607:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5592:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5592:3:20"
																		},
																		"nativeSrc": "5592:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5592:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5539:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "5539:43:20"
																},
																"nativeSrc": "5539:71:20",
																"nodeType": "YulFunctionCall",
																"src": "5539:71:20"
															},
															"nativeSrc": "5539:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "5539:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5395:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:20",
														"nodeType": "YulTypedName",
														"src": "5465:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5477:6:20",
														"nodeType": "YulTypedName",
														"src": "5477:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5488:4:20",
														"nodeType": "YulTypedName",
														"src": "5488:4:20",
														"type": ""
													}
												],
												"src": "5395:222:20"
											},
											{
												"body": {
													"nativeSrc": "5667:105:20",
													"nodeType": "YulBlock",
													"src": "5667:105:20",
													"statements": [
														{
															"nativeSrc": "5677:89:20",
															"nodeType": "YulAssignment",
															"src": "5677:89:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5692:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "5692:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5699:66:20",
																		"nodeType": "YulLiteral",
																		"src": "5699:66:20",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5688:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:20"
																},
																"nativeSrc": "5688:78:20",
																"nodeType": "YulFunctionCall",
																"src": "5688:78:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5677:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "5677:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "5623:149:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5649:5:20",
														"nodeType": "YulTypedName",
														"src": "5649:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5659:7:20",
														"nodeType": "YulTypedName",
														"src": "5659:7:20",
														"type": ""
													}
												],
												"src": "5623:149:20"
											},
											{
												"body": {
													"nativeSrc": "5841:52:20",
													"nodeType": "YulBlock",
													"src": "5841:52:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5858:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5858:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5880:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "5880:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "5863:16:20",
																			"nodeType": "YulIdentifier",
																			"src": "5863:16:20"
																		},
																		"nativeSrc": "5863:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:23:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5851:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:20"
																},
																"nativeSrc": "5851:36:20",
																"nodeType": "YulFunctionCall",
																"src": "5851:36:20"
															},
															"nativeSrc": "5851:36:20",
															"nodeType": "YulExpressionStatement",
															"src": "5851:36:20"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "5778:115:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5829:5:20",
														"nodeType": "YulTypedName",
														"src": "5829:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5836:3:20",
														"nodeType": "YulTypedName",
														"src": "5836:3:20",
														"type": ""
													}
												],
												"src": "5778:115:20"
											},
											{
												"body": {
													"nativeSrc": "5964:53:20",
													"nodeType": "YulBlock",
													"src": "5964:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5981:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5981:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6004:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "6004:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5986:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "5986:17:20"
																		},
																		"nativeSrc": "5986:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5986:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5974:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5974:6:20"
																},
																"nativeSrc": "5974:37:20",
																"nodeType": "YulFunctionCall",
																"src": "5974:37:20"
															},
															"nativeSrc": "5974:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "5974:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5899:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5952:5:20",
														"nodeType": "YulTypedName",
														"src": "5952:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5959:3:20",
														"nodeType": "YulTypedName",
														"src": "5959:3:20",
														"type": ""
													}
												],
												"src": "5899:118:20"
											},
											{
												"body": {
													"nativeSrc": "6097:40:20",
													"nodeType": "YulBlock",
													"src": "6097:40:20",
													"statements": [
														{
															"nativeSrc": "6108:22:20",
															"nodeType": "YulAssignment",
															"src": "6108:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6124:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "6124:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6118:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "6118:5:20"
																},
																"nativeSrc": "6118:12:20",
																"nodeType": "YulFunctionCall",
																"src": "6118:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6108:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6108:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6023:114:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6080:5:20",
														"nodeType": "YulTypedName",
														"src": "6080:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6090:6:20",
														"nodeType": "YulTypedName",
														"src": "6090:6:20",
														"type": ""
													}
												],
												"src": "6023:114:20"
											},
											{
												"body": {
													"nativeSrc": "6254:73:20",
													"nodeType": "YulBlock",
													"src": "6254:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6271:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6271:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6276:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6276:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6264:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:20"
																},
																"nativeSrc": "6264:19:20",
																"nodeType": "YulFunctionCall",
																"src": "6264:19:20"
															},
															"nativeSrc": "6264:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "6264:19:20"
														},
														{
															"nativeSrc": "6292:29:20",
															"nodeType": "YulAssignment",
															"src": "6292:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6311:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6316:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6316:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6307:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:20"
																},
																"nativeSrc": "6307:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6307:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6292:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "6292:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6143:184:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6226:3:20",
														"nodeType": "YulTypedName",
														"src": "6226:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6231:6:20",
														"nodeType": "YulTypedName",
														"src": "6231:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6242:11:20",
														"nodeType": "YulTypedName",
														"src": "6242:11:20",
														"type": ""
													}
												],
												"src": "6143:184:20"
											},
											{
												"body": {
													"nativeSrc": "6405:60:20",
													"nodeType": "YulBlock",
													"src": "6405:60:20",
													"statements": [
														{
															"nativeSrc": "6415:11:20",
															"nodeType": "YulAssignment",
															"src": "6415:11:20",
															"value": {
																"name": "ptr",
																"nativeSrc": "6423:3:20",
																"nodeType": "YulIdentifier",
																"src": "6423:3:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6415:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6415:4:20"
																}
															]
														},
														{
															"nativeSrc": "6436:22:20",
															"nodeType": "YulAssignment",
															"src": "6436:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6448:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6448:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6453:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6453:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6444:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6444:3:20"
																},
																"nativeSrc": "6444:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6444:14:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6436:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6436:4:20"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6333:132:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6392:3:20",
														"nodeType": "YulTypedName",
														"src": "6392:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6400:4:20",
														"nodeType": "YulTypedName",
														"src": "6400:4:20",
														"type": ""
													}
												],
												"src": "6333:132:20"
											},
											{
												"body": {
													"nativeSrc": "6526:53:20",
													"nodeType": "YulBlock",
													"src": "6526:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6543:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6543:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6566:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "6566:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6548:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "6548:17:20"
																		},
																		"nativeSrc": "6548:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6548:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6536:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6536:6:20"
																},
																"nativeSrc": "6536:37:20",
																"nodeType": "YulFunctionCall",
																"src": "6536:37:20"
															},
															"nativeSrc": "6536:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "6536:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6471:108:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6514:5:20",
														"nodeType": "YulTypedName",
														"src": "6514:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6521:3:20",
														"nodeType": "YulTypedName",
														"src": "6521:3:20",
														"type": ""
													}
												],
												"src": "6471:108:20"
											},
											{
												"body": {
													"nativeSrc": "6665:99:20",
													"nodeType": "YulBlock",
													"src": "6665:99:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6709:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6709:6:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6717:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6717:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "6675:33:20",
																	"nodeType": "YulIdentifier",
																	"src": "6675:33:20"
																},
																"nativeSrc": "6675:46:20",
																"nodeType": "YulFunctionCall",
																"src": "6675:46:20"
															},
															"nativeSrc": "6675:46:20",
															"nodeType": "YulExpressionStatement",
															"src": "6675:46:20"
														},
														{
															"nativeSrc": "6730:28:20",
															"nodeType": "YulAssignment",
															"src": "6730:28:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6748:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6748:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6753:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6753:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6744:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6744:3:20"
																},
																"nativeSrc": "6744:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6744:14:20"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6730:10:20",
																	"nodeType": "YulIdentifier",
																	"src": "6730:10:20"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "6585:179:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6638:6:20",
														"nodeType": "YulTypedName",
														"src": "6638:6:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6646:3:20",
														"nodeType": "YulTypedName",
														"src": "6646:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6654:10:20",
														"nodeType": "YulTypedName",
														"src": "6654:10:20",
														"type": ""
													}
												],
												"src": "6585:179:20"
											},
											{
												"body": {
													"nativeSrc": "6845:38:20",
													"nodeType": "YulBlock",
													"src": "6845:38:20",
													"statements": [
														{
															"nativeSrc": "6855:22:20",
															"nodeType": "YulAssignment",
															"src": "6855:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6867:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6867:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6872:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6872:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6863:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6863:3:20"
																},
																"nativeSrc": "6863:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6863:14:20"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6855:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6855:4:20"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6770:113:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6832:3:20",
														"nodeType": "YulTypedName",
														"src": "6832:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6840:4:20",
														"nodeType": "YulTypedName",
														"src": "6840:4:20",
														"type": ""
													}
												],
												"src": "6770:113:20"
											},
											{
												"body": {
													"nativeSrc": "7043:608:20",
													"nodeType": "YulBlock",
													"src": "7043:608:20",
													"statements": [
														{
															"nativeSrc": "7053:68:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7053:68:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7115:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7115:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7067:47:20",
																	"nodeType": "YulIdentifier",
																	"src": "7067:47:20"
																},
																"nativeSrc": "7067:54:20",
																"nodeType": "YulFunctionCall",
																"src": "7067:54:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7057:6:20",
																	"nodeType": "YulTypedName",
																	"src": "7057:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7130:93:20",
															"nodeType": "YulAssignment",
															"src": "7130:93:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7211:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7211:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7216:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7216:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7137:73:20",
																	"nodeType": "YulIdentifier",
																	"src": "7137:73:20"
																},
																"nativeSrc": "7137:86:20",
																"nodeType": "YulFunctionCall",
																"src": "7137:86:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7130:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7130:3:20"
																}
															]
														},
														{
															"nativeSrc": "7232:71:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7232:71:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7297:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7297:5:20"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7247:49:20",
																	"nodeType": "YulIdentifier",
																	"src": "7247:49:20"
																},
																"nativeSrc": "7247:56:20",
																"nodeType": "YulFunctionCall",
																"src": "7247:56:20"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7236:7:20",
																	"nodeType": "YulTypedName",
																	"src": "7236:7:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7312:21:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7312:21:20",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7326:7:20",
																"nodeType": "YulIdentifier",
																"src": "7326:7:20"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7316:6:20",
																	"nodeType": "YulTypedName",
																	"src": "7316:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7402:224:20",
																"nodeType": "YulBlock",
																"src": "7402:224:20",
																"statements": [
																	{
																		"nativeSrc": "7416:34:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7416:34:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7443:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "7443:6:20"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7437:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "7437:5:20"
																			},
																			"nativeSrc": "7437:13:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7437:13:20"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7420:13:20",
																				"nodeType": "YulTypedName",
																				"src": "7420:13:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7463:70:20",
																		"nodeType": "YulAssignment",
																		"src": "7463:70:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7514:13:20",
																					"nodeType": "YulIdentifier",
																					"src": "7514:13:20"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7529:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "7529:3:20"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "7470:43:20",
																				"nodeType": "YulIdentifier",
																				"src": "7470:43:20"
																			},
																			"nativeSrc": "7470:63:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7470:63:20"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7463:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "7463:3:20"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7546:70:20",
																		"nodeType": "YulAssignment",
																		"src": "7546:70:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7609:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "7609:6:20"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "7556:52:20",
																				"nodeType": "YulIdentifier",
																				"src": "7556:52:20"
																			},
																			"nativeSrc": "7556:60:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7556:60:20"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7546:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7546:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7364:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7364:1:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7367:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7361:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "7361:2:20"
																},
																"nativeSrc": "7361:13:20",
																"nodeType": "YulFunctionCall",
																"src": "7361:13:20"
															},
															"nativeSrc": "7342:284:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7375:18:20",
																"nodeType": "YulBlock",
																"src": "7375:18:20",
																"statements": [
																	{
																		"nativeSrc": "7377:14:20",
																		"nodeType": "YulAssignment",
																		"src": "7377:14:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7386:1:20",
																					"nodeType": "YulIdentifier",
																					"src": "7386:1:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7389:1:20",
																					"nodeType": "YulLiteral",
																					"src": "7389:1:20",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7382:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "7382:3:20"
																			},
																			"nativeSrc": "7382:9:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7382:9:20"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7377:1:20",
																				"nodeType": "YulIdentifier",
																				"src": "7377:1:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7346:14:20",
																"nodeType": "YulBlock",
																"src": "7346:14:20",
																"statements": [
																	{
																		"nativeSrc": "7348:10:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7348:10:20",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7357:1:20",
																			"nodeType": "YulLiteral",
																			"src": "7357:1:20",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7352:1:20",
																				"nodeType": "YulTypedName",
																				"src": "7352:1:20",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7342:284:20"
														},
														{
															"nativeSrc": "7635:10:20",
															"nodeType": "YulAssignment",
															"src": "7635:10:20",
															"value": {
																"name": "pos",
																"nativeSrc": "7642:3:20",
																"nodeType": "YulIdentifier",
																"src": "7642:3:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7635:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6919:732:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7022:5:20",
														"nodeType": "YulTypedName",
														"src": "7022:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7029:3:20",
														"nodeType": "YulTypedName",
														"src": "7029:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7038:3:20",
														"nodeType": "YulTypedName",
														"src": "7038:3:20",
														"type": ""
													}
												],
												"src": "6919:732:20"
											},
											{
												"body": {
													"nativeSrc": "8011:861:20",
													"nodeType": "YulBlock",
													"src": "8011:861:20",
													"statements": [
														{
															"nativeSrc": "8021:27:20",
															"nodeType": "YulAssignment",
															"src": "8021:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8033:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "8033:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8044:3:20",
																		"nodeType": "YulLiteral",
																		"src": "8044:3:20",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8029:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8029:3:20"
																},
																"nativeSrc": "8029:19:20",
																"nodeType": "YulFunctionCall",
																"src": "8029:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8021:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8021:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8100:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8100:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8113:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8113:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8124:1:20",
																				"nodeType": "YulLiteral",
																				"src": "8124:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8109:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8109:3:20"
																		},
																		"nativeSrc": "8109:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8109:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "8058:41:20",
																	"nodeType": "YulIdentifier",
																	"src": "8058:41:20"
																},
																"nativeSrc": "8058:69:20",
																"nodeType": "YulFunctionCall",
																"src": "8058:69:20"
															},
															"nativeSrc": "8058:69:20",
															"nodeType": "YulExpressionStatement",
															"src": "8058:69:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8148:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8148:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8159:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8159:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8144:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8144:3:20"
																		},
																		"nativeSrc": "8144:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8144:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8168:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "8168:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8174:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8174:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8164:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:20"
																		},
																		"nativeSrc": "8164:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8164:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8137:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8137:6:20"
																},
																"nativeSrc": "8137:48:20",
																"nodeType": "YulFunctionCall",
																"src": "8137:48:20"
															},
															"nativeSrc": "8137:48:20",
															"nodeType": "YulExpressionStatement",
															"src": "8137:48:20"
														},
														{
															"nativeSrc": "8194:86:20",
															"nodeType": "YulAssignment",
															"src": "8194:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8266:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8266:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8275:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8275:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8202:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "8202:63:20"
																},
																"nativeSrc": "8202:78:20",
																"nodeType": "YulFunctionCall",
																"src": "8202:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8194:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8194:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8301:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8301:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8312:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8312:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8297:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:20"
																		},
																		"nativeSrc": "8297:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8297:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8321:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "8321:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8327:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8327:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8317:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:20"
																		},
																		"nativeSrc": "8317:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8317:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8290:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:20"
																},
																"nativeSrc": "8290:48:20",
																"nodeType": "YulFunctionCall",
																"src": "8290:48:20"
															},
															"nativeSrc": "8290:48:20",
															"nodeType": "YulExpressionStatement",
															"src": "8290:48:20"
														},
														{
															"nativeSrc": "8347:86:20",
															"nodeType": "YulAssignment",
															"src": "8347:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8419:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8419:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8428:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8428:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8355:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "8355:63:20"
																},
																"nativeSrc": "8355:78:20",
																"nodeType": "YulFunctionCall",
																"src": "8355:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8347:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8347:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8487:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8487:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8500:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8500:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8511:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8511:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8496:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:20"
																		},
																		"nativeSrc": "8496:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8496:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8443:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "8443:43:20"
																},
																"nativeSrc": "8443:72:20",
																"nodeType": "YulFunctionCall",
																"src": "8443:72:20"
															},
															"nativeSrc": "8443:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "8443:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8569:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8569:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8582:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8582:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:3:20",
																				"nodeType": "YulLiteral",
																				"src": "8593:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8578:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8578:3:20"
																		},
																		"nativeSrc": "8578:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8578:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8525:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "8525:43:20"
																},
																"nativeSrc": "8525:73:20",
																"nodeType": "YulFunctionCall",
																"src": "8525:73:20"
															},
															"nativeSrc": "8525:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "8525:73:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8652:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8652:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8665:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8665:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8676:3:20",
																				"nodeType": "YulLiteral",
																				"src": "8676:3:20",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8661:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8661:3:20"
																		},
																		"nativeSrc": "8661:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8661:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8608:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "8608:43:20"
																},
																"nativeSrc": "8608:73:20",
																"nodeType": "YulFunctionCall",
																"src": "8608:73:20"
															},
															"nativeSrc": "8608:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "8608:73:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8702:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8702:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8713:3:20",
																				"nodeType": "YulLiteral",
																				"src": "8713:3:20",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8698:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:20"
																		},
																		"nativeSrc": "8698:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8698:19:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8723:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "8723:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8729:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8729:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8719:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8719:3:20"
																		},
																		"nativeSrc": "8719:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8719:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8691:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:20"
																},
																"nativeSrc": "8691:49:20",
																"nodeType": "YulFunctionCall",
																"src": "8691:49:20"
															},
															"nativeSrc": "8691:49:20",
															"nodeType": "YulExpressionStatement",
															"src": "8691:49:20"
														},
														{
															"nativeSrc": "8749:116:20",
															"nodeType": "YulAssignment",
															"src": "8749:116:20",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "8851:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8851:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8860:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8860:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8757:93:20",
																	"nodeType": "YulIdentifier",
																	"src": "8757:93:20"
																},
																"nativeSrc": "8757:108:20",
																"nodeType": "YulFunctionCall",
																"src": "8757:108:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8749:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8749:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7657:1215:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7935:9:20",
														"nodeType": "YulTypedName",
														"src": "7935:9:20",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7947:6:20",
														"nodeType": "YulTypedName",
														"src": "7947:6:20",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7955:6:20",
														"nodeType": "YulTypedName",
														"src": "7955:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7963:6:20",
														"nodeType": "YulTypedName",
														"src": "7963:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7971:6:20",
														"nodeType": "YulTypedName",
														"src": "7971:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7979:6:20",
														"nodeType": "YulTypedName",
														"src": "7979:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7987:6:20",
														"nodeType": "YulTypedName",
														"src": "7987:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7995:6:20",
														"nodeType": "YulTypedName",
														"src": "7995:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8006:4:20",
														"nodeType": "YulTypedName",
														"src": "8006:4:20",
														"type": ""
													}
												],
												"src": "7657:1215:20"
											},
											{
												"body": {
													"nativeSrc": "8976:124:20",
													"nodeType": "YulBlock",
													"src": "8976:124:20",
													"statements": [
														{
															"nativeSrc": "8986:26:20",
															"nodeType": "YulAssignment",
															"src": "8986:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8998:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "8998:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9009:2:20",
																		"nodeType": "YulLiteral",
																		"src": "9009:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8994:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8994:3:20"
																},
																"nativeSrc": "8994:18:20",
																"nodeType": "YulFunctionCall",
																"src": "8994:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8986:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8986:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9066:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9066:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9079:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9079:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9090:1:20",
																				"nodeType": "YulLiteral",
																				"src": "9090:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9075:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9075:3:20"
																		},
																		"nativeSrc": "9075:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9075:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9022:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9022:43:20"
																},
																"nativeSrc": "9022:71:20",
																"nodeType": "YulFunctionCall",
																"src": "9022:71:20"
															},
															"nativeSrc": "9022:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "9022:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8878:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8948:9:20",
														"nodeType": "YulTypedName",
														"src": "8948:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8960:6:20",
														"nodeType": "YulTypedName",
														"src": "8960:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8971:4:20",
														"nodeType": "YulTypedName",
														"src": "8971:4:20",
														"type": ""
													}
												],
												"src": "8878:222:20"
											},
											{
												"body": {
													"nativeSrc": "9172:263:20",
													"nodeType": "YulBlock",
													"src": "9172:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "9218:83:20",
																"nodeType": "YulBlock",
																"src": "9218:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9220:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "9220:77:20"
																			},
																			"nativeSrc": "9220:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9220:79:20"
																		},
																		"nativeSrc": "9220:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9220:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9193:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "9193:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9202:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9202:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9189:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9189:3:20"
																		},
																		"nativeSrc": "9189:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9189:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9214:2:20",
																		"nodeType": "YulLiteral",
																		"src": "9214:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9185:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9185:3:20"
																},
																"nativeSrc": "9185:32:20",
																"nodeType": "YulFunctionCall",
																"src": "9185:32:20"
															},
															"nativeSrc": "9182:119:20",
															"nodeType": "YulIf",
															"src": "9182:119:20"
														},
														{
															"nativeSrc": "9311:117:20",
															"nodeType": "YulBlock",
															"src": "9311:117:20",
															"statements": [
																{
																	"nativeSrc": "9326:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9326:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9340:1:20",
																		"nodeType": "YulLiteral",
																		"src": "9340:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9330:6:20",
																			"nodeType": "YulTypedName",
																			"src": "9330:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9355:63:20",
																	"nodeType": "YulAssignment",
																	"src": "9355:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9390:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "9390:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9401:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "9401:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9386:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "9386:3:20"
																				},
																				"nativeSrc": "9386:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9386:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9410:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "9410:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9365:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "9365:20:20"
																		},
																		"nativeSrc": "9365:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9365:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9355:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "9355:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "9106:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9142:9:20",
														"nodeType": "YulTypedName",
														"src": "9142:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9153:7:20",
														"nodeType": "YulTypedName",
														"src": "9153:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9165:6:20",
														"nodeType": "YulTypedName",
														"src": "9165:6:20",
														"type": ""
													}
												],
												"src": "9106:329:20"
											},
											{
												"body": {
													"nativeSrc": "9482:77:20",
													"nodeType": "YulBlock",
													"src": "9482:77:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "9537:16:20",
																"nodeType": "YulBlock",
																"src": "9537:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9546:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9546:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9549:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9549:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9539:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9539:6:20"
																			},
																			"nativeSrc": "9539:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9539:12:20"
																		},
																		"nativeSrc": "9539:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9539:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9505:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "9505:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9528:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "9528:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "9512:15:20",
																					"nodeType": "YulIdentifier",
																					"src": "9512:15:20"
																				},
																				"nativeSrc": "9512:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9512:22:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9502:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "9502:2:20"
																		},
																		"nativeSrc": "9502:33:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9502:33:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9495:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9495:6:20"
																},
																"nativeSrc": "9495:41:20",
																"nodeType": "YulFunctionCall",
																"src": "9495:41:20"
															},
															"nativeSrc": "9492:61:20",
															"nodeType": "YulIf",
															"src": "9492:61:20"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "9441:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9475:5:20",
														"nodeType": "YulTypedName",
														"src": "9475:5:20",
														"type": ""
													}
												],
												"src": "9441:118:20"
											},
											{
												"body": {
													"nativeSrc": "9615:85:20",
													"nodeType": "YulBlock",
													"src": "9615:85:20",
													"statements": [
														{
															"nativeSrc": "9625:29:20",
															"nodeType": "YulAssignment",
															"src": "9625:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9647:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9647:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9634:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "9634:12:20"
																},
																"nativeSrc": "9634:20:20",
																"nodeType": "YulFunctionCall",
																"src": "9634:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9625:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "9625:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9688:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "9688:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "9663:24:20",
																	"nodeType": "YulIdentifier",
																	"src": "9663:24:20"
																},
																"nativeSrc": "9663:31:20",
																"nodeType": "YulFunctionCall",
																"src": "9663:31:20"
															},
															"nativeSrc": "9663:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "9663:31:20"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "9565:135:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9593:6:20",
														"nodeType": "YulTypedName",
														"src": "9593:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9601:3:20",
														"nodeType": "YulTypedName",
														"src": "9601:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9609:5:20",
														"nodeType": "YulTypedName",
														"src": "9609:5:20",
														"type": ""
													}
												],
												"src": "9565:135:20"
											},
											{
												"body": {
													"nativeSrc": "9749:79:20",
													"nodeType": "YulBlock",
													"src": "9749:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "9806:16:20",
																"nodeType": "YulBlock",
																"src": "9806:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9815:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9815:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9818:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9818:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9808:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9808:6:20"
																			},
																			"nativeSrc": "9808:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9808:12:20"
																		},
																		"nativeSrc": "9808:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9808:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9772:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "9772:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9797:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "9797:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "9779:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "9779:17:20"
																				},
																				"nativeSrc": "9779:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9779:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9769:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "9769:2:20"
																		},
																		"nativeSrc": "9769:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9769:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9762:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9762:6:20"
																},
																"nativeSrc": "9762:43:20",
																"nodeType": "YulFunctionCall",
																"src": "9762:43:20"
															},
															"nativeSrc": "9759:63:20",
															"nodeType": "YulIf",
															"src": "9759:63:20"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "9706:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9742:5:20",
														"nodeType": "YulTypedName",
														"src": "9742:5:20",
														"type": ""
													}
												],
												"src": "9706:122:20"
											},
											{
												"body": {
													"nativeSrc": "9886:87:20",
													"nodeType": "YulBlock",
													"src": "9886:87:20",
													"statements": [
														{
															"nativeSrc": "9896:29:20",
															"nodeType": "YulAssignment",
															"src": "9896:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9918:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9918:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9905:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "9905:12:20"
																},
																"nativeSrc": "9905:20:20",
																"nodeType": "YulFunctionCall",
																"src": "9905:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9896:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "9896:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9961:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "9961:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "9934:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "9934:26:20"
																},
																"nativeSrc": "9934:33:20",
																"nodeType": "YulFunctionCall",
																"src": "9934:33:20"
															},
															"nativeSrc": "9934:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "9934:33:20"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "9834:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9864:6:20",
														"nodeType": "YulTypedName",
														"src": "9864:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9872:3:20",
														"nodeType": "YulTypedName",
														"src": "9872:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9880:5:20",
														"nodeType": "YulTypedName",
														"src": "9880:5:20",
														"type": ""
													}
												],
												"src": "9834:139:20"
											},
											{
												"body": {
													"nativeSrc": "10145:1033:20",
													"nodeType": "YulBlock",
													"src": "10145:1033:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "10192:83:20",
																"nodeType": "YulBlock",
																"src": "10192:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10194:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "10194:77:20"
																			},
																			"nativeSrc": "10194:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "10194:79:20"
																		},
																		"nativeSrc": "10194:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "10194:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10166:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10166:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10175:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10175:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10162:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10162:3:20"
																		},
																		"nativeSrc": "10162:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10162:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10187:3:20",
																		"nodeType": "YulLiteral",
																		"src": "10187:3:20",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10158:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10158:3:20"
																},
																"nativeSrc": "10158:33:20",
																"nodeType": "YulFunctionCall",
																"src": "10158:33:20"
															},
															"nativeSrc": "10155:120:20",
															"nodeType": "YulIf",
															"src": "10155:120:20"
														},
														{
															"nativeSrc": "10285:117:20",
															"nodeType": "YulBlock",
															"src": "10285:117:20",
															"statements": [
																{
																	"nativeSrc": "10300:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10300:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10314:1:20",
																		"nodeType": "YulLiteral",
																		"src": "10314:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10304:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10304:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10329:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10329:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10364:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10364:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10375:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10375:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10360:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10360:3:20"
																				},
																				"nativeSrc": "10360:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10360:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10384:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10384:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10339:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10339:20:20"
																		},
																		"nativeSrc": "10339:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10339:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10329:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10329:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10412:118:20",
															"nodeType": "YulBlock",
															"src": "10412:118:20",
															"statements": [
																{
																	"nativeSrc": "10427:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10427:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10441:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10441:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10431:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10431:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10457:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10457:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10492:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10492:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10503:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10503:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10488:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10488:3:20"
																				},
																				"nativeSrc": "10488:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10488:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10512:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10512:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10467:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10467:20:20"
																		},
																		"nativeSrc": "10467:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10467:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10457:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10457:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10540:118:20",
															"nodeType": "YulBlock",
															"src": "10540:118:20",
															"statements": [
																{
																	"nativeSrc": "10555:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10555:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10569:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10569:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10559:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10559:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10585:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10585:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10620:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10620:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10631:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10631:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10616:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10616:3:20"
																				},
																				"nativeSrc": "10616:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10616:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10640:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10640:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10595:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10595:20:20"
																		},
																		"nativeSrc": "10595:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10595:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10585:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10585:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10668:118:20",
															"nodeType": "YulBlock",
															"src": "10668:118:20",
															"statements": [
																{
																	"nativeSrc": "10683:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10683:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10697:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10697:2:20",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10687:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10687:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10713:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10713:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10748:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10748:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10759:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10759:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10744:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10744:3:20"
																				},
																				"nativeSrc": "10744:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10744:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10768:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10768:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10723:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10723:20:20"
																		},
																		"nativeSrc": "10723:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10723:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10713:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10713:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10796:117:20",
															"nodeType": "YulBlock",
															"src": "10796:117:20",
															"statements": [
																{
																	"nativeSrc": "10811:17:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10811:17:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10825:3:20",
																		"nodeType": "YulLiteral",
																		"src": "10825:3:20",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10815:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10815:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10842:61:20",
																	"nodeType": "YulAssignment",
																	"src": "10842:61:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10875:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10875:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10886:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10886:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10871:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10871:3:20"
																				},
																				"nativeSrc": "10871:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10871:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10895:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10895:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "10852:18:20",
																			"nodeType": "YulIdentifier",
																			"src": "10852:18:20"
																		},
																		"nativeSrc": "10852:51:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10852:51:20"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10842:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10842:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10923:119:20",
															"nodeType": "YulBlock",
															"src": "10923:119:20",
															"statements": [
																{
																	"nativeSrc": "10938:17:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10938:17:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10952:3:20",
																		"nodeType": "YulLiteral",
																		"src": "10952:3:20",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10942:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10942:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10969:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10969:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11004:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "11004:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11015:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "11015:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11000:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "11000:3:20"
																				},
																				"nativeSrc": "11000:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "11000:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11024:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "11024:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10979:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10979:20:20"
																		},
																		"nativeSrc": "10979:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10979:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "10969:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10969:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11052:119:20",
															"nodeType": "YulBlock",
															"src": "11052:119:20",
															"statements": [
																{
																	"nativeSrc": "11067:17:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11067:17:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11081:3:20",
																		"nodeType": "YulLiteral",
																		"src": "11081:3:20",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11071:6:20",
																			"nodeType": "YulTypedName",
																			"src": "11071:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11098:63:20",
																	"nodeType": "YulAssignment",
																	"src": "11098:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11133:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "11133:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11144:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "11144:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11129:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "11129:3:20"
																				},
																				"nativeSrc": "11129:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "11129:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11153:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "11153:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "11108:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "11108:20:20"
																		},
																		"nativeSrc": "11108:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11108:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "11098:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "11098:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "9979:1199:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10067:9:20",
														"nodeType": "YulTypedName",
														"src": "10067:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10078:7:20",
														"nodeType": "YulTypedName",
														"src": "10078:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10090:6:20",
														"nodeType": "YulTypedName",
														"src": "10090:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10098:6:20",
														"nodeType": "YulTypedName",
														"src": "10098:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10106:6:20",
														"nodeType": "YulTypedName",
														"src": "10106:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10114:6:20",
														"nodeType": "YulTypedName",
														"src": "10114:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10122:6:20",
														"nodeType": "YulTypedName",
														"src": "10122:6:20",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "10130:6:20",
														"nodeType": "YulTypedName",
														"src": "10130:6:20",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "10138:6:20",
														"nodeType": "YulTypedName",
														"src": "10138:6:20",
														"type": ""
													}
												],
												"src": "9979:1199:20"
											},
											{
												"body": {
													"nativeSrc": "11267:391:20",
													"nodeType": "YulBlock",
													"src": "11267:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "11313:83:20",
																"nodeType": "YulBlock",
																"src": "11313:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11315:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "11315:77:20"
																			},
																			"nativeSrc": "11315:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "11315:79:20"
																		},
																		"nativeSrc": "11315:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "11315:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11288:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "11288:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11297:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "11297:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11284:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11284:3:20"
																		},
																		"nativeSrc": "11284:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11284:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11309:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11309:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11280:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11280:3:20"
																},
																"nativeSrc": "11280:32:20",
																"nodeType": "YulFunctionCall",
																"src": "11280:32:20"
															},
															"nativeSrc": "11277:119:20",
															"nodeType": "YulIf",
															"src": "11277:119:20"
														},
														{
															"nativeSrc": "11406:117:20",
															"nodeType": "YulBlock",
															"src": "11406:117:20",
															"statements": [
																{
																	"nativeSrc": "11421:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11421:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11435:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11435:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11425:6:20",
																			"nodeType": "YulTypedName",
																			"src": "11425:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11450:63:20",
																	"nodeType": "YulAssignment",
																	"src": "11450:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11485:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "11485:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11496:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "11496:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11481:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "11481:3:20"
																				},
																				"nativeSrc": "11481:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "11481:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11505:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "11505:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11460:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "11460:20:20"
																		},
																		"nativeSrc": "11460:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11460:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11450:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "11450:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11533:118:20",
															"nodeType": "YulBlock",
															"src": "11533:118:20",
															"statements": [
																{
																	"nativeSrc": "11548:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11548:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11562:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11562:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11552:6:20",
																			"nodeType": "YulTypedName",
																			"src": "11552:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11578:63:20",
																	"nodeType": "YulAssignment",
																	"src": "11578:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11613:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "11613:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11624:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "11624:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11609:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "11609:3:20"
																				},
																				"nativeSrc": "11609:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "11609:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11633:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "11633:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11588:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "11588:20:20"
																		},
																		"nativeSrc": "11588:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11588:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11578:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "11578:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11184:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11229:9:20",
														"nodeType": "YulTypedName",
														"src": "11229:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11240:7:20",
														"nodeType": "YulTypedName",
														"src": "11240:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11252:6:20",
														"nodeType": "YulTypedName",
														"src": "11252:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11260:6:20",
														"nodeType": "YulTypedName",
														"src": "11260:6:20",
														"type": ""
													}
												],
												"src": "11184:474:20"
											},
											{
												"body": {
													"nativeSrc": "11692:152:20",
													"nodeType": "YulBlock",
													"src": "11692:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11709:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11709:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11712:77:20",
																		"nodeType": "YulLiteral",
																		"src": "11712:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11702:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11702:6:20"
																},
																"nativeSrc": "11702:88:20",
																"nodeType": "YulFunctionCall",
																"src": "11702:88:20"
															},
															"nativeSrc": "11702:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "11702:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11806:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11806:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11809:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11809:4:20",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11799:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11799:6:20"
																},
																"nativeSrc": "11799:15:20",
																"nodeType": "YulFunctionCall",
																"src": "11799:15:20"
															},
															"nativeSrc": "11799:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "11799:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11830:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11830:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11833:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11833:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11823:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11823:6:20"
																},
																"nativeSrc": "11823:15:20",
																"nodeType": "YulFunctionCall",
																"src": "11823:15:20"
															},
															"nativeSrc": "11823:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "11823:15:20"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11664:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "11664:180:20"
											},
											{
												"body": {
													"nativeSrc": "11901:269:20",
													"nodeType": "YulBlock",
													"src": "11901:269:20",
													"statements": [
														{
															"nativeSrc": "11911:22:20",
															"nodeType": "YulAssignment",
															"src": "11911:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11925:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "11925:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11931:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11931:1:20",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11921:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11921:3:20"
																},
																"nativeSrc": "11921:12:20",
																"nodeType": "YulFunctionCall",
																"src": "11921:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11911:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11911:6:20"
																}
															]
														},
														{
															"nativeSrc": "11942:38:20",
															"nodeType": "YulVariableDeclaration",
															"src": "11942:38:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11972:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "11972:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11978:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11978:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11968:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11968:3:20"
																},
																"nativeSrc": "11968:12:20",
																"nodeType": "YulFunctionCall",
																"src": "11968:12:20"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11946:18:20",
																	"nodeType": "YulTypedName",
																	"src": "11946:18:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12019:51:20",
																"nodeType": "YulBlock",
																"src": "12019:51:20",
																"statements": [
																	{
																		"nativeSrc": "12033:27:20",
																		"nodeType": "YulAssignment",
																		"src": "12033:27:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12047:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "12047:6:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12055:4:20",
																					"nodeType": "YulLiteral",
																					"src": "12055:4:20",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12043:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "12043:3:20"
																			},
																			"nativeSrc": "12043:17:20",
																			"nodeType": "YulFunctionCall",
																			"src": "12043:17:20"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12033:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "12033:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11999:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "11999:18:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11992:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11992:6:20"
																},
																"nativeSrc": "11992:26:20",
																"nodeType": "YulFunctionCall",
																"src": "11992:26:20"
															},
															"nativeSrc": "11989:81:20",
															"nodeType": "YulIf",
															"src": "11989:81:20"
														},
														{
															"body": {
																"nativeSrc": "12122:42:20",
																"nodeType": "YulBlock",
																"src": "12122:42:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12136:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "12136:16:20"
																			},
																			"nativeSrc": "12136:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "12136:18:20"
																		},
																		"nativeSrc": "12136:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "12136:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12086:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "12086:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12109:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "12109:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12117:2:20",
																				"nodeType": "YulLiteral",
																				"src": "12117:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12106:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "12106:2:20"
																		},
																		"nativeSrc": "12106:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12106:14:20"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12083:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "12083:2:20"
																},
																"nativeSrc": "12083:38:20",
																"nodeType": "YulFunctionCall",
																"src": "12083:38:20"
															},
															"nativeSrc": "12080:84:20",
															"nodeType": "YulIf",
															"src": "12080:84:20"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11850:320:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11885:4:20",
														"nodeType": "YulTypedName",
														"src": "11885:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11894:6:20",
														"nodeType": "YulTypedName",
														"src": "11894:6:20",
														"type": ""
													}
												],
												"src": "11850:320:20"
											},
											{
												"body": {
													"nativeSrc": "12204:152:20",
													"nodeType": "YulBlock",
													"src": "12204:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12221:1:20",
																		"nodeType": "YulLiteral",
																		"src": "12221:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12224:77:20",
																		"nodeType": "YulLiteral",
																		"src": "12224:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12214:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12214:6:20"
																},
																"nativeSrc": "12214:88:20",
																"nodeType": "YulFunctionCall",
																"src": "12214:88:20"
															},
															"nativeSrc": "12214:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "12214:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12318:1:20",
																		"nodeType": "YulLiteral",
																		"src": "12318:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12321:4:20",
																		"nodeType": "YulLiteral",
																		"src": "12321:4:20",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12311:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12311:6:20"
																},
																"nativeSrc": "12311:15:20",
																"nodeType": "YulFunctionCall",
																"src": "12311:15:20"
															},
															"nativeSrc": "12311:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "12311:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12342:1:20",
																		"nodeType": "YulLiteral",
																		"src": "12342:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12345:4:20",
																		"nodeType": "YulLiteral",
																		"src": "12345:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12335:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12335:6:20"
																},
																"nativeSrc": "12335:15:20",
																"nodeType": "YulFunctionCall",
																"src": "12335:15:20"
															},
															"nativeSrc": "12335:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "12335:15:20"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12176:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "12176:180:20"
											},
											{
												"body": {
													"nativeSrc": "12410:362:20",
													"nodeType": "YulBlock",
													"src": "12410:362:20",
													"statements": [
														{
															"nativeSrc": "12420:25:20",
															"nodeType": "YulAssignment",
															"src": "12420:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12443:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12443:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12425:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "12425:17:20"
																},
																"nativeSrc": "12425:20:20",
																"nodeType": "YulFunctionCall",
																"src": "12425:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12420:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "12420:1:20"
																}
															]
														},
														{
															"nativeSrc": "12454:25:20",
															"nodeType": "YulAssignment",
															"src": "12454:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12477:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12477:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12459:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "12459:17:20"
																},
																"nativeSrc": "12459:20:20",
																"nodeType": "YulFunctionCall",
																"src": "12459:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12454:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "12454:1:20"
																}
															]
														},
														{
															"nativeSrc": "12488:28:20",
															"nodeType": "YulVariableDeclaration",
															"src": "12488:28:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12511:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12511:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12514:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12514:1:20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12507:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12507:3:20"
																},
																"nativeSrc": "12507:9:20",
																"nodeType": "YulFunctionCall",
																"src": "12507:9:20"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12492:11:20",
																	"nodeType": "YulTypedName",
																	"src": "12492:11:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12525:41:20",
															"nodeType": "YulAssignment",
															"src": "12525:41:20",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12554:11:20",
																		"nodeType": "YulIdentifier",
																		"src": "12554:11:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12536:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "12536:17:20"
																},
																"nativeSrc": "12536:30:20",
																"nodeType": "YulFunctionCall",
																"src": "12536:30:20"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12525:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "12525:7:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12743:22:20",
																"nodeType": "YulBlock",
																"src": "12743:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12745:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "12745:16:20"
																			},
																			"nativeSrc": "12745:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "12745:18:20"
																		},
																		"nativeSrc": "12745:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "12745:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12676:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "12676:1:20"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12669:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "12669:6:20"
																				},
																				"nativeSrc": "12669:9:20",
																				"nodeType": "YulFunctionCall",
																				"src": "12669:9:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12699:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "12699:1:20"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12706:7:20",
																								"nodeType": "YulIdentifier",
																								"src": "12706:7:20"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12715:1:20",
																								"nodeType": "YulIdentifier",
																								"src": "12715:1:20"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12702:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "12702:3:20"
																						},
																						"nativeSrc": "12702:15:20",
																						"nodeType": "YulFunctionCall",
																						"src": "12702:15:20"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12696:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "12696:2:20"
																				},
																				"nativeSrc": "12696:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "12696:22:20"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12649:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "12649:2:20"
																		},
																		"nativeSrc": "12649:83:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12649:83:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12629:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12629:6:20"
																},
																"nativeSrc": "12629:113:20",
																"nodeType": "YulFunctionCall",
																"src": "12629:113:20"
															},
															"nativeSrc": "12626:139:20",
															"nodeType": "YulIf",
															"src": "12626:139:20"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12362:410:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12393:1:20",
														"nodeType": "YulTypedName",
														"src": "12393:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12396:1:20",
														"nodeType": "YulTypedName",
														"src": "12396:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12402:7:20",
														"nodeType": "YulTypedName",
														"src": "12402:7:20",
														"type": ""
													}
												],
												"src": "12362:410:20"
											},
											{
												"body": {
													"nativeSrc": "12806:152:20",
													"nodeType": "YulBlock",
													"src": "12806:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12823:1:20",
																		"nodeType": "YulLiteral",
																		"src": "12823:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12826:77:20",
																		"nodeType": "YulLiteral",
																		"src": "12826:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12816:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12816:6:20"
																},
																"nativeSrc": "12816:88:20",
																"nodeType": "YulFunctionCall",
																"src": "12816:88:20"
															},
															"nativeSrc": "12816:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "12816:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12920:1:20",
																		"nodeType": "YulLiteral",
																		"src": "12920:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12923:4:20",
																		"nodeType": "YulLiteral",
																		"src": "12923:4:20",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12913:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:20"
																},
																"nativeSrc": "12913:15:20",
																"nodeType": "YulFunctionCall",
																"src": "12913:15:20"
															},
															"nativeSrc": "12913:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "12913:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12944:1:20",
																		"nodeType": "YulLiteral",
																		"src": "12944:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12947:4:20",
																		"nodeType": "YulLiteral",
																		"src": "12947:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12937:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12937:6:20"
																},
																"nativeSrc": "12937:15:20",
																"nodeType": "YulFunctionCall",
																"src": "12937:15:20"
															},
															"nativeSrc": "12937:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "12937:15:20"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12778:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "12778:180:20"
											},
											{
												"body": {
													"nativeSrc": "13006:143:20",
													"nodeType": "YulBlock",
													"src": "13006:143:20",
													"statements": [
														{
															"nativeSrc": "13016:25:20",
															"nodeType": "YulAssignment",
															"src": "13016:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13039:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "13039:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13021:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "13021:17:20"
																},
																"nativeSrc": "13021:20:20",
																"nodeType": "YulFunctionCall",
																"src": "13021:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13016:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "13016:1:20"
																}
															]
														},
														{
															"nativeSrc": "13050:25:20",
															"nodeType": "YulAssignment",
															"src": "13050:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13073:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "13073:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13055:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "13055:17:20"
																},
																"nativeSrc": "13055:20:20",
																"nodeType": "YulFunctionCall",
																"src": "13055:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13050:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "13050:1:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13097:22:20",
																"nodeType": "YulBlock",
																"src": "13097:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13099:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "13099:16:20"
																			},
																			"nativeSrc": "13099:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "13099:18:20"
																		},
																		"nativeSrc": "13099:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "13099:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13094:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "13094:1:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13087:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13087:6:20"
																},
																"nativeSrc": "13087:9:20",
																"nodeType": "YulFunctionCall",
																"src": "13087:9:20"
															},
															"nativeSrc": "13084:35:20",
															"nodeType": "YulIf",
															"src": "13084:35:20"
														},
														{
															"nativeSrc": "13129:14:20",
															"nodeType": "YulAssignment",
															"src": "13129:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13138:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "13138:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13141:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "13141:1:20"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13134:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13134:3:20"
																},
																"nativeSrc": "13134:9:20",
																"nodeType": "YulFunctionCall",
																"src": "13134:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13129:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "13129:1:20"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12964:185:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12995:1:20",
														"nodeType": "YulTypedName",
														"src": "12995:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12998:1:20",
														"nodeType": "YulTypedName",
														"src": "12998:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13004:1:20",
														"nodeType": "YulTypedName",
														"src": "13004:1:20",
														"type": ""
													}
												],
												"src": "12964:185:20"
											},
											{
												"body": {
													"nativeSrc": "13261:129:20",
													"nodeType": "YulBlock",
													"src": "13261:129:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13283:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "13283:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13291:1:20",
																				"nodeType": "YulLiteral",
																				"src": "13291:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13279:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13279:3:20"
																		},
																		"nativeSrc": "13279:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13279:14:20"
																	},
																	{
																		"hexValue": "63757272656e746c79206465707420746f20636f727265746572616c20726174",
																		"kind": "string",
																		"nativeSrc": "13295:34:20",
																		"nodeType": "YulLiteral",
																		"src": "13295:34:20",
																		"type": "",
																		"value": "currently dept to correteral rat"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13272:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13272:6:20"
																},
																"nativeSrc": "13272:58:20",
																"nodeType": "YulFunctionCall",
																"src": "13272:58:20"
															},
															"nativeSrc": "13272:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "13272:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13351:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "13351:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13359:2:20",
																				"nodeType": "YulLiteral",
																				"src": "13359:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13347:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13347:3:20"
																		},
																		"nativeSrc": "13347:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13347:15:20"
																	},
																	{
																		"hexValue": "696f206c657373207468616e20383525",
																		"kind": "string",
																		"nativeSrc": "13364:18:20",
																		"nodeType": "YulLiteral",
																		"src": "13364:18:20",
																		"type": "",
																		"value": "io less than 85%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13340:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13340:6:20"
																},
																"nativeSrc": "13340:43:20",
																"nodeType": "YulFunctionCall",
																"src": "13340:43:20"
															},
															"nativeSrc": "13340:43:20",
															"nodeType": "YulExpressionStatement",
															"src": "13340:43:20"
														}
													]
												},
												"name": "store_literal_in_memory_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413",
												"nativeSrc": "13155:235:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13253:6:20",
														"nodeType": "YulTypedName",
														"src": "13253:6:20",
														"type": ""
													}
												],
												"src": "13155:235:20"
											},
											{
												"body": {
													"nativeSrc": "13542:220:20",
													"nodeType": "YulBlock",
													"src": "13542:220:20",
													"statements": [
														{
															"nativeSrc": "13552:74:20",
															"nodeType": "YulAssignment",
															"src": "13552:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13618:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "13618:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13623:2:20",
																		"nodeType": "YulLiteral",
																		"src": "13623:2:20",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13559:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "13559:58:20"
																},
																"nativeSrc": "13559:67:20",
																"nodeType": "YulFunctionCall",
																"src": "13559:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13552:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13552:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13724:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "13724:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413",
																	"nativeSrc": "13635:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "13635:88:20"
																},
																"nativeSrc": "13635:93:20",
																"nodeType": "YulFunctionCall",
																"src": "13635:93:20"
															},
															"nativeSrc": "13635:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "13635:93:20"
														},
														{
															"nativeSrc": "13737:19:20",
															"nodeType": "YulAssignment",
															"src": "13737:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13748:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "13748:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13753:2:20",
																		"nodeType": "YulLiteral",
																		"src": "13753:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13744:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13744:3:20"
																},
																"nativeSrc": "13744:12:20",
																"nodeType": "YulFunctionCall",
																"src": "13744:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13737:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13737:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13396:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13530:3:20",
														"nodeType": "YulTypedName",
														"src": "13530:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13538:3:20",
														"nodeType": "YulTypedName",
														"src": "13538:3:20",
														"type": ""
													}
												],
												"src": "13396:366:20"
											},
											{
												"body": {
													"nativeSrc": "13939:248:20",
													"nodeType": "YulBlock",
													"src": "13939:248:20",
													"statements": [
														{
															"nativeSrc": "13949:26:20",
															"nodeType": "YulAssignment",
															"src": "13949:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13961:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "13961:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13972:2:20",
																		"nodeType": "YulLiteral",
																		"src": "13972:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13957:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13957:3:20"
																},
																"nativeSrc": "13957:18:20",
																"nodeType": "YulFunctionCall",
																"src": "13957:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13949:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "13949:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13996:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13996:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14007:1:20",
																				"nodeType": "YulLiteral",
																				"src": "14007:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13992:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13992:3:20"
																		},
																		"nativeSrc": "13992:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13992:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14015:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "14015:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14021:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14021:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14011:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14011:3:20"
																		},
																		"nativeSrc": "14011:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14011:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13985:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "13985:6:20"
																},
																"nativeSrc": "13985:47:20",
																"nodeType": "YulFunctionCall",
																"src": "13985:47:20"
															},
															"nativeSrc": "13985:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "13985:47:20"
														},
														{
															"nativeSrc": "14041:139:20",
															"nodeType": "YulAssignment",
															"src": "14041:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14175:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "14175:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14049:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "14049:124:20"
																},
																"nativeSrc": "14049:131:20",
																"nodeType": "YulFunctionCall",
																"src": "14049:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14041:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "14041:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13768:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13919:9:20",
														"nodeType": "YulTypedName",
														"src": "13919:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13934:4:20",
														"nodeType": "YulTypedName",
														"src": "13934:4:20",
														"type": ""
													}
												],
												"src": "13768:419:20"
											},
											{
												"body": {
													"nativeSrc": "14313:200:20",
													"nodeType": "YulBlock",
													"src": "14313:200:20",
													"statements": [
														{
															"nativeSrc": "14323:26:20",
															"nodeType": "YulAssignment",
															"src": "14323:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14335:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "14335:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14346:2:20",
																		"nodeType": "YulLiteral",
																		"src": "14346:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14331:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14331:3:20"
																},
																"nativeSrc": "14331:18:20",
																"nodeType": "YulFunctionCall",
																"src": "14331:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14323:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "14323:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14403:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "14403:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14416:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14416:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14427:1:20",
																				"nodeType": "YulLiteral",
																				"src": "14427:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14412:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14412:3:20"
																		},
																		"nativeSrc": "14412:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14412:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14359:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "14359:43:20"
																},
																"nativeSrc": "14359:71:20",
																"nodeType": "YulFunctionCall",
																"src": "14359:71:20"
															},
															"nativeSrc": "14359:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "14359:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14478:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "14478:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14491:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14491:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14502:2:20",
																				"nodeType": "YulLiteral",
																				"src": "14502:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14487:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14487:3:20"
																		},
																		"nativeSrc": "14487:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14487:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "14440:37:20",
																	"nodeType": "YulIdentifier",
																	"src": "14440:37:20"
																},
																"nativeSrc": "14440:66:20",
																"nodeType": "YulFunctionCall",
																"src": "14440:66:20"
															},
															"nativeSrc": "14440:66:20",
															"nodeType": "YulExpressionStatement",
															"src": "14440:66:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "14193:320:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14277:9:20",
														"nodeType": "YulTypedName",
														"src": "14277:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14289:6:20",
														"nodeType": "YulTypedName",
														"src": "14289:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14297:6:20",
														"nodeType": "YulTypedName",
														"src": "14297:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14308:4:20",
														"nodeType": "YulTypedName",
														"src": "14308:4:20",
														"type": ""
													}
												],
												"src": "14193:320:20"
											},
											{
												"body": {
													"nativeSrc": "14563:61:20",
													"nodeType": "YulBlock",
													"src": "14563:61:20",
													"statements": [
														{
															"nativeSrc": "14573:45:20",
															"nodeType": "YulAssignment",
															"src": "14573:45:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14588:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "14588:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14595:22:20",
																		"nodeType": "YulLiteral",
																		"src": "14595:22:20",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14584:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14584:3:20"
																},
																"nativeSrc": "14584:34:20",
																"nodeType": "YulFunctionCall",
																"src": "14584:34:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "14573:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "14573:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "14519:105:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14545:5:20",
														"nodeType": "YulTypedName",
														"src": "14545:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14555:7:20",
														"nodeType": "YulTypedName",
														"src": "14555:7:20",
														"type": ""
													}
												],
												"src": "14519:105:20"
											},
											{
												"body": {
													"nativeSrc": "14672:78:20",
													"nodeType": "YulBlock",
													"src": "14672:78:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "14728:16:20",
																"nodeType": "YulBlock",
																"src": "14728:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14737:1:20",
																					"nodeType": "YulLiteral",
																					"src": "14737:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14740:1:20",
																					"nodeType": "YulLiteral",
																					"src": "14740:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14730:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "14730:6:20"
																			},
																			"nativeSrc": "14730:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "14730:12:20"
																		},
																		"nativeSrc": "14730:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "14730:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14695:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "14695:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14719:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "14719:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "14702:16:20",
																					"nodeType": "YulIdentifier",
																					"src": "14702:16:20"
																				},
																				"nativeSrc": "14702:23:20",
																				"nodeType": "YulFunctionCall",
																				"src": "14702:23:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14692:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "14692:2:20"
																		},
																		"nativeSrc": "14692:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14692:34:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14685:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14685:6:20"
																},
																"nativeSrc": "14685:42:20",
																"nodeType": "YulFunctionCall",
																"src": "14685:42:20"
															},
															"nativeSrc": "14682:62:20",
															"nodeType": "YulIf",
															"src": "14682:62:20"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "14630:120:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14665:5:20",
														"nodeType": "YulTypedName",
														"src": "14665:5:20",
														"type": ""
													}
												],
												"src": "14630:120:20"
											},
											{
												"body": {
													"nativeSrc": "14818:79:20",
													"nodeType": "YulBlock",
													"src": "14818:79:20",
													"statements": [
														{
															"nativeSrc": "14828:22:20",
															"nodeType": "YulAssignment",
															"src": "14828:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14843:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "14843:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14837:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "14837:5:20"
																},
																"nativeSrc": "14837:13:20",
																"nodeType": "YulFunctionCall",
																"src": "14837:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14828:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "14828:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14885:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "14885:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "14859:25:20",
																	"nodeType": "YulIdentifier",
																	"src": "14859:25:20"
																},
																"nativeSrc": "14859:32:20",
																"nodeType": "YulFunctionCall",
																"src": "14859:32:20"
															},
															"nativeSrc": "14859:32:20",
															"nodeType": "YulExpressionStatement",
															"src": "14859:32:20"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "14756:141:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14796:6:20",
														"nodeType": "YulTypedName",
														"src": "14796:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14804:3:20",
														"nodeType": "YulTypedName",
														"src": "14804:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14812:5:20",
														"nodeType": "YulTypedName",
														"src": "14812:5:20",
														"type": ""
													}
												],
												"src": "14756:141:20"
											},
											{
												"body": {
													"nativeSrc": "14947:32:20",
													"nodeType": "YulBlock",
													"src": "14947:32:20",
													"statements": [
														{
															"nativeSrc": "14957:16:20",
															"nodeType": "YulAssignment",
															"src": "14957:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "14968:5:20",
																"nodeType": "YulIdentifier",
																"src": "14968:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "14957:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "14957:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "14903:76:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14929:5:20",
														"nodeType": "YulTypedName",
														"src": "14929:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14939:7:20",
														"nodeType": "YulTypedName",
														"src": "14939:7:20",
														"type": ""
													}
												],
												"src": "14903:76:20"
											},
											{
												"body": {
													"nativeSrc": "15027:78:20",
													"nodeType": "YulBlock",
													"src": "15027:78:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "15083:16:20",
																"nodeType": "YulBlock",
																"src": "15083:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15092:1:20",
																					"nodeType": "YulLiteral",
																					"src": "15092:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15095:1:20",
																					"nodeType": "YulLiteral",
																					"src": "15095:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15085:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "15085:6:20"
																			},
																			"nativeSrc": "15085:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "15085:12:20"
																		},
																		"nativeSrc": "15085:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "15085:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15050:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "15050:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15074:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "15074:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "15057:16:20",
																					"nodeType": "YulIdentifier",
																					"src": "15057:16:20"
																				},
																				"nativeSrc": "15057:23:20",
																				"nodeType": "YulFunctionCall",
																				"src": "15057:23:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15047:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "15047:2:20"
																		},
																		"nativeSrc": "15047:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15047:34:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15040:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "15040:6:20"
																},
																"nativeSrc": "15040:42:20",
																"nodeType": "YulFunctionCall",
																"src": "15040:42:20"
															},
															"nativeSrc": "15037:62:20",
															"nodeType": "YulIf",
															"src": "15037:62:20"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "14985:120:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15020:5:20",
														"nodeType": "YulTypedName",
														"src": "15020:5:20",
														"type": ""
													}
												],
												"src": "14985:120:20"
											},
											{
												"body": {
													"nativeSrc": "15173:79:20",
													"nodeType": "YulBlock",
													"src": "15173:79:20",
													"statements": [
														{
															"nativeSrc": "15183:22:20",
															"nodeType": "YulAssignment",
															"src": "15183:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15198:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15198:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15192:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "15192:5:20"
																},
																"nativeSrc": "15192:13:20",
																"nodeType": "YulFunctionCall",
																"src": "15192:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15183:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "15183:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15240:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "15240:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "15214:25:20",
																	"nodeType": "YulIdentifier",
																	"src": "15214:25:20"
																},
																"nativeSrc": "15214:32:20",
																"nodeType": "YulFunctionCall",
																"src": "15214:32:20"
															},
															"nativeSrc": "15214:32:20",
															"nodeType": "YulExpressionStatement",
															"src": "15214:32:20"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "15111:141:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15151:6:20",
														"nodeType": "YulTypedName",
														"src": "15151:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15159:3:20",
														"nodeType": "YulTypedName",
														"src": "15159:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15167:5:20",
														"nodeType": "YulTypedName",
														"src": "15167:5:20",
														"type": ""
													}
												],
												"src": "15111:141:20"
											},
											{
												"body": {
													"nativeSrc": "15321:80:20",
													"nodeType": "YulBlock",
													"src": "15321:80:20",
													"statements": [
														{
															"nativeSrc": "15331:22:20",
															"nodeType": "YulAssignment",
															"src": "15331:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15346:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15346:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15340:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "15340:5:20"
																},
																"nativeSrc": "15340:13:20",
																"nodeType": "YulFunctionCall",
																"src": "15340:13:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15331:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "15331:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15389:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "15389:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "15362:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "15362:26:20"
																},
																"nativeSrc": "15362:33:20",
																"nodeType": "YulFunctionCall",
																"src": "15362:33:20"
															},
															"nativeSrc": "15362:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "15362:33:20"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "15258:143:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15299:6:20",
														"nodeType": "YulTypedName",
														"src": "15299:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15307:3:20",
														"nodeType": "YulTypedName",
														"src": "15307:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15315:5:20",
														"nodeType": "YulTypedName",
														"src": "15315:5:20",
														"type": ""
													}
												],
												"src": "15258:143:20"
											},
											{
												"body": {
													"nativeSrc": "15549:829:20",
													"nodeType": "YulBlock",
													"src": "15549:829:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "15596:83:20",
																"nodeType": "YulBlock",
																"src": "15596:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15598:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "15598:77:20"
																			},
																			"nativeSrc": "15598:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "15598:79:20"
																		},
																		"nativeSrc": "15598:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "15598:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15570:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "15570:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15579:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15579:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15566:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15566:3:20"
																		},
																		"nativeSrc": "15566:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15566:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15591:3:20",
																		"nodeType": "YulLiteral",
																		"src": "15591:3:20",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15562:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15562:3:20"
																},
																"nativeSrc": "15562:33:20",
																"nodeType": "YulFunctionCall",
																"src": "15562:33:20"
															},
															"nativeSrc": "15559:120:20",
															"nodeType": "YulIf",
															"src": "15559:120:20"
														},
														{
															"nativeSrc": "15689:127:20",
															"nodeType": "YulBlock",
															"src": "15689:127:20",
															"statements": [
																{
																	"nativeSrc": "15704:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15704:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15718:1:20",
																		"nodeType": "YulLiteral",
																		"src": "15718:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15708:6:20",
																			"nodeType": "YulTypedName",
																			"src": "15708:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15733:73:20",
																	"nodeType": "YulAssignment",
																	"src": "15733:73:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15778:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "15778:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15789:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "15789:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15774:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "15774:3:20"
																				},
																				"nativeSrc": "15774:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "15774:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15798:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "15798:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "15743:30:20",
																			"nodeType": "YulIdentifier",
																			"src": "15743:30:20"
																		},
																		"nativeSrc": "15743:63:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15743:63:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15733:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "15733:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15826:128:20",
															"nodeType": "YulBlock",
															"src": "15826:128:20",
															"statements": [
																{
																	"nativeSrc": "15841:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15841:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15855:2:20",
																		"nodeType": "YulLiteral",
																		"src": "15855:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15845:6:20",
																			"nodeType": "YulTypedName",
																			"src": "15845:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15871:73:20",
																	"nodeType": "YulAssignment",
																	"src": "15871:73:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15916:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "15916:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15927:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "15927:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15912:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "15912:3:20"
																				},
																				"nativeSrc": "15912:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "15912:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15936:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "15936:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "15881:30:20",
																			"nodeType": "YulIdentifier",
																			"src": "15881:30:20"
																		},
																		"nativeSrc": "15881:63:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15881:63:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15871:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "15871:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15964:129:20",
															"nodeType": "YulBlock",
															"src": "15964:129:20",
															"statements": [
																{
																	"nativeSrc": "15979:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15979:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15993:2:20",
																		"nodeType": "YulLiteral",
																		"src": "15993:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15983:6:20",
																			"nodeType": "YulTypedName",
																			"src": "15983:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16009:74:20",
																	"nodeType": "YulAssignment",
																	"src": "16009:74:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16055:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "16055:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16066:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "16066:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16051:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "16051:3:20"
																				},
																				"nativeSrc": "16051:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "16051:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16075:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "16075:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16019:31:20",
																			"nodeType": "YulIdentifier",
																			"src": "16019:31:20"
																		},
																		"nativeSrc": "16019:64:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16019:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16009:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "16009:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16103:129:20",
															"nodeType": "YulBlock",
															"src": "16103:129:20",
															"statements": [
																{
																	"nativeSrc": "16118:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16118:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16132:2:20",
																		"nodeType": "YulLiteral",
																		"src": "16132:2:20",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16122:6:20",
																			"nodeType": "YulTypedName",
																			"src": "16122:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16148:74:20",
																	"nodeType": "YulAssignment",
																	"src": "16148:74:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16194:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "16194:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16205:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "16205:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16190:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "16190:3:20"
																				},
																				"nativeSrc": "16190:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "16190:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16214:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "16214:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16158:31:20",
																			"nodeType": "YulIdentifier",
																			"src": "16158:31:20"
																		},
																		"nativeSrc": "16158:64:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16158:64:20"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "16148:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "16148:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16242:129:20",
															"nodeType": "YulBlock",
															"src": "16242:129:20",
															"statements": [
																{
																	"nativeSrc": "16257:17:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16257:17:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16271:3:20",
																		"nodeType": "YulLiteral",
																		"src": "16271:3:20",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16261:6:20",
																			"nodeType": "YulTypedName",
																			"src": "16261:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16288:73:20",
																	"nodeType": "YulAssignment",
																	"src": "16288:73:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16333:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "16333:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16344:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "16344:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16329:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "16329:3:20"
																				},
																				"nativeSrc": "16329:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "16329:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16353:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "16353:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "16298:30:20",
																			"nodeType": "YulIdentifier",
																			"src": "16298:30:20"
																		},
																		"nativeSrc": "16298:63:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16298:63:20"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "16288:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "16288:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "15407:971:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15487:9:20",
														"nodeType": "YulTypedName",
														"src": "15487:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15498:7:20",
														"nodeType": "YulTypedName",
														"src": "15498:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15510:6:20",
														"nodeType": "YulTypedName",
														"src": "15510:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15518:6:20",
														"nodeType": "YulTypedName",
														"src": "15518:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15526:6:20",
														"nodeType": "YulTypedName",
														"src": "15526:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15534:6:20",
														"nodeType": "YulTypedName",
														"src": "15534:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15542:6:20",
														"nodeType": "YulTypedName",
														"src": "15542:6:20",
														"type": ""
													}
												],
												"src": "15407:971:20"
											},
											{
												"body": {
													"nativeSrc": "16412:152:20",
													"nodeType": "YulBlock",
													"src": "16412:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16429:1:20",
																		"nodeType": "YulLiteral",
																		"src": "16429:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16432:77:20",
																		"nodeType": "YulLiteral",
																		"src": "16432:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16422:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16422:6:20"
																},
																"nativeSrc": "16422:88:20",
																"nodeType": "YulFunctionCall",
																"src": "16422:88:20"
															},
															"nativeSrc": "16422:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "16422:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16526:1:20",
																		"nodeType": "YulLiteral",
																		"src": "16526:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16529:4:20",
																		"nodeType": "YulLiteral",
																		"src": "16529:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16519:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16519:6:20"
																},
																"nativeSrc": "16519:15:20",
																"nodeType": "YulFunctionCall",
																"src": "16519:15:20"
															},
															"nativeSrc": "16519:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "16519:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16550:1:20",
																		"nodeType": "YulLiteral",
																		"src": "16550:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16553:4:20",
																		"nodeType": "YulLiteral",
																		"src": "16553:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16543:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16543:6:20"
																},
																"nativeSrc": "16543:15:20",
																"nodeType": "YulFunctionCall",
																"src": "16543:15:20"
															},
															"nativeSrc": "16543:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "16543:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "16384:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "16384:180:20"
											},
											{
												"body": {
													"nativeSrc": "16676:74:20",
													"nodeType": "YulBlock",
													"src": "16676:74:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16698:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "16698:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16706:1:20",
																				"nodeType": "YulLiteral",
																				"src": "16706:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16694:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "16694:3:20"
																		},
																		"nativeSrc": "16694:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "16694:14:20"
																	},
																	{
																		"hexValue": "526174696f206d757374206c657373207468616e20657175616c20373525",
																		"kind": "string",
																		"nativeSrc": "16710:32:20",
																		"nodeType": "YulLiteral",
																		"src": "16710:32:20",
																		"type": "",
																		"value": "Ratio must less than equal 75%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16687:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16687:6:20"
																},
																"nativeSrc": "16687:56:20",
																"nodeType": "YulFunctionCall",
																"src": "16687:56:20"
															},
															"nativeSrc": "16687:56:20",
															"nodeType": "YulExpressionStatement",
															"src": "16687:56:20"
														}
													]
												},
												"name": "store_literal_in_memory_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d",
												"nativeSrc": "16570:180:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16668:6:20",
														"nodeType": "YulTypedName",
														"src": "16668:6:20",
														"type": ""
													}
												],
												"src": "16570:180:20"
											},
											{
												"body": {
													"nativeSrc": "16902:220:20",
													"nodeType": "YulBlock",
													"src": "16902:220:20",
													"statements": [
														{
															"nativeSrc": "16912:74:20",
															"nodeType": "YulAssignment",
															"src": "16912:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16978:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "16978:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16983:2:20",
																		"nodeType": "YulLiteral",
																		"src": "16983:2:20",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16919:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "16919:58:20"
																},
																"nativeSrc": "16919:67:20",
																"nodeType": "YulFunctionCall",
																"src": "16919:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16912:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "16912:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17084:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "17084:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d",
																	"nativeSrc": "16995:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "16995:88:20"
																},
																"nativeSrc": "16995:93:20",
																"nodeType": "YulFunctionCall",
																"src": "16995:93:20"
															},
															"nativeSrc": "16995:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "16995:93:20"
														},
														{
															"nativeSrc": "17097:19:20",
															"nodeType": "YulAssignment",
															"src": "17097:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17108:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "17108:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17113:2:20",
																		"nodeType": "YulLiteral",
																		"src": "17113:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17104:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17104:3:20"
																},
																"nativeSrc": "17104:12:20",
																"nodeType": "YulFunctionCall",
																"src": "17104:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17097:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17097:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16756:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16890:3:20",
														"nodeType": "YulTypedName",
														"src": "16890:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16898:3:20",
														"nodeType": "YulTypedName",
														"src": "16898:3:20",
														"type": ""
													}
												],
												"src": "16756:366:20"
											},
											{
												"body": {
													"nativeSrc": "17299:248:20",
													"nodeType": "YulBlock",
													"src": "17299:248:20",
													"statements": [
														{
															"nativeSrc": "17309:26:20",
															"nodeType": "YulAssignment",
															"src": "17309:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17321:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "17321:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17332:2:20",
																		"nodeType": "YulLiteral",
																		"src": "17332:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17317:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17317:3:20"
																},
																"nativeSrc": "17317:18:20",
																"nodeType": "YulFunctionCall",
																"src": "17317:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17309:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "17309:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17356:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "17356:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17367:1:20",
																				"nodeType": "YulLiteral",
																				"src": "17367:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17352:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17352:3:20"
																		},
																		"nativeSrc": "17352:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17352:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17375:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "17375:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17381:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "17381:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17371:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17371:3:20"
																		},
																		"nativeSrc": "17371:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17371:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17345:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "17345:6:20"
																},
																"nativeSrc": "17345:47:20",
																"nodeType": "YulFunctionCall",
																"src": "17345:47:20"
															},
															"nativeSrc": "17345:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "17345:47:20"
														},
														{
															"nativeSrc": "17401:139:20",
															"nodeType": "YulAssignment",
															"src": "17401:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17535:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "17535:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17409:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "17409:124:20"
																},
																"nativeSrc": "17409:131:20",
																"nodeType": "YulFunctionCall",
																"src": "17409:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17401:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "17401:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17128:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17279:9:20",
														"nodeType": "YulTypedName",
														"src": "17279:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17294:4:20",
														"nodeType": "YulTypedName",
														"src": "17294:4:20",
														"type": ""
													}
												],
												"src": "17128:419:20"
											},
											{
												"body": {
													"nativeSrc": "17791:537:20",
													"nodeType": "YulBlock",
													"src": "17791:537:20",
													"statements": [
														{
															"nativeSrc": "17801:27:20",
															"nodeType": "YulAssignment",
															"src": "17801:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17813:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "17813:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17824:3:20",
																		"nodeType": "YulLiteral",
																		"src": "17824:3:20",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17809:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "17809:3:20"
																},
																"nativeSrc": "17809:19:20",
																"nodeType": "YulFunctionCall",
																"src": "17809:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17801:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "17801:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17882:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "17882:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17895:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "17895:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17906:1:20",
																				"nodeType": "YulLiteral",
																				"src": "17906:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17891:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17891:3:20"
																		},
																		"nativeSrc": "17891:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17891:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "17838:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "17838:43:20"
																},
																"nativeSrc": "17838:71:20",
																"nodeType": "YulFunctionCall",
																"src": "17838:71:20"
															},
															"nativeSrc": "17838:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "17838:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17963:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "17963:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17976:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "17976:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17987:2:20",
																				"nodeType": "YulLiteral",
																				"src": "17987:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17972:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "17972:3:20"
																		},
																		"nativeSrc": "17972:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "17972:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17919:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "17919:43:20"
																},
																"nativeSrc": "17919:72:20",
																"nodeType": "YulFunctionCall",
																"src": "17919:72:20"
															},
															"nativeSrc": "17919:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "17919:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18045:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "18045:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18058:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "18058:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18069:2:20",
																				"nodeType": "YulLiteral",
																				"src": "18069:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18054:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18054:3:20"
																		},
																		"nativeSrc": "18054:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18054:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18001:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "18001:43:20"
																},
																"nativeSrc": "18001:72:20",
																"nodeType": "YulFunctionCall",
																"src": "18001:72:20"
															},
															"nativeSrc": "18001:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "18001:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "18127:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "18127:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18140:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "18140:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18151:2:20",
																				"nodeType": "YulLiteral",
																				"src": "18151:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18136:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18136:3:20"
																		},
																		"nativeSrc": "18136:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18136:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18083:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "18083:43:20"
																},
																"nativeSrc": "18083:72:20",
																"nodeType": "YulFunctionCall",
																"src": "18083:72:20"
															},
															"nativeSrc": "18083:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "18083:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "18209:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "18209:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18222:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "18222:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18233:3:20",
																				"nodeType": "YulLiteral",
																				"src": "18233:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18218:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18218:3:20"
																		},
																		"nativeSrc": "18218:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18218:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18165:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "18165:43:20"
																},
																"nativeSrc": "18165:73:20",
																"nodeType": "YulFunctionCall",
																"src": "18165:73:20"
															},
															"nativeSrc": "18165:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "18165:73:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "18292:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "18292:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18305:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "18305:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18316:3:20",
																				"nodeType": "YulLiteral",
																				"src": "18316:3:20",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18301:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18301:3:20"
																		},
																		"nativeSrc": "18301:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18301:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18248:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "18248:43:20"
																},
																"nativeSrc": "18248:73:20",
																"nodeType": "YulFunctionCall",
																"src": "18248:73:20"
															},
															"nativeSrc": "18248:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "18248:73:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17553:775:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17723:9:20",
														"nodeType": "YulTypedName",
														"src": "17723:9:20",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "17735:6:20",
														"nodeType": "YulTypedName",
														"src": "17735:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "17743:6:20",
														"nodeType": "YulTypedName",
														"src": "17743:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17751:6:20",
														"nodeType": "YulTypedName",
														"src": "17751:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17759:6:20",
														"nodeType": "YulTypedName",
														"src": "17759:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17767:6:20",
														"nodeType": "YulTypedName",
														"src": "17767:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17775:6:20",
														"nodeType": "YulTypedName",
														"src": "17775:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17786:4:20",
														"nodeType": "YulTypedName",
														"src": "17786:4:20",
														"type": ""
													}
												],
												"src": "17553:775:20"
											},
											{
												"body": {
													"nativeSrc": "18460:206:20",
													"nodeType": "YulBlock",
													"src": "18460:206:20",
													"statements": [
														{
															"nativeSrc": "18470:26:20",
															"nodeType": "YulAssignment",
															"src": "18470:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18482:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "18482:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18493:2:20",
																		"nodeType": "YulLiteral",
																		"src": "18493:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18478:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "18478:3:20"
																},
																"nativeSrc": "18478:18:20",
																"nodeType": "YulFunctionCall",
																"src": "18478:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18470:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "18470:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18550:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "18550:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18563:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "18563:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18574:1:20",
																				"nodeType": "YulLiteral",
																				"src": "18574:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18559:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18559:3:20"
																		},
																		"nativeSrc": "18559:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18559:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18506:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "18506:43:20"
																},
																"nativeSrc": "18506:71:20",
																"nodeType": "YulFunctionCall",
																"src": "18506:71:20"
															},
															"nativeSrc": "18506:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "18506:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18631:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "18631:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18644:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "18644:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18655:2:20",
																				"nodeType": "YulLiteral",
																				"src": "18655:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18640:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18640:3:20"
																		},
																		"nativeSrc": "18640:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18640:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18587:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "18587:43:20"
																},
																"nativeSrc": "18587:72:20",
																"nodeType": "YulFunctionCall",
																"src": "18587:72:20"
															},
															"nativeSrc": "18587:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "18587:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "18334:332:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18424:9:20",
														"nodeType": "YulTypedName",
														"src": "18424:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18436:6:20",
														"nodeType": "YulTypedName",
														"src": "18436:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18444:6:20",
														"nodeType": "YulTypedName",
														"src": "18444:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18455:4:20",
														"nodeType": "YulTypedName",
														"src": "18455:4:20",
														"type": ""
													}
												],
												"src": "18334:332:20"
											},
											{
												"body": {
													"nativeSrc": "18826:288:20",
													"nodeType": "YulBlock",
													"src": "18826:288:20",
													"statements": [
														{
															"nativeSrc": "18836:26:20",
															"nodeType": "YulAssignment",
															"src": "18836:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18848:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "18848:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18859:2:20",
																		"nodeType": "YulLiteral",
																		"src": "18859:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18844:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "18844:3:20"
																},
																"nativeSrc": "18844:18:20",
																"nodeType": "YulFunctionCall",
																"src": "18844:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18836:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "18836:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18916:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "18916:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18929:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "18929:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18940:1:20",
																				"nodeType": "YulLiteral",
																				"src": "18940:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18925:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "18925:3:20"
																		},
																		"nativeSrc": "18925:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "18925:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18872:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "18872:43:20"
																},
																"nativeSrc": "18872:71:20",
																"nodeType": "YulFunctionCall",
																"src": "18872:71:20"
															},
															"nativeSrc": "18872:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "18872:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18997:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "18997:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19010:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "19010:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19021:2:20",
																				"nodeType": "YulLiteral",
																				"src": "19021:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19006:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19006:3:20"
																		},
																		"nativeSrc": "19006:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19006:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18953:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "18953:43:20"
																},
																"nativeSrc": "18953:72:20",
																"nodeType": "YulFunctionCall",
																"src": "18953:72:20"
															},
															"nativeSrc": "18953:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "18953:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19079:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "19079:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19092:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "19092:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19103:2:20",
																				"nodeType": "YulLiteral",
																				"src": "19103:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19088:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19088:3:20"
																		},
																		"nativeSrc": "19088:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19088:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19035:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "19035:43:20"
																},
																"nativeSrc": "19035:72:20",
																"nodeType": "YulFunctionCall",
																"src": "19035:72:20"
															},
															"nativeSrc": "19035:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "19035:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18672:442:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18782:9:20",
														"nodeType": "YulTypedName",
														"src": "18782:9:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18794:6:20",
														"nodeType": "YulTypedName",
														"src": "18794:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18802:6:20",
														"nodeType": "YulTypedName",
														"src": "18802:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18810:6:20",
														"nodeType": "YulTypedName",
														"src": "18810:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18821:4:20",
														"nodeType": "YulTypedName",
														"src": "18821:4:20",
														"type": ""
													}
												],
												"src": "18672:442:20"
											},
											{
												"body": {
													"nativeSrc": "19164:147:20",
													"nodeType": "YulBlock",
													"src": "19164:147:20",
													"statements": [
														{
															"nativeSrc": "19174:25:20",
															"nodeType": "YulAssignment",
															"src": "19174:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19197:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19197:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19179:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "19179:17:20"
																},
																"nativeSrc": "19179:20:20",
																"nodeType": "YulFunctionCall",
																"src": "19179:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19174:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "19174:1:20"
																}
															]
														},
														{
															"nativeSrc": "19208:25:20",
															"nodeType": "YulAssignment",
															"src": "19208:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19231:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19231:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19213:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "19213:17:20"
																},
																"nativeSrc": "19213:20:20",
																"nodeType": "YulFunctionCall",
																"src": "19213:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19208:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "19208:1:20"
																}
															]
														},
														{
															"nativeSrc": "19242:16:20",
															"nodeType": "YulAssignment",
															"src": "19242:16:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19253:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19253:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19256:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19256:1:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19249:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19249:3:20"
																},
																"nativeSrc": "19249:9:20",
																"nodeType": "YulFunctionCall",
																"src": "19249:9:20"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "19242:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19242:3:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19282:22:20",
																"nodeType": "YulBlock",
																"src": "19282:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19284:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "19284:16:20"
																			},
																			"nativeSrc": "19284:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "19284:18:20"
																		},
																		"nativeSrc": "19284:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "19284:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19274:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "19274:1:20"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "19277:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "19277:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19271:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "19271:2:20"
																},
																"nativeSrc": "19271:10:20",
																"nodeType": "YulFunctionCall",
																"src": "19271:10:20"
															},
															"nativeSrc": "19268:36:20",
															"nodeType": "YulIf",
															"src": "19268:36:20"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "19120:191:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19151:1:20",
														"nodeType": "YulTypedName",
														"src": "19151:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19154:1:20",
														"nodeType": "YulTypedName",
														"src": "19154:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "19160:3:20",
														"nodeType": "YulTypedName",
														"src": "19160:3:20",
														"type": ""
													}
												],
												"src": "19120:191:20"
											},
											{
												"body": {
													"nativeSrc": "19527:454:20",
													"nodeType": "YulBlock",
													"src": "19527:454:20",
													"statements": [
														{
															"nativeSrc": "19537:27:20",
															"nodeType": "YulAssignment",
															"src": "19537:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19549:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "19549:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19560:3:20",
																		"nodeType": "YulLiteral",
																		"src": "19560:3:20",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19545:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "19545:3:20"
																},
																"nativeSrc": "19545:19:20",
																"nodeType": "YulFunctionCall",
																"src": "19545:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19537:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "19537:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19618:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "19618:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19631:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "19631:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19642:1:20",
																				"nodeType": "YulLiteral",
																				"src": "19642:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19627:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19627:3:20"
																		},
																		"nativeSrc": "19627:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19627:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "19574:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "19574:43:20"
																},
																"nativeSrc": "19574:71:20",
																"nodeType": "YulFunctionCall",
																"src": "19574:71:20"
															},
															"nativeSrc": "19574:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "19574:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19699:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "19699:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19712:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "19712:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19723:2:20",
																				"nodeType": "YulLiteral",
																				"src": "19723:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19708:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19708:3:20"
																		},
																		"nativeSrc": "19708:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19708:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "19655:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "19655:43:20"
																},
																"nativeSrc": "19655:72:20",
																"nodeType": "YulFunctionCall",
																"src": "19655:72:20"
															},
															"nativeSrc": "19655:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "19655:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19781:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "19781:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19794:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "19794:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19805:2:20",
																				"nodeType": "YulLiteral",
																				"src": "19805:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19790:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19790:3:20"
																		},
																		"nativeSrc": "19790:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19790:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "19737:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "19737:43:20"
																},
																"nativeSrc": "19737:72:20",
																"nodeType": "YulFunctionCall",
																"src": "19737:72:20"
															},
															"nativeSrc": "19737:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "19737:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19863:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "19863:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19876:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "19876:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19887:2:20",
																				"nodeType": "YulLiteral",
																				"src": "19887:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19872:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19872:3:20"
																		},
																		"nativeSrc": "19872:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19872:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19819:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "19819:43:20"
																},
																"nativeSrc": "19819:72:20",
																"nodeType": "YulFunctionCall",
																"src": "19819:72:20"
															},
															"nativeSrc": "19819:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "19819:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "19945:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "19945:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19958:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "19958:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19969:3:20",
																				"nodeType": "YulLiteral",
																				"src": "19969:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19954:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "19954:3:20"
																		},
																		"nativeSrc": "19954:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "19954:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19901:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "19901:43:20"
																},
																"nativeSrc": "19901:73:20",
																"nodeType": "YulFunctionCall",
																"src": "19901:73:20"
															},
															"nativeSrc": "19901:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "19901:73:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "19317:664:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19467:9:20",
														"nodeType": "YulTypedName",
														"src": "19467:9:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "19479:6:20",
														"nodeType": "YulTypedName",
														"src": "19479:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19487:6:20",
														"nodeType": "YulTypedName",
														"src": "19487:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19495:6:20",
														"nodeType": "YulTypedName",
														"src": "19495:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19503:6:20",
														"nodeType": "YulTypedName",
														"src": "19503:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19511:6:20",
														"nodeType": "YulTypedName",
														"src": "19511:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19522:4:20",
														"nodeType": "YulTypedName",
														"src": "19522:4:20",
														"type": ""
													}
												],
												"src": "19317:664:20"
											},
											{
												"body": {
													"nativeSrc": "20165:367:20",
													"nodeType": "YulBlock",
													"src": "20165:367:20",
													"statements": [
														{
															"nativeSrc": "20175:27:20",
															"nodeType": "YulAssignment",
															"src": "20175:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20187:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "20187:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20198:3:20",
																		"nodeType": "YulLiteral",
																		"src": "20198:3:20",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20183:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "20183:3:20"
																},
																"nativeSrc": "20183:19:20",
																"nodeType": "YulFunctionCall",
																"src": "20183:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20175:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "20175:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20256:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "20256:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20269:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "20269:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20280:1:20",
																				"nodeType": "YulLiteral",
																				"src": "20280:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20265:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20265:3:20"
																		},
																		"nativeSrc": "20265:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20265:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20212:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "20212:43:20"
																},
																"nativeSrc": "20212:71:20",
																"nodeType": "YulFunctionCall",
																"src": "20212:71:20"
															},
															"nativeSrc": "20212:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "20212:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20333:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "20333:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20346:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "20346:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20357:2:20",
																				"nodeType": "YulLiteral",
																				"src": "20357:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20342:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20342:3:20"
																		},
																		"nativeSrc": "20342:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20342:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "20293:39:20",
																	"nodeType": "YulIdentifier",
																	"src": "20293:39:20"
																},
																"nativeSrc": "20293:68:20",
																"nodeType": "YulFunctionCall",
																"src": "20293:68:20"
															},
															"nativeSrc": "20293:68:20",
															"nodeType": "YulExpressionStatement",
															"src": "20293:68:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20415:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "20415:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20428:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "20428:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20439:2:20",
																				"nodeType": "YulLiteral",
																				"src": "20439:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20424:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20424:3:20"
																		},
																		"nativeSrc": "20424:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20424:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20371:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "20371:43:20"
																},
																"nativeSrc": "20371:72:20",
																"nodeType": "YulFunctionCall",
																"src": "20371:72:20"
															},
															"nativeSrc": "20371:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "20371:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20497:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "20497:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20510:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "20510:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20521:2:20",
																				"nodeType": "YulLiteral",
																				"src": "20521:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20506:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "20506:3:20"
																		},
																		"nativeSrc": "20506:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "20506:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20453:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "20453:43:20"
																},
																"nativeSrc": "20453:72:20",
																"nodeType": "YulFunctionCall",
																"src": "20453:72:20"
															},
															"nativeSrc": "20453:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "20453:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "19987:545:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20113:9:20",
														"nodeType": "YulTypedName",
														"src": "20113:9:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20125:6:20",
														"nodeType": "YulTypedName",
														"src": "20125:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20133:6:20",
														"nodeType": "YulTypedName",
														"src": "20133:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20141:6:20",
														"nodeType": "YulTypedName",
														"src": "20141:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20149:6:20",
														"nodeType": "YulTypedName",
														"src": "20149:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20160:4:20",
														"nodeType": "YulTypedName",
														"src": "20160:4:20",
														"type": ""
													}
												],
												"src": "19987:545:20"
											},
											{
												"body": {
													"nativeSrc": "20566:152:20",
													"nodeType": "YulBlock",
													"src": "20566:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20583:1:20",
																		"nodeType": "YulLiteral",
																		"src": "20583:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20586:77:20",
																		"nodeType": "YulLiteral",
																		"src": "20586:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20576:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "20576:6:20"
																},
																"nativeSrc": "20576:88:20",
																"nodeType": "YulFunctionCall",
																"src": "20576:88:20"
															},
															"nativeSrc": "20576:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "20576:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20680:1:20",
																		"nodeType": "YulLiteral",
																		"src": "20680:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20683:4:20",
																		"nodeType": "YulLiteral",
																		"src": "20683:4:20",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20673:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "20673:6:20"
																},
																"nativeSrc": "20673:15:20",
																"nodeType": "YulFunctionCall",
																"src": "20673:15:20"
															},
															"nativeSrc": "20673:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "20673:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20704:1:20",
																		"nodeType": "YulLiteral",
																		"src": "20704:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20707:4:20",
																		"nodeType": "YulLiteral",
																		"src": "20707:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20697:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "20697:6:20"
																},
																"nativeSrc": "20697:15:20",
																"nodeType": "YulFunctionCall",
																"src": "20697:15:20"
															},
															"nativeSrc": "20697:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "20697:15:20"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "20538:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "20538:180:20"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413(memPtr) {\n\n        mstore(add(memPtr, 0), \"currently dept to correteral rat\")\n\n        mstore(add(memPtr, 32), \"io less than 85%\")\n\n    }\n\n    function abi_encode_t_stringliteral_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ratio must less than equal 75%\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2213": [
									{
										"length": 32,
										"start": 4139
									}
								],
								"2215": [
									{
										"length": 32,
										"start": 4098
									}
								],
								"2217": [
									{
										"length": 32,
										"start": 4012
									}
								],
								"2219": [
									{
										"length": 32,
										"start": 5891
									}
								],
								"2221": [
									{
										"length": 32,
										"start": 5924
									}
								],
								"2224": [
									{
										"length": 32,
										"start": 4465
									}
								],
								"2227": [
									{
										"length": 32,
										"start": 4524
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610113575f3560e01c8063715018a61161009f578063a9059cbb11610063578063a9059cbb1461039b578063c5ebeaec146103d7578063d505accf146103f3578063dd62ed3e1461041b578063f2fde38b1461045757610113565b8063715018a6146102c55780637ecebe00146102db57806384b0196e146103175780638da5cb5b1461034757806395d89b411461037157610113565b80632f865568116100e65780632f865568146101e3578063313ce5671461020b5780633644e5151461023557806367c9b0171461025f57806370a082311461028957610113565b806306fdde0314610117578063095ea7b31461014157806318160ddd1461017d57806323b872dd146101a7575b5f80fd5b348015610122575f80fd5b5061012b61047f565b6040516101389190611bf4565b60405180910390f35b34801561014c575f80fd5b5061016760048036038101906101629190611ca5565b61050f565b6040516101749190611cfd565b60405180910390f35b348015610188575f80fd5b50610191610531565b60405161019e9190611d25565b60405180910390f35b3480156101b2575f80fd5b506101cd60048036038101906101c89190611d3e565b61053a565b6040516101da9190611cfd565b60405180910390f35b3480156101ee575f80fd5b5061020960048036038101906102049190611d8e565b610568565b005b348015610216575f80fd5b5061021f610763565b60405161022c9190611dd4565b60405180910390f35b348015610240575f80fd5b5061024961076b565b6040516102569190611e05565b60405180910390f35b34801561026a575f80fd5b50610273610779565b6040516102809190611d25565b60405180910390f35b348015610294575f80fd5b506102af60048036038101906102aa9190611d8e565b610816565b6040516102bc9190611d25565b60405180910390f35b3480156102d0575f80fd5b506102d961085b565b005b3480156102e6575f80fd5b5061030160048036038101906102fc9190611d8e565b61086e565b60405161030e9190611d25565b60405180910390f35b348015610322575f80fd5b5061032b61087f565b60405161033e9796959493929190611f1e565b60405180910390f35b348015610352575f80fd5b5061035b610924565b6040516103689190611fa0565b60405180910390f35b34801561037c575f80fd5b5061038561094c565b6040516103929190611bf4565b60405180910390f35b3480156103a6575f80fd5b506103c160048036038101906103bc9190611ca5565b6109dc565b6040516103ce9190611cfd565b60405180910390f35b6103f160048036038101906103ec9190611fb9565b6109fe565b005b3480156103fe575f80fd5b5061041960048036038101906104149190612038565b610b3c565b005b348015610426575f80fd5b50610441600480360381019061043c91906120d5565b610c81565b60405161044e9190611d25565b60405180910390f35b348015610462575f80fd5b5061047d60048036038101906104789190611d8e565b610d03565b005b60606003805461048e90612140565b80601f01602080910402602001604051908101604052809291908181526020018280546104ba90612140565b80156105055780601f106104dc57610100808354040283529160200191610505565b820191905f5260205f20905b8154815290600101906020018083116104e857829003601f168201915b5050505050905090565b5f80610519610d87565b9050610526818585610d8e565b600191505092915050565b5f600254905090565b5f80610544610d87565b9050610551858285610da0565b61055c858585610e32565b60019150509392505050565b610570610f22565b6055606460095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101546105bd610779565b6105c7919061219d565b60095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154610611919061220b565b61061b919061219d565b101561065c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610653906122ab565b60405180910390fd5b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010154905060405180604001604052805f81526020015f81525060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f01556020820151816001015590505061070f610d87565b73ffffffffffffffffffffffffffffffffffffffff167fd9d00ed0decba63a0ad16a878de20d30a429554f47b378787a818b7284da17b58260016040516107579291906122c9565b60405180910390a25050565b5f6012905090565b5f610774610fa9565b905090565b5f80600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156107e5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108099190612376565b5050509150508091505090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610863610f22565b61086c5f61105f565b565b5f61087882611122565b9050919050565b5f6060805f805f6060610890611168565b6108986111a3565b46305f801b5f67ffffffffffffffff8111156108b7576108b66123ed565b5b6040519080825280602002602001820160405280156108e55781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461095b90612140565b80601f016020809104026020016040519081016040528092919081815260200182805461098790612140565b80156109d25780601f106109a9576101008083540402835291602001916109d2565b820191905f5260205f20905b8154815290600101906020018083116109b557829003601f168201915b5050505050905090565b5f806109e6610d87565b90506109f3818585610e32565b600191505092915050565b604b811115610a42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3990612464565b60405180910390fd5b5f34610a4c610779565b610a56919061219d565b90505f8282610a65919061219d565b905060405180604001604052808281526020018381525060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015560208201518160010155905050610adf610ad9610d87565b826111de565b610ae7610d87565b73ffffffffffffffffffffffffffffffffffffffff167fd9d00ed0decba63a0ad16a878de20d30a429554f47b378787a818b7284da17b5826001604051610b2f9291906122c9565b60405180910390a2505050565b83421115610b8157836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610b789190611d25565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610baf8c61125d565b89604051602001610bc596959493929190612482565b6040516020818303038152906040528051906020012090505f610be7826112b0565b90505f610bf6828787876112c9565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c6a57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610c619291906124e1565b60405180910390fd5b610c758a8a8a610d8e565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610d0b610f22565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d7b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d729190611fa0565b60405180910390fd5b610d848161105f565b50565b5f33905090565b610d9b83838360016112f7565b505050565b5f610dab8484610c81565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e2c5781811015610e1d578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e1493929190612508565b60405180910390fd5b610e2b84848484035f6112f7565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ea2575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e999190611fa0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f12575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f099190611fa0565b60405180910390fd5b610f1d8383836114c6565b505050565b610f2a610d87565b73ffffffffffffffffffffffffffffffffffffffff16610f48610924565b73ffffffffffffffffffffffffffffffffffffffff1614610fa757610f6b610d87565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f9e9190611fa0565b60405180910390fd5b565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561102457507f000000000000000000000000000000000000000000000000000000000000000046145b15611051577f0000000000000000000000000000000000000000000000000000000000000000905061105c565b6110596116df565b90505b90565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606061119e60057f000000000000000000000000000000000000000000000000000000000000000061177490919063ffffffff16565b905090565b60606111d960067f000000000000000000000000000000000000000000000000000000000000000061177490919063ffffffff16565b905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361124e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112459190611fa0565b60405180910390fd5b6112595f83836114c6565b5050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f6112c26112bc610fa9565b83611821565b9050919050565b5f805f806112d988888888611861565b9250925092506112e98282611948565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611367575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161135e9190611fa0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113d7575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113ce9190611fa0565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156114c0578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516114b79190611d25565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611516578060025f82825461150a919061253d565b925050819055506115e4565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561159f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161159693929190612508565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361162b578060025f8282540392505081905550611675565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116d29190611d25565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611759959493929190612570565b60405160208183030381529060405280519060200120905090565b606060ff5f1b83146117905761178983611aaa565b905061181b565b81805461179c90612140565b80601f01602080910402602001604051908101604052809291908181526020018280546117c890612140565b80156118135780601f106117ea57610100808354040283529160200191611813565b820191905f5260205f20905b8154815290600101906020018083116117f657829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c111561189d575f60038592509250925061193e565b5f6001888888886040515f81526020016040526040516118c094939291906125c1565b6020604051602081039080840390855afa1580156118e0573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611931575f60015f801b9350935093505061193e565b805f805f1b935093509350505b9450945094915050565b5f600381111561195b5761195a612604565b5b82600381111561196e5761196d612604565b5b0315611aa6576001600381111561198857611987612604565b5b82600381111561199b5761199a612604565b5b036119d2576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156119e6576119e5612604565b5b8260038111156119f9576119f8612604565b5b03611a3d57805f1c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611a349190611d25565b60405180910390fd5b600380811115611a5057611a4f612604565b5b826003811115611a6357611a62612604565b5b03611aa557806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611a9c9190611e05565b60405180910390fd5b5b5050565b60605f611ab683611b1c565b90505f602067ffffffffffffffff811115611ad457611ad36123ed565b5b6040519080825280601f01601f191660200182016040528015611b065781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f811115611b61576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611ba1578082015181840152602081019050611b86565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611bc682611b6a565b611bd08185611b74565b9350611be0818560208601611b84565b611be981611bac565b840191505092915050565b5f6020820190508181035f830152611c0c8184611bbc565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c4182611c18565b9050919050565b611c5181611c37565b8114611c5b575f80fd5b50565b5f81359050611c6c81611c48565b92915050565b5f819050919050565b611c8481611c72565b8114611c8e575f80fd5b50565b5f81359050611c9f81611c7b565b92915050565b5f8060408385031215611cbb57611cba611c14565b5b5f611cc885828601611c5e565b9250506020611cd985828601611c91565b9150509250929050565b5f8115159050919050565b611cf781611ce3565b82525050565b5f602082019050611d105f830184611cee565b92915050565b611d1f81611c72565b82525050565b5f602082019050611d385f830184611d16565b92915050565b5f805f60608486031215611d5557611d54611c14565b5b5f611d6286828701611c5e565b9350506020611d7386828701611c5e565b9250506040611d8486828701611c91565b9150509250925092565b5f60208284031215611da357611da2611c14565b5b5f611db084828501611c5e565b91505092915050565b5f60ff82169050919050565b611dce81611db9565b82525050565b5f602082019050611de75f830184611dc5565b92915050565b5f819050919050565b611dff81611ded565b82525050565b5f602082019050611e185f830184611df6565b92915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611e5281611e1e565b82525050565b611e6181611c37565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611e9981611c72565b82525050565b5f611eaa8383611e90565b60208301905092915050565b5f602082019050919050565b5f611ecc82611e67565b611ed68185611e71565b9350611ee183611e81565b805f5b83811015611f11578151611ef88882611e9f565b9750611f0383611eb6565b925050600181019050611ee4565b5085935050505092915050565b5f60e082019050611f315f83018a611e49565b8181036020830152611f438189611bbc565b90508181036040830152611f578188611bbc565b9050611f666060830187611d16565b611f736080830186611e58565b611f8060a0830185611df6565b81810360c0830152611f928184611ec2565b905098975050505050505050565b5f602082019050611fb35f830184611e58565b92915050565b5f60208284031215611fce57611fcd611c14565b5b5f611fdb84828501611c91565b91505092915050565b611fed81611db9565b8114611ff7575f80fd5b50565b5f8135905061200881611fe4565b92915050565b61201781611ded565b8114612021575f80fd5b50565b5f813590506120328161200e565b92915050565b5f805f805f805f60e0888a03121561205357612052611c14565b5b5f6120608a828b01611c5e565b97505060206120718a828b01611c5e565b96505060406120828a828b01611c91565b95505060606120938a828b01611c91565b94505060806120a48a828b01611ffa565b93505060a06120b58a828b01612024565b92505060c06120c68a828b01612024565b91505092959891949750929550565b5f80604083850312156120eb576120ea611c14565b5b5f6120f885828601611c5e565b925050602061210985828601611c5e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061215757607f821691505b60208210810361216a57612169612113565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6121a782611c72565b91506121b283611c72565b92508282026121c081611c72565b915082820484148315176121d7576121d6612170565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61221582611c72565b915061222083611c72565b9250826122305761222f6121de565b5b828204905092915050565b7f63757272656e746c79206465707420746f20636f727265746572616c207261745f8201527f696f206c657373207468616e2038352500000000000000000000000000000000602082015250565b5f612295603083611b74565b91506122a08261223b565b604082019050919050565b5f6020820190508181035f8301526122c281612289565b9050919050565b5f6040820190506122dc5f830185611d16565b6122e96020830184611cee565b9392505050565b5f69ffffffffffffffffffff82169050919050565b61230e816122f0565b8114612318575f80fd5b50565b5f8151905061232981612305565b92915050565b5f819050919050565b6123418161232f565b811461234b575f80fd5b50565b5f8151905061235c81612338565b92915050565b5f8151905061237081611c7b565b92915050565b5f805f805f60a0868803121561238f5761238e611c14565b5b5f61239c8882890161231b565b95505060206123ad8882890161234e565b94505060406123be88828901612362565b93505060606123cf88828901612362565b92505060806123e08882890161231b565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f526174696f206d757374206c657373207468616e20657175616c2037352500005f82015250565b5f61244e601e83611b74565b91506124598261241a565b602082019050919050565b5f6020820190508181035f83015261247b81612442565b9050919050565b5f60c0820190506124955f830189611df6565b6124a26020830188611e58565b6124af6040830187611e58565b6124bc6060830186611d16565b6124c96080830185611d16565b6124d660a0830184611d16565b979650505050505050565b5f6040820190506124f45f830185611e58565b6125016020830184611e58565b9392505050565b5f60608201905061251b5f830186611e58565b6125286020830185611d16565b6125356040830184611d16565b949350505050565b5f61254782611c72565b915061255283611c72565b925082820190508082111561256a57612569612170565b5b92915050565b5f60a0820190506125835f830188611df6565b6125906020830187611df6565b61259d6040830186611df6565b6125aa6060830185611d16565b6125b76080830184611e58565b9695505050505050565b5f6080820190506125d45f830187611df6565b6125e16020830186611dc5565b6125ee6040830185611df6565b6125fb6060830184611df6565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea26469706673582212202863a85ac47b5d9ae1b1bd47376db3b288f0ab83184c876f759788f57eb9746764736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xC5EBEAEC EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x457 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x2F865568 GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x2F865568 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x67C9B017 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x289 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x85B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35B PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0xB3C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x462 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0xD03 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x48E SWAP1 PUSH2 0x2140 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BA SWAP1 PUSH2 0x2140 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x505 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x505 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x519 PUSH2 0xD87 JUMP JUMPDEST SWAP1 POP PUSH2 0x526 DUP2 DUP6 DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x544 PUSH2 0xD87 JUMP JUMPDEST SWAP1 POP PUSH2 0x551 DUP6 DUP3 DUP6 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x55C DUP6 DUP6 DUP6 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x570 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x55 PUSH1 0x64 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5BD PUSH2 0x779 JUMP JUMPDEST PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP1 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0x70F PUSH2 0xD87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD9D00ED0DECBA63A0AD16A878DE20D30A429554F47B378787A818B7284DA17B5 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x757 SWAP3 SWAP2 SWAP1 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x774 PUSH2 0xFA9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x2376 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x863 PUSH2 0xF22 JUMP JUMPDEST PUSH2 0x86C PUSH0 PUSH2 0x105F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x878 DUP3 PUSH2 0x1122 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x890 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x898 PUSH2 0x11A3 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8B7 JUMPI PUSH2 0x8B6 PUSH2 0x23ED JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8E5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x95B SWAP1 PUSH2 0x2140 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x987 SWAP1 PUSH2 0x2140 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9E6 PUSH2 0xD87 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F3 DUP2 DUP6 DUP6 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4B DUP2 GT ISZERO PUSH2 0xA42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA39 SWAP1 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE PUSH2 0xA4C PUSH2 0x779 JUMP JUMPDEST PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0xADF PUSH2 0xAD9 PUSH2 0xD87 JUMP JUMPDEST DUP3 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0xAE7 PUSH2 0xD87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD9D00ED0DECBA63A0AD16A878DE20D30A429554F47B378787A818B7284DA17B5 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB2F SWAP3 SWAP2 SWAP1 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xB81 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xBAF DUP13 PUSH2 0x125D JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBC5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0xBE7 DUP3 PUSH2 0x12B0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBF6 DUP3 DUP8 DUP8 DUP8 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6A JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC61 SWAP3 SWAP2 SWAP1 PUSH2 0x24E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC75 DUP11 DUP11 DUP11 PUSH2 0xD8E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD0B PUSH2 0xF22 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD7B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0x105F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD9B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDAB DUP5 DUP5 PUSH2 0xC81 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xE2C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE1D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE14 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x12F7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE99 SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF09 SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF1D DUP4 DUP4 DUP4 PUSH2 0x14C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF2A PUSH2 0xD87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF48 PUSH2 0x924 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFA7 JUMPI PUSH2 0xF6B PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1024 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1051 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x105C JUMP JUMPDEST PUSH2 0x1059 PUSH2 0x16DF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x119E PUSH1 0x5 PUSH32 0x0 PUSH2 0x1774 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11D9 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1774 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1259 PUSH0 DUP4 DUP4 PUSH2 0x14C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12C2 PUSH2 0x12BC PUSH2 0xFA9 JUMP JUMPDEST DUP4 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x12D9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x12E9 DUP3 DUP3 PUSH2 0x1948 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1367 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135E SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CE SWAP2 SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x14C0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x14B7 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1516 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x150A SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15E4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x159F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1596 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x162B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1675 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16D2 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1759 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x1790 JUMPI PUSH2 0x1789 DUP4 PUSH2 0x1AAA JUMP JUMPDEST SWAP1 POP PUSH2 0x181B JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x179C SWAP1 PUSH2 0x2140 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17C8 SWAP1 PUSH2 0x2140 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1813 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1813 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x189D JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x193E JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x18C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1931 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x193E JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x195B JUMPI PUSH2 0x195A PUSH2 0x2604 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x196E JUMPI PUSH2 0x196D PUSH2 0x2604 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1988 JUMPI PUSH2 0x1987 PUSH2 0x2604 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x199B JUMPI PUSH2 0x199A PUSH2 0x2604 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x19D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19E6 JUMPI PUSH2 0x19E5 PUSH2 0x2604 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19F9 JUMPI PUSH2 0x19F8 PUSH2 0x2604 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1A3D JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A34 SWAP2 SWAP1 PUSH2 0x1D25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1A50 JUMPI PUSH2 0x1A4F PUSH2 0x2604 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A63 JUMPI PUSH2 0x1A62 PUSH2 0x2604 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1AA5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A9C SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1AB6 DUP4 PUSH2 0x1B1C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AD4 JUMPI PUSH2 0x1AD3 PUSH2 0x23ED JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B06 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1B61 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B86 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC6 DUP3 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x1BD0 DUP2 DUP6 PUSH2 0x1B74 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BE0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0x1BE9 DUP2 PUSH2 0x1BAC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C0C DUP2 DUP5 PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C41 DUP3 PUSH2 0x1C18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C51 DUP2 PUSH2 0x1C37 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C5B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C6C DUP2 PUSH2 0x1C48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C84 DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C9F DUP2 PUSH2 0x1C7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CBB JUMPI PUSH2 0x1CBA PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC8 DUP6 DUP3 DUP7 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CD9 DUP6 DUP3 DUP7 ADD PUSH2 0x1C91 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF7 DUP2 PUSH2 0x1CE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D10 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D1F DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D38 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D55 JUMPI PUSH2 0x1D54 PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D62 DUP7 DUP3 DUP8 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D73 DUP7 DUP3 DUP8 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D84 DUP7 DUP3 DUP8 ADD PUSH2 0x1C91 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA3 JUMPI PUSH2 0x1DA2 PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DB0 DUP5 DUP3 DUP6 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DCE DUP2 PUSH2 0x1DB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DE7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFF DUP2 PUSH2 0x1DED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E18 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E52 DUP2 PUSH2 0x1E1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1E61 DUP2 PUSH2 0x1C37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E99 DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAA DUP4 DUP4 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ECC DUP3 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x1ED6 DUP2 DUP6 PUSH2 0x1E71 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EE1 DUP4 PUSH2 0x1E81 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F11 JUMPI DUP2 MLOAD PUSH2 0x1EF8 DUP9 DUP3 PUSH2 0x1E9F JUMP JUMPDEST SWAP8 POP PUSH2 0x1F03 DUP4 PUSH2 0x1EB6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1EE4 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1F31 PUSH0 DUP4 ADD DUP11 PUSH2 0x1E49 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1F43 DUP2 DUP10 PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1F57 DUP2 DUP9 PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP PUSH2 0x1F66 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x1F73 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1E58 JUMP JUMPDEST PUSH2 0x1F80 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1DF6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1F92 DUP2 DUP5 PUSH2 0x1EC2 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FB3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FCE JUMPI PUSH2 0x1FCD PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FDB DUP5 DUP3 DUP6 ADD PUSH2 0x1C91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FED DUP2 PUSH2 0x1DB9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2008 DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2017 DUP2 PUSH2 0x1DED JUMP JUMPDEST DUP2 EQ PUSH2 0x2021 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2032 DUP2 PUSH2 0x200E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2053 JUMPI PUSH2 0x2052 PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2060 DUP11 DUP3 DUP12 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2071 DUP11 DUP3 DUP12 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2082 DUP11 DUP3 DUP12 ADD PUSH2 0x1C91 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2093 DUP11 DUP3 DUP12 ADD PUSH2 0x1C91 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x20A4 DUP11 DUP3 DUP12 ADD PUSH2 0x1FFA JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x20B5 DUP11 DUP3 DUP12 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x20C6 DUP11 DUP3 DUP12 ADD PUSH2 0x2024 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20EB JUMPI PUSH2 0x20EA PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20F8 DUP6 DUP3 DUP7 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2109 DUP6 DUP3 DUP7 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2157 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x216A JUMPI PUSH2 0x2169 PUSH2 0x2113 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21A7 DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x21B2 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x21C0 DUP2 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x21D7 JUMPI PUSH2 0x21D6 PUSH2 0x2170 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2215 DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2220 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2230 JUMPI PUSH2 0x222F PUSH2 0x21DE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63757272656E746C79206465707420746F20636F727265746572616C20726174 PUSH0 DUP3 ADD MSTORE PUSH32 0x696F206C657373207468616E2038352500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2295 PUSH1 0x30 DUP4 PUSH2 0x1B74 JUMP JUMPDEST SWAP2 POP PUSH2 0x22A0 DUP3 PUSH2 0x223B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22C2 DUP2 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22DC PUSH0 DUP4 ADD DUP6 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x22E9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CEE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x230E DUP2 PUSH2 0x22F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2318 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2329 DUP2 PUSH2 0x2305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2341 DUP2 PUSH2 0x232F JUMP JUMPDEST DUP2 EQ PUSH2 0x234B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x235C DUP2 PUSH2 0x2338 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2370 DUP2 PUSH2 0x1C7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x238F JUMPI PUSH2 0x238E PUSH2 0x1C14 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239C DUP9 DUP3 DUP10 ADD PUSH2 0x231B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x23AD DUP9 DUP3 DUP10 ADD PUSH2 0x234E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x23BE DUP9 DUP3 DUP10 ADD PUSH2 0x2362 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x23CF DUP9 DUP3 DUP10 ADD PUSH2 0x2362 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x23E0 DUP9 DUP3 DUP10 ADD PUSH2 0x231B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x526174696F206D757374206C657373207468616E20657175616C203735250000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x244E PUSH1 0x1E DUP4 PUSH2 0x1B74 JUMP JUMPDEST SWAP2 POP PUSH2 0x2459 DUP3 PUSH2 0x241A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x247B DUP2 PUSH2 0x2442 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2495 PUSH0 DUP4 ADD DUP10 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x24A2 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1E58 JUMP JUMPDEST PUSH2 0x24AF PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1E58 JUMP JUMPDEST PUSH2 0x24BC PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x24C9 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x24D6 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1D16 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24F4 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E58 JUMP JUMPDEST PUSH2 0x2501 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E58 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x251B PUSH0 DUP4 ADD DUP7 PUSH2 0x1E58 JUMP JUMPDEST PUSH2 0x2528 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x2535 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D16 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2547 DUP3 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2552 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x2170 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2583 PUSH0 DUP4 ADD DUP9 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x2590 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x259D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x25AA PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x25B7 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1E58 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x25D4 PUSH0 DUP4 ADD DUP8 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x25E1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DC5 JUMP JUMPDEST PUSH2 0x25EE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x25FB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1DF6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 PUSH4 0xA85AC47B 0x5D SWAP11 0xE1 0xB1 0xBD SELFBALANCE CALLDATACOPY PUSH14 0xB3B288F0AB83184C876F759788F5 PUSH31 0xB9746764736F6C634300081600330000000000000000000000000000000000 ",
							"sourceMap": "321:1639:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1475:478:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;909:146:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:3;;;;;;;;;;;;;:::i;:::-;;2406:143:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:15;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1061:408:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1680:672:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:4;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;1475:478:19:-;1531:13:3;:11;:13::i;:::-;1642:2:19::1;1635:3;1594:20;:26;1615:4;1594:26;;;;;;;;;;;;;;;:37;;;1578:13;:11;:13::i;:::-;:53;;;;:::i;:::-;1543:20;:26;1564:4;1543:26;;;;;;;;;;;;;;;:31;;;:89;;;;:::i;:::-;:95;;;;:::i;:::-;:101;;1535:162;;;;;;;;;;;;:::i;:::-;;;;;;;;;1758:23;1784:20;:26;1805:4;1784:26;;;;;;;;;;;;;;;:37;;;1758:63;;1860:24;;;;;;;;1880:1;1860:24;;;;1882:1;1860:24;;::::0;1831:20:::1;:26;1852:4;1831:26;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;;1907:12;:10;:12::i;:::-;1900:46;;;1921:18;1941:4;1900:46;;;;;;;:::i;:::-;;;;;;;;1525:428;1475:478:::0;:::o;3002:82:4:-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:6:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;909:146:19:-;953:4;972:9;990:12;;;;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;969:51;;;;;;1042:5;1030:18;;;909:146;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:3:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2406:143:6:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;5144:557:15:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:3:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1061:408:19:-;1130:2;1121:5;:11;;1113:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1178:15;1213:9;1197:13;:11;:13::i;:::-;:25;;;;:::i;:::-;1178:44;;1232:9;1257:5;1244:10;:18;;;;:::i;:::-;1232:30;;1307:71;;;;;;;;1340:4;1307:71;;;;1358:10;1307:71;;;1272:20;:32;1293:10;1272:32;;;;;;;;;;;;;;;:106;;;;;;;;;;;;;;;;;;;1389:25;1395:12;:10;:12::i;:::-;1409:4;1389:5;:25::i;:::-;1437:12;:10;:12::i;:::-;1430:32;;;1451:4;1457;1430:32;;;;;;;:::i;:::-;;;;;;;;1103:366;;1061:408;:::o;1680:672:6:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:3:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:3:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;3845:262:15:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;2912:187:3:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;538:107:10:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:15:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;759:395:10:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:15:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:14:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:4:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4113:179:15:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:11:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:16:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:14:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;2078:405:11:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:99:20:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:329::-;4482:6;4531:2;4519:9;4510:7;4506:23;4502:32;4499:119;;;4537:79;;:::i;:::-;4499:119;4657:1;4682:53;4727:7;4718:6;4707:9;4703:22;4682:53;:::i;:::-;4672:63;;4628:117;4423:329;;;;:::o;4758:86::-;4793:7;4833:4;4826:5;4822:16;4811:27;;4758:86;;;:::o;4850:112::-;4933:22;4949:5;4933:22;:::i;:::-;4928:3;4921:35;4850:112;;:::o;4968:214::-;5057:4;5095:2;5084:9;5080:18;5072:26;;5108:67;5172:1;5161:9;5157:17;5148:6;5108:67;:::i;:::-;4968:214;;;;:::o;5188:77::-;5225:7;5254:5;5243:16;;5188:77;;;:::o;5271:118::-;5358:24;5376:5;5358:24;:::i;:::-;5353:3;5346:37;5271:118;;:::o;5395:222::-;5488:4;5526:2;5515:9;5511:18;5503:26;;5539:71;5607:1;5596:9;5592:17;5583:6;5539:71;:::i;:::-;5395:222;;;;:::o;5623:149::-;5659:7;5699:66;5692:5;5688:78;5677:89;;5623:149;;;:::o;5778:115::-;5863:23;5880:5;5863:23;:::i;:::-;5858:3;5851:36;5778:115;;:::o;5899:118::-;5986:24;6004:5;5986:24;:::i;:::-;5981:3;5974:37;5899:118;;:::o;6023:114::-;6090:6;6124:5;6118:12;6108:22;;6023:114;;;:::o;6143:184::-;6242:11;6276:6;6271:3;6264:19;6316:4;6311:3;6307:14;6292:29;;6143:184;;;;:::o;6333:132::-;6400:4;6423:3;6415:11;;6453:4;6448:3;6444:14;6436:22;;6333:132;;;:::o;6471:108::-;6548:24;6566:5;6548:24;:::i;:::-;6543:3;6536:37;6471:108;;:::o;6585:179::-;6654:10;6675:46;6717:3;6709:6;6675:46;:::i;:::-;6753:4;6748:3;6744:14;6730:28;;6585:179;;;;:::o;6770:113::-;6840:4;6872;6867:3;6863:14;6855:22;;6770:113;;;:::o;6919:732::-;7038:3;7067:54;7115:5;7067:54;:::i;:::-;7137:86;7216:6;7211:3;7137:86;:::i;:::-;7130:93;;7247:56;7297:5;7247:56;:::i;:::-;7326:7;7357:1;7342:284;7367:6;7364:1;7361:13;7342:284;;;7443:6;7437:13;7470:63;7529:3;7514:13;7470:63;:::i;:::-;7463:70;;7556:60;7609:6;7556:60;:::i;:::-;7546:70;;7402:224;7389:1;7386;7382:9;7377:14;;7342:284;;;7346:14;7642:3;7635:10;;7043:608;;;6919:732;;;;:::o;7657:1215::-;8006:4;8044:3;8033:9;8029:19;8021:27;;8058:69;8124:1;8113:9;8109:17;8100:6;8058:69;:::i;:::-;8174:9;8168:4;8164:20;8159:2;8148:9;8144:18;8137:48;8202:78;8275:4;8266:6;8202:78;:::i;:::-;8194:86;;8327:9;8321:4;8317:20;8312:2;8301:9;8297:18;8290:48;8355:78;8428:4;8419:6;8355:78;:::i;:::-;8347:86;;8443:72;8511:2;8500:9;8496:18;8487:6;8443:72;:::i;:::-;8525:73;8593:3;8582:9;8578:19;8569:6;8525:73;:::i;:::-;8608;8676:3;8665:9;8661:19;8652:6;8608:73;:::i;:::-;8729:9;8723:4;8719:20;8713:3;8702:9;8698:19;8691:49;8757:108;8860:4;8851:6;8757:108;:::i;:::-;8749:116;;7657:1215;;;;;;;;;;:::o;8878:222::-;8971:4;9009:2;8998:9;8994:18;8986:26;;9022:71;9090:1;9079:9;9075:17;9066:6;9022:71;:::i;:::-;8878:222;;;;:::o;9106:329::-;9165:6;9214:2;9202:9;9193:7;9189:23;9185:32;9182:119;;;9220:79;;:::i;:::-;9182:119;9340:1;9365:53;9410:7;9401:6;9390:9;9386:22;9365:53;:::i;:::-;9355:63;;9311:117;9106:329;;;;:::o;9441:118::-;9512:22;9528:5;9512:22;:::i;:::-;9505:5;9502:33;9492:61;;9549:1;9546;9539:12;9492:61;9441:118;:::o;9565:135::-;9609:5;9647:6;9634:20;9625:29;;9663:31;9688:5;9663:31;:::i;:::-;9565:135;;;;:::o;9706:122::-;9779:24;9797:5;9779:24;:::i;:::-;9772:5;9769:35;9759:63;;9818:1;9815;9808:12;9759:63;9706:122;:::o;9834:139::-;9880:5;9918:6;9905:20;9896:29;;9934:33;9961:5;9934:33;:::i;:::-;9834:139;;;;:::o;9979:1199::-;10090:6;10098;10106;10114;10122;10130;10138;10187:3;10175:9;10166:7;10162:23;10158:33;10155:120;;;10194:79;;:::i;:::-;10155:120;10314:1;10339:53;10384:7;10375:6;10364:9;10360:22;10339:53;:::i;:::-;10329:63;;10285:117;10441:2;10467:53;10512:7;10503:6;10492:9;10488:22;10467:53;:::i;:::-;10457:63;;10412:118;10569:2;10595:53;10640:7;10631:6;10620:9;10616:22;10595:53;:::i;:::-;10585:63;;10540:118;10697:2;10723:53;10768:7;10759:6;10748:9;10744:22;10723:53;:::i;:::-;10713:63;;10668:118;10825:3;10852:51;10895:7;10886:6;10875:9;10871:22;10852:51;:::i;:::-;10842:61;;10796:117;10952:3;10979:53;11024:7;11015:6;11004:9;11000:22;10979:53;:::i;:::-;10969:63;;10923:119;11081:3;11108:53;11153:7;11144:6;11133:9;11129:22;11108:53;:::i;:::-;11098:63;;11052:119;9979:1199;;;;;;;;;;:::o;11184:474::-;11252:6;11260;11309:2;11297:9;11288:7;11284:23;11280:32;11277:119;;;11315:79;;:::i;:::-;11277:119;11435:1;11460:53;11505:7;11496:6;11485:9;11481:22;11460:53;:::i;:::-;11450:63;;11406:117;11562:2;11588:53;11633:7;11624:6;11613:9;11609:22;11588:53;:::i;:::-;11578:63;;11533:118;11184:474;;;;;:::o;11664:180::-;11712:77;11709:1;11702:88;11809:4;11806:1;11799:15;11833:4;11830:1;11823:15;11850:320;11894:6;11931:1;11925:4;11921:12;11911:22;;11978:1;11972:4;11968:12;11999:18;11989:81;;12055:4;12047:6;12043:17;12033:27;;11989:81;12117:2;12109:6;12106:14;12086:18;12083:38;12080:84;;12136:18;;:::i;:::-;12080:84;11901:269;11850:320;;;:::o;12176:180::-;12224:77;12221:1;12214:88;12321:4;12318:1;12311:15;12345:4;12342:1;12335:15;12362:410;12402:7;12425:20;12443:1;12425:20;:::i;:::-;12420:25;;12459:20;12477:1;12459:20;:::i;:::-;12454:25;;12514:1;12511;12507:9;12536:30;12554:11;12536:30;:::i;:::-;12525:41;;12715:1;12706:7;12702:15;12699:1;12696:22;12676:1;12669:9;12649:83;12626:139;;12745:18;;:::i;:::-;12626:139;12410:362;12362:410;;;;:::o;12778:180::-;12826:77;12823:1;12816:88;12923:4;12920:1;12913:15;12947:4;12944:1;12937:15;12964:185;13004:1;13021:20;13039:1;13021:20;:::i;:::-;13016:25;;13055:20;13073:1;13055:20;:::i;:::-;13050:25;;13094:1;13084:35;;13099:18;;:::i;:::-;13084:35;13141:1;13138;13134:9;13129:14;;12964:185;;;;:::o;13155:235::-;13295:34;13291:1;13283:6;13279:14;13272:58;13364:18;13359:2;13351:6;13347:15;13340:43;13155:235;:::o;13396:366::-;13538:3;13559:67;13623:2;13618:3;13559:67;:::i;:::-;13552:74;;13635:93;13724:3;13635:93;:::i;:::-;13753:2;13748:3;13744:12;13737:19;;13396:366;;;:::o;13768:419::-;13934:4;13972:2;13961:9;13957:18;13949:26;;14021:9;14015:4;14011:20;14007:1;13996:9;13992:17;13985:47;14049:131;14175:4;14049:131;:::i;:::-;14041:139;;13768:419;;;:::o;14193:320::-;14308:4;14346:2;14335:9;14331:18;14323:26;;14359:71;14427:1;14416:9;14412:17;14403:6;14359:71;:::i;:::-;14440:66;14502:2;14491:9;14487:18;14478:6;14440:66;:::i;:::-;14193:320;;;;;:::o;14519:105::-;14555:7;14595:22;14588:5;14584:34;14573:45;;14519:105;;;:::o;14630:120::-;14702:23;14719:5;14702:23;:::i;:::-;14695:5;14692:34;14682:62;;14740:1;14737;14730:12;14682:62;14630:120;:::o;14756:141::-;14812:5;14843:6;14837:13;14828:22;;14859:32;14885:5;14859:32;:::i;:::-;14756:141;;;;:::o;14903:76::-;14939:7;14968:5;14957:16;;14903:76;;;:::o;14985:120::-;15057:23;15074:5;15057:23;:::i;:::-;15050:5;15047:34;15037:62;;15095:1;15092;15085:12;15037:62;14985:120;:::o;15111:141::-;15167:5;15198:6;15192:13;15183:22;;15214:32;15240:5;15214:32;:::i;:::-;15111:141;;;;:::o;15258:143::-;15315:5;15346:6;15340:13;15331:22;;15362:33;15389:5;15362:33;:::i;:::-;15258:143;;;;:::o;15407:971::-;15510:6;15518;15526;15534;15542;15591:3;15579:9;15570:7;15566:23;15562:33;15559:120;;;15598:79;;:::i;:::-;15559:120;15718:1;15743:63;15798:7;15789:6;15778:9;15774:22;15743:63;:::i;:::-;15733:73;;15689:127;15855:2;15881:63;15936:7;15927:6;15916:9;15912:22;15881:63;:::i;:::-;15871:73;;15826:128;15993:2;16019:64;16075:7;16066:6;16055:9;16051:22;16019:64;:::i;:::-;16009:74;;15964:129;16132:2;16158:64;16214:7;16205:6;16194:9;16190:22;16158:64;:::i;:::-;16148:74;;16103:129;16271:3;16298:63;16353:7;16344:6;16333:9;16329:22;16298:63;:::i;:::-;16288:73;;16242:129;15407:971;;;;;;;;:::o;16384:180::-;16432:77;16429:1;16422:88;16529:4;16526:1;16519:15;16553:4;16550:1;16543:15;16570:180;16710:32;16706:1;16698:6;16694:14;16687:56;16570:180;:::o;16756:366::-;16898:3;16919:67;16983:2;16978:3;16919:67;:::i;:::-;16912:74;;16995:93;17084:3;16995:93;:::i;:::-;17113:2;17108:3;17104:12;17097:19;;16756:366;;;:::o;17128:419::-;17294:4;17332:2;17321:9;17317:18;17309:26;;17381:9;17375:4;17371:20;17367:1;17356:9;17352:17;17345:47;17409:131;17535:4;17409:131;:::i;:::-;17401:139;;17128:419;;;:::o;17553:775::-;17786:4;17824:3;17813:9;17809:19;17801:27;;17838:71;17906:1;17895:9;17891:17;17882:6;17838:71;:::i;:::-;17919:72;17987:2;17976:9;17972:18;17963:6;17919:72;:::i;:::-;18001;18069:2;18058:9;18054:18;18045:6;18001:72;:::i;:::-;18083;18151:2;18140:9;18136:18;18127:6;18083:72;:::i;:::-;18165:73;18233:3;18222:9;18218:19;18209:6;18165:73;:::i;:::-;18248;18316:3;18305:9;18301:19;18292:6;18248:73;:::i;:::-;17553:775;;;;;;;;;:::o;18334:332::-;18455:4;18493:2;18482:9;18478:18;18470:26;;18506:71;18574:1;18563:9;18559:17;18550:6;18506:71;:::i;:::-;18587:72;18655:2;18644:9;18640:18;18631:6;18587:72;:::i;:::-;18334:332;;;;;:::o;18672:442::-;18821:4;18859:2;18848:9;18844:18;18836:26;;18872:71;18940:1;18929:9;18925:17;18916:6;18872:71;:::i;:::-;18953:72;19021:2;19010:9;19006:18;18997:6;18953:72;:::i;:::-;19035;19103:2;19092:9;19088:18;19079:6;19035:72;:::i;:::-;18672:442;;;;;;:::o;19120:191::-;19160:3;19179:20;19197:1;19179:20;:::i;:::-;19174:25;;19213:20;19231:1;19213:20;:::i;:::-;19208:25;;19256:1;19253;19249:9;19242:16;;19277:3;19274:1;19271:10;19268:36;;;19284:18;;:::i;:::-;19268:36;19120:191;;;;:::o;19317:664::-;19522:4;19560:3;19549:9;19545:19;19537:27;;19574:71;19642:1;19631:9;19627:17;19618:6;19574:71;:::i;:::-;19655:72;19723:2;19712:9;19708:18;19699:6;19655:72;:::i;:::-;19737;19805:2;19794:9;19790:18;19781:6;19737:72;:::i;:::-;19819;19887:2;19876:9;19872:18;19863:6;19819:72;:::i;:::-;19901:73;19969:3;19958:9;19954:19;19945:6;19901:73;:::i;:::-;19317:664;;;;;;;;:::o;19987:545::-;20160:4;20198:3;20187:9;20183:19;20175:27;;20212:71;20280:1;20269:9;20265:17;20256:6;20212:71;:::i;:::-;20293:68;20357:2;20346:9;20342:18;20333:6;20293:68;:::i;:::-;20371:72;20439:2;20428:9;20424:18;20415:6;20371:72;:::i;:::-;20453;20521:2;20510:9;20506:18;20497:6;20453:72;:::i;:::-;19987:545;;;;;;;:::o;20538:180::-;20586:77;20583:1;20576:88;20683:4;20680:1;20673:15;20707:4;20704:1;20697:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1966200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"borrow(uint256)": "infinite",
								"decimals()": "383",
								"eip712Domain()": "infinite",
								"getEthPrice()": "infinite",
								"liquidate(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2916",
								"owner()": "2604",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "160"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 717,
									"end": 903,
									"name": "CALLVALUE",
									"source": 19
								},
								{
									"begin": 717,
									"end": 903,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 717,
									"end": 903,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 717,
									"end": 903,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 717,
									"end": 903,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 717,
									"end": 903,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 903,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 717,
									"end": 903,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 717,
									"end": 903,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 717,
									"end": 903,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 717,
									"end": 903,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 792,
									"end": 804,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 792,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 792,
									"end": 802,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 792,
									"end": 802,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 792,
									"end": 804,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 792,
									"end": 804,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 792,
									"end": 804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 792,
									"end": 804,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 792,
									"end": 804,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 6,
									"value": "5553445000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1613,
									"end": 1617,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 15,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "F"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "5065706F20537461626C65636F696E0000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "5553445000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 3432,
									"end": 3445,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 3401,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "PUSH",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 3501,
									"end": 3517,
									"name": "PUSH",
									"source": 15,
									"value": "6"
								},
								{
									"begin": 3467,
									"end": 3474,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 3467,
									"end": 3518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "tag",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "PUSH",
									"source": 15,
									"value": "140"
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3558,
									"end": 3562,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3607,
									"end": 3614,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "PUSH",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3644,
									"end": 3657,
									"name": "CHAINID",
									"source": 15
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 3692,
									"end": 3715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "tag",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3747,
									"end": 3751,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 15,
									"value": "C0"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 853,
									"end": 895,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 19,
									"value": "5F4EC3DF9CBD43714FE2740F5E3616155C5B8419"
								},
								{
									"begin": 816,
									"end": 828,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 19,
									"value": "A"
								},
								{
									"begin": 816,
									"end": 828,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 19,
									"value": "100"
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "EXP",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 816,
									"end": 896,
									"modifierDepth": 3,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3010,
									"end": 3021,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3059,
									"end": 3061,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3048,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3037,
									"end": 3056,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3037,
									"end": 3061,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 3098,
									"end": 3103,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 3084,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3176,
									"end": 3181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 3161,
									"end": 3166,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3167,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 3135,
									"end": 3181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2914,
									"end": 3254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2079,
									"end": 2174,
									"name": "PUSH",
									"source": 15,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "PUSH",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4255,
									"end": 4268,
									"name": "CHAINID",
									"source": 15
								},
								{
									"begin": 4278,
									"end": 4282,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 4204,
									"end": 4284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4113,
									"end": 4292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1822,
									"end": 1825,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1840,
									"end": 1856,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 11,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 1879,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1965,
									"end": 1969,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 1957,
									"end": 1970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1708,
									"end": 1994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3203,
									"end": 3223,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3311,
									"end": 3321,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 20,
									"value": "48"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 20,
									"value": "49"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 20,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 20,
									"value": "50"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 20,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 20,
									"value": "51"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 20
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 20,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "87"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "88"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "50"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 20,
									"value": "88"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 20,
									"value": "87"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 20,
									"value": "52"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 20
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 20,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 20
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 20,
									"value": "54"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 20,
									"value": "55"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "93"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "54"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 20,
									"value": "93"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "94"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 20,
									"value": "94"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 20
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 20
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 20,
									"value": "56"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 20,
									"value": "57"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 20,
									"value": "58"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "98"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "99"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "100"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "56"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 20,
									"value": "100"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "57"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 20,
									"value": "99"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "56"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 20,
									"value": "98"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 20,
									"value": "59"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "103"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "58"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 20,
									"value": "103"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "104"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "105"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "59"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 20,
									"value": "105"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 20
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "55"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 20,
									"value": "104"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 20,
									"value": "61"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 20,
									"value": "62"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "108"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "61"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 20,
									"value": "108"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "109"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 20,
									"value": "109"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 20,
									"value": "63"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 20,
									"value": "111"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "113"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "114"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "62"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 20,
									"value": "114"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "111"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 20,
									"value": "113"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 20,
									"value": "64"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "116"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "117"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "52"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 20,
									"value": "117"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "118"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "53"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 20,
									"value": "118"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "119"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 20,
									"value": "119"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "120"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "121"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "53"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 20,
									"value": "121"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "63"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 20,
									"value": "120"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 20,
									"value": "116"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 20,
									"value": "65"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 20,
									"value": "66"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "124"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "65"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 20,
									"value": "124"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 20,
									"value": "67"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "126"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "66"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 20,
									"value": "126"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 20
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 20,
									"value": "11"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "128"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "48"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 20,
									"value": "128"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "129"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "130"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "49"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 20,
									"value": "130"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 20,
									"value": "129"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "131"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 20
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "51"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 20,
									"value": "131"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "132"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "64"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 20,
									"value": "132"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "134"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "135"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 20
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 20,
									"value": "135"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "136"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "67"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 20,
									"value": "136"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "133"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 20,
									"value": "134"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "137"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "52"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 20,
									"value": "137"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 20,
									"value": "138"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "140"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 20
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "138"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 20,
									"value": "140"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "141"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 20
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "142"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 20
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "66"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 20,
									"value": "142"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 20,
									"value": "141"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 20
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 20
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 20,
									"value": "133"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 20,
									"value": "68"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "145"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "68"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 20,
									"value": "145"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 20,
									"value": "70"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "147"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 20,
									"value": "147"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 20,
									"value": "23"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "149"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "70"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 20,
									"value": "149"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5820,
									"end": 5897,
									"name": "tag",
									"source": 20,
									"value": "71"
								},
								{
									"begin": 5820,
									"end": 5897,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5857,
									"end": 5864,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5886,
									"end": 5891,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 5875,
									"end": 5891,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5875,
									"end": 5891,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5820,
									"end": 5897,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 5820,
									"end": 5897,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5820,
									"end": 5897,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5820,
									"end": 5897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5903,
									"end": 6021,
									"name": "tag",
									"source": 20,
									"value": "72"
								},
								{
									"begin": 5903,
									"end": 6021,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5990,
									"end": 6014,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "152"
								},
								{
									"begin": 6008,
									"end": 6013,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 5990,
									"end": 6014,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "71"
								},
								{
									"begin": 5990,
									"end": 6014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5990,
									"end": 6014,
									"name": "tag",
									"source": 20,
									"value": "152"
								},
								{
									"begin": 5990,
									"end": 6014,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5985,
									"end": 5988,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5978,
									"end": 6015,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 5903,
									"end": 6021,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5903,
									"end": 6021,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5903,
									"end": 6021,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6027,
									"end": 6145,
									"name": "tag",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 6027,
									"end": 6145,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6114,
									"end": 6138,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "154"
								},
								{
									"begin": 6132,
									"end": 6137,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6114,
									"end": 6138,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "56"
								},
								{
									"begin": 6114,
									"end": 6138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6114,
									"end": 6138,
									"name": "tag",
									"source": 20,
									"value": "154"
								},
								{
									"begin": 6114,
									"end": 6138,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6109,
									"end": 6112,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 6102,
									"end": 6139,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 6027,
									"end": 6145,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6027,
									"end": 6145,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6027,
									"end": 6145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "tag",
									"source": 20,
									"value": "39"
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6356,
									"end": 6360,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 6394,
									"end": 6397,
									"name": "PUSH",
									"source": 20,
									"value": "A0"
								},
								{
									"begin": 6383,
									"end": 6392,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 6379,
									"end": 6398,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 6371,
									"end": 6398,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 6371,
									"end": 6398,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6408,
									"end": 6479,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "156"
								},
								{
									"begin": 6476,
									"end": 6477,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 6465,
									"end": 6474,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 6461,
									"end": 6478,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 6452,
									"end": 6458,
									"name": "DUP9",
									"source": 20
								},
								{
									"begin": 6408,
									"end": 6479,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "72"
								},
								{
									"begin": 6408,
									"end": 6479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6408,
									"end": 6479,
									"name": "tag",
									"source": 20,
									"value": "156"
								},
								{
									"begin": 6408,
									"end": 6479,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6489,
									"end": 6561,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "157"
								},
								{
									"begin": 6557,
									"end": 6559,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 6546,
									"end": 6555,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 6542,
									"end": 6560,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 6533,
									"end": 6539,
									"name": "DUP8",
									"source": 20
								},
								{
									"begin": 6489,
									"end": 6561,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "72"
								},
								{
									"begin": 6489,
									"end": 6561,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6489,
									"end": 6561,
									"name": "tag",
									"source": 20,
									"value": "157"
								},
								{
									"begin": 6489,
									"end": 6561,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6571,
									"end": 6643,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "158"
								},
								{
									"begin": 6639,
									"end": 6641,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 6628,
									"end": 6637,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 6624,
									"end": 6642,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 6615,
									"end": 6621,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 6571,
									"end": 6643,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "72"
								},
								{
									"begin": 6571,
									"end": 6643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6571,
									"end": 6643,
									"name": "tag",
									"source": 20,
									"value": "158"
								},
								{
									"begin": 6571,
									"end": 6643,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6653,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "159"
								},
								{
									"begin": 6721,
									"end": 6723,
									"name": "PUSH",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 6710,
									"end": 6719,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 6706,
									"end": 6724,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 6697,
									"end": 6703,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 6653,
									"end": 6725,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 6653,
									"end": 6725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6653,
									"end": 6725,
									"name": "tag",
									"source": 20,
									"value": "159"
								},
								{
									"begin": 6653,
									"end": 6725,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6735,
									"end": 6808,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "160"
								},
								{
									"begin": 6803,
									"end": 6806,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 6792,
									"end": 6801,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 6788,
									"end": 6807,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 6779,
									"end": 6785,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 6735,
									"end": 6808,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "70"
								},
								{
									"begin": 6735,
									"end": 6808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6735,
									"end": 6808,
									"name": "tag",
									"source": 20,
									"value": "160"
								},
								{
									"begin": 6735,
									"end": 6808,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "SWAP7",
									"source": 20
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "SWAP6",
									"source": 20
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6151,
									"end": 6815,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6151,
									"end": 6815,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6821,
									"end": 6990,
									"name": "tag",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 6821,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6905,
									"end": 6916,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 6939,
									"end": 6945,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 6934,
									"end": 6937,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 6927,
									"end": 6946,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 6979,
									"end": 6983,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 6974,
									"end": 6977,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 6970,
									"end": 6984,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 6955,
									"end": 6984,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 6955,
									"end": 6984,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6821,
									"end": 6990,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 6821,
									"end": 6990,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 6821,
									"end": 6990,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6821,
									"end": 6990,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6821,
									"end": 6990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6996,
									"end": 7242,
									"name": "tag",
									"source": 20,
									"value": "75"
								},
								{
									"begin": 6996,
									"end": 7242,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7077,
									"end": 7078,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "tag",
									"source": 20,
									"value": "163"
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7101,
									"end": 7107,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7098,
									"end": 7099,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7095,
									"end": 7108,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "165"
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 7186,
									"end": 7187,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 7181,
									"end": 7184,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7177,
									"end": 7188,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 7171,
									"end": 7189,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 7167,
									"end": 7168,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7162,
									"end": 7165,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7158,
									"end": 7169,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 7151,
									"end": 7190,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 7123,
									"end": 7125,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 7120,
									"end": 7121,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7116,
									"end": 7126,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 7111,
									"end": 7126,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7111,
									"end": 7126,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "163"
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "tag",
									"source": 20,
									"value": "165"
								},
								{
									"begin": 7087,
									"end": 7200,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7234,
									"end": 7235,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 7225,
									"end": 7231,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7220,
									"end": 7223,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7216,
									"end": 7232,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 7209,
									"end": 7236,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 7058,
									"end": 7242,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6996,
									"end": 7242,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6996,
									"end": 7242,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6996,
									"end": 7242,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6996,
									"end": 7242,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7248,
									"end": 7350,
									"name": "tag",
									"source": 20,
									"value": "76"
								},
								{
									"begin": 7248,
									"end": 7350,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7289,
									"end": 7295,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 7340,
									"end": 7342,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 7336,
									"end": 7343,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 7331,
									"end": 7333,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 7324,
									"end": 7329,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7320,
									"end": 7334,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 7316,
									"end": 7344,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 7306,
									"end": 7344,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7306,
									"end": 7344,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7248,
									"end": 7350,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7248,
									"end": 7350,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7248,
									"end": 7350,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7248,
									"end": 7350,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7356,
									"end": 7733,
									"name": "tag",
									"source": 20,
									"value": "77"
								},
								{
									"begin": 7356,
									"end": 7733,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7444,
									"end": 7447,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 7472,
									"end": 7511,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "168"
								},
								{
									"begin": 7505,
									"end": 7510,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7472,
									"end": 7511,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "48"
								},
								{
									"begin": 7472,
									"end": 7511,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7472,
									"end": 7511,
									"name": "tag",
									"source": 20,
									"value": "168"
								},
								{
									"begin": 7472,
									"end": 7511,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7527,
									"end": 7598,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "169"
								},
								{
									"begin": 7591,
									"end": 7597,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7586,
									"end": 7589,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 7527,
									"end": 7598,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 7527,
									"end": 7598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7527,
									"end": 7598,
									"name": "tag",
									"source": 20,
									"value": "169"
								},
								{
									"begin": 7527,
									"end": 7598,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7520,
									"end": 7598,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 7520,
									"end": 7598,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7607,
									"end": 7672,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "170"
								},
								{
									"begin": 7665,
									"end": 7671,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7660,
									"end": 7663,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 7646,
									"end": 7651,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 7642,
									"end": 7658,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 7607,
									"end": 7672,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "75"
								},
								{
									"begin": 7607,
									"end": 7672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7607,
									"end": 7672,
									"name": "tag",
									"source": 20,
									"value": "170"
								},
								{
									"begin": 7607,
									"end": 7672,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7697,
									"end": 7726,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "171"
								},
								{
									"begin": 7719,
									"end": 7725,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7697,
									"end": 7726,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "76"
								},
								{
									"begin": 7697,
									"end": 7726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7697,
									"end": 7726,
									"name": "tag",
									"source": 20,
									"value": "171"
								},
								{
									"begin": 7697,
									"end": 7726,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7692,
									"end": 7695,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7688,
									"end": 7727,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 7681,
									"end": 7727,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7681,
									"end": 7727,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7448,
									"end": 7733,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7356,
									"end": 7733,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 7356,
									"end": 7733,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7356,
									"end": 7733,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7356,
									"end": 7733,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7356,
									"end": 7733,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7739,
									"end": 8052,
									"name": "tag",
									"source": 20,
									"value": "44"
								},
								{
									"begin": 7739,
									"end": 8052,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7852,
									"end": 7856,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 7890,
									"end": 7892,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 7879,
									"end": 7888,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7875,
									"end": 7893,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 7867,
									"end": 7893,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7867,
									"end": 7893,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7939,
									"end": 7948,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7933,
									"end": 7937,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7929,
									"end": 7949,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 7925,
									"end": 7926,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 7914,
									"end": 7923,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7910,
									"end": 7927,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 7903,
									"end": 7950,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 7967,
									"end": 8045,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "173"
								},
								{
									"begin": 8040,
									"end": 8044,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8031,
									"end": 8037,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7967,
									"end": 8045,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "77"
								},
								{
									"begin": 7967,
									"end": 8045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7967,
									"end": 8045,
									"name": "tag",
									"source": 20,
									"value": "173"
								},
								{
									"begin": 7967,
									"end": 8045,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7959,
									"end": 8045,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7959,
									"end": 8045,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7739,
									"end": 8052,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 7739,
									"end": 8052,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7739,
									"end": 8052,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7739,
									"end": 8052,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7739,
									"end": 8052,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8058,
									"end": 8156,
									"name": "tag",
									"source": 20,
									"value": "78"
								},
								{
									"begin": 8058,
									"end": 8156,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8109,
									"end": 8115,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 8143,
									"end": 8148,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8137,
									"end": 8149,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 8127,
									"end": 8149,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8127,
									"end": 8149,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8058,
									"end": 8156,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 8058,
									"end": 8156,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8058,
									"end": 8156,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8058,
									"end": 8156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8162,
									"end": 8278,
									"name": "tag",
									"source": 20,
									"value": "79"
								},
								{
									"begin": 8162,
									"end": 8278,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8213,
									"end": 8217,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 8236,
									"end": 8239,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8228,
									"end": 8239,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8228,
									"end": 8239,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8266,
									"end": 8270,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 8261,
									"end": 8264,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8257,
									"end": 8271,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 8249,
									"end": 8271,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8249,
									"end": 8271,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8162,
									"end": 8278,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 8162,
									"end": 8278,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8162,
									"end": 8278,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8162,
									"end": 8278,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8284,
									"end": 8438,
									"name": "tag",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 8284,
									"end": 8438,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8327,
									"end": 8338,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 8363,
									"end": 8392,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "177"
								},
								{
									"begin": 8387,
									"end": 8390,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8381,
									"end": 8391,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 8363,
									"end": 8392,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "71"
								},
								{
									"begin": 8363,
									"end": 8392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8363,
									"end": 8392,
									"name": "tag",
									"source": 20,
									"value": "177"
								},
								{
									"begin": 8363,
									"end": 8392,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8426,
									"end": 8431,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 8402,
									"end": 8431,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 8402,
									"end": 8431,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8339,
									"end": 8438,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8284,
									"end": 8438,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 8284,
									"end": 8438,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8284,
									"end": 8438,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8284,
									"end": 8438,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8444,
									"end": 9038,
									"name": "tag",
									"source": 20,
									"value": "46"
								},
								{
									"begin": 8444,
									"end": 9038,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 8559,
									"end": 8597,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "179"
								},
								{
									"begin": 8591,
									"end": 8596,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8559,
									"end": 8597,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "78"
								},
								{
									"begin": 8559,
									"end": 8597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8559,
									"end": 8597,
									"name": "tag",
									"source": 20,
									"value": "179"
								},
								{
									"begin": 8559,
									"end": 8597,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8622,
									"end": 8627,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8649,
									"end": 8689,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "180"
								},
								{
									"begin": 8683,
									"end": 8688,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 8649,
									"end": 8689,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "79"
								},
								{
									"begin": 8649,
									"end": 8689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8649,
									"end": 8689,
									"name": "tag",
									"source": 20,
									"value": "180"
								},
								{
									"begin": 8649,
									"end": 8689,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8637,
									"end": 8689,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8637,
									"end": 8689,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8708,
									"end": 8743,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "181"
								},
								{
									"begin": 8734,
									"end": 8742,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8708,
									"end": 8743,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 8708,
									"end": 8743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8708,
									"end": 8743,
									"name": "tag",
									"source": 20,
									"value": "181"
								},
								{
									"begin": 8708,
									"end": 8743,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8699,
									"end": 8743,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 8699,
									"end": 8743,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8767,
									"end": 8769,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 8759,
									"end": 8765,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8756,
									"end": 8770,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 8753,
									"end": 9031,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 8753,
									"end": 9031,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "182"
								},
								{
									"begin": 8753,
									"end": 9031,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "183"
								},
								{
									"begin": 8923,
									"end": 8989,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8893,
									"end": 8899,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 8889,
									"end": 8891,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 8885,
									"end": 8900,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 8882,
									"end": 8883,
									"name": "PUSH",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 8878,
									"end": 8901,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "54"
								},
								{
									"begin": 8838,
									"end": 9007,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "tag",
									"source": 20,
									"value": "183"
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8815,
									"end": 8820,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 8794,
									"end": 9021,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 8785,
									"end": 9021,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 8785,
									"end": 9021,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8753,
									"end": 9031,
									"name": "tag",
									"source": 20,
									"value": "182"
								},
								{
									"begin": 8753,
									"end": 9031,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8534,
									"end": 9038,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8534,
									"end": 9038,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8444,
									"end": 9038,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 8444,
									"end": 9038,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8444,
									"end": 9038,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8444,
									"end": 9038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "tag",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "C0"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "E0"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "100"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "120"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "140"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2227"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2224"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2221"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2219"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2217"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2215"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2213"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 1960,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202863a85ac47b5d9ae1b1bd47376db3b288f0ab83184c876f759788f57eb9746764736f6c63430008160033",
									".code": [
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "715018A6"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "A9059CBB"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "A9059CBB"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "C5EBEAEC"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "D505ACCF"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "DD62ED3E"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "F2FDE38B"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "tag",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "715018A6"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "7ECEBE00"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "84B0196E"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "8DA5CB5B"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "95D89B41"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "tag",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "2F865568"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "2F865568"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "313CE567"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "3644E515"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "67C9B017"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "70A08231"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "tag",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "6FDDE03"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "95EA7B3"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "18160DDD"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "23B872DD"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "tag",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 321,
											"end": 1960,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "tag",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "tag",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "49"
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 1475,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "tag",
											"source": 19,
											"value": "49"
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 1475,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "tag",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "tag",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "tag",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "63"
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 909,
											"end": 1055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "tag",
											"source": 19,
											"value": "63"
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "65"
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 1055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "tag",
											"source": 19,
											"value": "65"
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "tag",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "99"
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 1061,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "tag",
											"source": 19,
											"value": "99"
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 1061,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "tag",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "tag",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "55"
										},
										{
											"begin": 1635,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 1594,
											"end": 1614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1619,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1620,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1594,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1594,
											"end": 1631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1594,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1578,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 1578,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 1578,
											"end": 1591,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1578,
											"end": 1591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 1578,
											"end": 1591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1578,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "141"
										},
										{
											"begin": 1578,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1578,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1578,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "142"
										},
										{
											"begin": 1578,
											"end": 1631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1578,
											"end": 1631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "141"
										},
										{
											"begin": 1578,
											"end": 1631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1568,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1569,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1574,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1574,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "143"
										},
										{
											"begin": 1543,
											"end": 1632,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "144"
										},
										{
											"begin": 1543,
											"end": 1632,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "143"
										},
										{
											"begin": 1543,
											"end": 1632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "145"
										},
										{
											"begin": 1543,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "142"
										},
										{
											"begin": 1543,
											"end": 1638,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "145"
										},
										{
											"begin": 1543,
											"end": 1638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1644,
											"modifierDepth": 1,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1543,
											"end": 1644,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "146"
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "147"
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "148"
										},
										{
											"begin": 1535,
											"end": 1697,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "147"
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "146"
										},
										{
											"begin": 1535,
											"end": 1697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1758,
											"end": 1781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1809,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1810,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1784,
											"end": 1821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1784,
											"end": 1821,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1784,
											"end": 1821,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1758,
											"end": 1821,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1758,
											"end": 1821,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1880,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1882,
											"end": 1883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1860,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1860,
											"end": 1884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1857,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1831,
											"end": 1884,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1907,
											"end": 1919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "149"
										},
										{
											"begin": 1907,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 1907,
											"end": 1919,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1907,
											"end": 1919,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "149"
										},
										{
											"begin": 1907,
											"end": 1919,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "D9D00ED0DECBA63A0AD16A878DE20D30A429554F47B378787A818B7284DA17B5"
										},
										{
											"begin": 1921,
											"end": 1939,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1941,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "150"
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "151"
										},
										{
											"begin": 1900,
											"end": 1946,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "150"
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1946,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 19
										},
										{
											"begin": 1525,
											"end": 1953,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1475,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2741,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "tag",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 953,
											"end": 957,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 981,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "PUSH",
											"source": 19,
											"value": "A"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "EXP",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1018,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1018,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1018,
											"name": "PUSH",
											"source": 19,
											"value": "FEAF968C"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "158"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "tag",
											"source": 19,
											"value": "158"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "159"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 990,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "tag",
											"source": 19,
											"value": "159"
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 969,
											"end": 1020,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 969,
											"end": 1020,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 969,
											"end": 1020,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 969,
											"end": 1020,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 969,
											"end": 1020,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 969,
											"end": 1020,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1042,
											"end": 1047,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1030,
											"end": 1048,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1030,
											"end": 1048,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1030,
											"end": 1048,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 909,
											"end": 1055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2504,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2536,
											"end": 2541,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2523,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5242,
											"end": 5255,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5301,
											"end": 5322,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5404,
											"end": 5416,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5457,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 5533,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 5560,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "CHAINID",
											"source": 15
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 5668,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "PUSH",
											"source": 15,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "tag",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1130,
											"end": 1132,
											"name": "PUSH",
											"source": 19,
											"value": "4B"
										},
										{
											"begin": 1121,
											"end": 1126,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1121,
											"end": 1132,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 1121,
											"end": 1132,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "192"
										},
										{
											"begin": 1113,
											"end": 1167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "tag",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "tag",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 1113,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1178,
											"end": 1193,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1222,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 1197,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 1197,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "tag",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "194"
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "142"
										},
										{
											"begin": 1197,
											"end": 1222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "tag",
											"source": 19,
											"value": "194"
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1178,
											"end": 1222,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1178,
											"end": 1222,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "142"
										},
										{
											"begin": 1244,
											"end": 1262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "tag",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1232,
											"end": 1262,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1232,
											"end": 1262,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1340,
											"end": 1344,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1358,
											"end": 1368,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1378,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1292,
											"name": "PUSH",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1303,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1378,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1389,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 1395,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 1395,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "tag",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1409,
											"end": 1413,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1389,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "198"
										},
										{
											"begin": 1389,
											"end": 1414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1389,
											"end": 1414,
											"name": "tag",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 1389,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1437,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 1437,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 1437,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1437,
											"end": 1449,
											"name": "tag",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 1437,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "PUSH",
											"source": 19,
											"value": "D9D00ED0DECBA63A0AD16A878DE20D30A429554F47B378787A818B7284DA17B5"
										},
										{
											"begin": 1451,
											"end": 1455,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1457,
											"end": 1461,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "151"
										},
										{
											"begin": 1430,
											"end": 1462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "tag",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "LOG2",
											"source": 19
										},
										{
											"begin": 1103,
											"end": 1469,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1103,
											"end": 1469,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1061,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1898,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1909,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1964,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "6279130200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1117,
											"name": "PUSH",
											"source": 6,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2066,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2068,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2094,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2017,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2107,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2122,
											"end": 2150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2107,
											"end": 2150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2107,
											"end": 2150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2192,
											"end": 2196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2178,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2206,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2230,
											"end": 2235,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2292,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "4B800E4600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2258,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2323,
											"end": 2328,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2337,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2344,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2314,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3898,
											"end": 3905,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3949,
											"name": "PUSHIMMUTABLE",
											"source": 15,
											"value": "2217"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3970,
											"end": 3984,
											"name": "PUSHIMMUTABLE",
											"source": 15,
											"value": "2215"
										},
										{
											"begin": 3953,
											"end": 3966,
											"name": "CHAINID",
											"source": 15
										},
										{
											"begin": 3953,
											"end": 3984,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "PUSHIMMUTABLE",
											"source": 15,
											"value": "2213"
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 4067,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 4067,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3845,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 645,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 538,
											"end": 645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 598,
											"end": 605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 631,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 617,
											"end": 638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 617,
											"end": 638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 645,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 538,
											"end": 645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 538,
											"end": 645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "tag",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6067,
											"end": 6080,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "PUSHIMMUTABLE",
											"source": 15,
											"value": "2224"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6099,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6021,
											"end": 6147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "tag",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6522,
											"end": 6535,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 6584,
											"end": 6600,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 6554,
											"end": 6562,
											"name": "PUSHIMMUTABLE",
											"source": 15,
											"value": "2227"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6554,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6473,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 819,
											"end": 826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1134,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "tag",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 5053,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5020,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 5020,
											"end": 5086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "tag",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5013,
											"end": 5086,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5013,
											"end": 5086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 5093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "tag",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6888,
											"end": 6895,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6925,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 6978,
											"end": 6982,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6990,
											"end": 6991,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6967,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 6967,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7021,
											"end": 7029,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7002,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 7002,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6803,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2174,
											"name": "PUSH",
											"source": 15,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "PUSHIMMUTABLE",
											"source": 15,
											"value": "2219"
										},
										{
											"begin": 4239,
											"end": 4253,
											"name": "PUSHIMMUTABLE",
											"source": 15,
											"value": "2221"
										},
										{
											"begin": 4255,
											"end": 4268,
											"name": "CHAINID",
											"source": 15
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 4204,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4113,
											"end": 4292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3479,
											"end": 3492,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3554,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 3577,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3385,
											"end": 3652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "tag",
											"source": 16,
											"value": "268"
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3446,
											"end": 3460,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3585,
											"end": 3595,
											"name": "PUSH",
											"source": 16,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3580,
											"end": 3583,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3632,
											"end": 3647,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3625,
											"end": 3629,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 3620,
											"end": 3623,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3616,
											"end": 3630,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3684,
											"end": 3694,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3677,
											"end": 3681,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 3672,
											"end": 3675,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3661,
											"end": 3695,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3733,
											"end": 3737,
											"name": "PUSH",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 3728,
											"end": 3731,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3718,
											"end": 3738,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 3708,
											"end": 3738,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3708,
											"end": 3738,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3524,
											"end": 3748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3353,
											"end": 3754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5289,
											"end": 5296,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6265,
											"name": "PUSH",
											"source": 14,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6467,
											"end": 6471,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6476,
											"end": 6477,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 6457,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6514,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6495,
											"end": 6501,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7287,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7387,
											"end": 7416,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 14,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7488,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7586,
											"end": 7594,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 14,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7626,
											"end": 7656,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7622,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7702,
											"end": 7710,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 14,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 7679,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2150,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 2176,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2300,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2402,
											"end": 2405,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2397,
											"end": 2400,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2473,
											"end": 2476,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2078,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 11,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2787,
											"end": 2793,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2555,
											"end": 2800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 20,
											"value": "347"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 20,
											"value": "348"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 20,
											"value": "349"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 20,
											"value": "401"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "403"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "401"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 20,
											"value": "403"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 20,
											"value": "350"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 20,
											"value": "351"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "347"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "407"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "348"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 20,
											"value": "407"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "408"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "349"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 20,
											"value": "408"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "350"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 20,
											"value": "28"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "411"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "351"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 20,
											"value": "411"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 20,
											"value": "355"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 20,
											"value": "356"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "417"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "355"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 20,
											"value": "417"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 20,
											"value": "357"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "419"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "356"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 20,
											"value": "419"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "420"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 20,
											"value": "420"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 20,
											"value": "358"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "422"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "357"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 20,
											"value": "422"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "425"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 20,
											"value": "425"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "430"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "431"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 20,
											"value": "431"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 20,
											"value": "430"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "432"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "358"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 20,
											"value": "432"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "433"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 20,
											"value": "433"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 20,
											"value": "362"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 20,
											"value": "363"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "436"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "362"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 20,
											"value": "436"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "438"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "363"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 20,
											"value": "438"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "442"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 20,
											"value": "442"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "444"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "445"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 20,
											"value": "445"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 20,
											"value": "444"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "446"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "358"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 20,
											"value": "446"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "358"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "tag",
											"source": 20,
											"value": "50"
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4482,
											"end": 4488,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4533,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4519,
											"end": 4528,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4510,
											"end": 4517,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4506,
											"end": 4529,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4502,
											"end": 4534,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4537,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "451"
										},
										{
											"begin": 4537,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 4537,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4537,
											"end": 4616,
											"name": "tag",
											"source": 20,
											"value": "451"
										},
										{
											"begin": 4537,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "tag",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 4499,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4657,
											"end": 4658,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "452"
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4707,
											"end": 4716,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4703,
											"end": 4725,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "358"
										},
										{
											"begin": 4682,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "tag",
											"source": 20,
											"value": "452"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4628,
											"end": 4745,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4423,
											"end": 4752,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4423,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "tag",
											"source": 20,
											"value": "365"
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4793,
											"end": 4800,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4837,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4822,
											"end": 4838,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4811,
											"end": 4838,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4811,
											"end": 4838,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4758,
											"end": 4844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "tag",
											"source": 20,
											"value": "366"
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "455"
										},
										{
											"begin": 4949,
											"end": 4954,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "365"
										},
										{
											"begin": 4933,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "tag",
											"source": 20,
											"value": "455"
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4928,
											"end": 4931,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4921,
											"end": 4956,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4850,
											"end": 4962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "tag",
											"source": 20,
											"value": "56"
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5057,
											"end": 5061,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5097,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "457"
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5157,
											"end": 5174,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "366"
										},
										{
											"begin": 5108,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "tag",
											"source": 20,
											"value": "457"
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4968,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5188,
											"end": 5265,
											"name": "tag",
											"source": 20,
											"value": "367"
										},
										{
											"begin": 5188,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5225,
											"end": 5232,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5259,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5243,
											"end": 5259,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5243,
											"end": 5259,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5188,
											"end": 5265,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5188,
											"end": 5265,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5188,
											"end": 5265,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5188,
											"end": 5265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5271,
											"end": 5389,
											"name": "tag",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 5271,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5358,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "460"
										},
										{
											"begin": 5376,
											"end": 5381,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5358,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "367"
										},
										{
											"begin": 5358,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5358,
											"end": 5382,
											"name": "tag",
											"source": 20,
											"value": "460"
										},
										{
											"begin": 5358,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5353,
											"end": 5356,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5346,
											"end": 5383,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5271,
											"end": 5389,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5271,
											"end": 5389,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5271,
											"end": 5389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5395,
											"end": 5617,
											"name": "tag",
											"source": 20,
											"value": "61"
										},
										{
											"begin": 5395,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5488,
											"end": 5492,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5528,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5515,
											"end": 5524,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5511,
											"end": 5529,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5503,
											"end": 5529,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5503,
											"end": 5529,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5539,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 5607,
											"end": 5608,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5605,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5592,
											"end": 5609,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5539,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 5539,
											"end": 5610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5539,
											"end": 5610,
											"name": "tag",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 5539,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5395,
											"end": 5617,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5395,
											"end": 5617,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5395,
											"end": 5617,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5395,
											"end": 5617,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5395,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "tag",
											"source": 20,
											"value": "369"
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5659,
											"end": 5666,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5765,
											"name": "PUSH",
											"source": 20,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5692,
											"end": 5697,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5688,
											"end": 5766,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5623,
											"end": 5772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "tag",
											"source": 20,
											"value": "370"
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 5880,
											"end": 5885,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "369"
										},
										{
											"begin": 5863,
											"end": 5886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "tag",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5858,
											"end": 5861,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5851,
											"end": 5887,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5778,
											"end": 5893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "tag",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 6004,
											"end": 6009,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "356"
										},
										{
											"begin": 5986,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "tag",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5981,
											"end": 5984,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5974,
											"end": 6011,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5899,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "tag",
											"source": 20,
											"value": "372"
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6090,
											"end": 6096,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6129,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6023,
											"end": 6137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "tag",
											"source": 20,
											"value": "373"
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6242,
											"end": 6253,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6282,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6271,
											"end": 6274,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6307,
											"end": 6321,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6143,
											"end": 6327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "tag",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6444,
											"end": 6458,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6333,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "tag",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "472"
										},
										{
											"begin": 6566,
											"end": 6571,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 6548,
											"end": 6572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "tag",
											"source": 20,
											"value": "472"
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6543,
											"end": 6546,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6536,
											"end": 6573,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6471,
											"end": 6579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "tag",
											"source": 20,
											"value": "376"
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6654,
											"end": 6664,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "474"
										},
										{
											"begin": 6717,
											"end": 6720,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 6675,
											"end": 6721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "tag",
											"source": 20,
											"value": "474"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6744,
											"end": 6758,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6585,
											"end": 6764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "tag",
											"source": 20,
											"value": "377"
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6876,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6867,
											"end": 6870,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6863,
											"end": 6877,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6770,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "tag",
											"source": 20,
											"value": "378"
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7038,
											"end": 7041,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "477"
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "372"
										},
										{
											"begin": 7067,
											"end": 7121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "tag",
											"source": 20,
											"value": "477"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "478"
										},
										{
											"begin": 7216,
											"end": 7222,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7211,
											"end": 7214,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "373"
										},
										{
											"begin": 7137,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "tag",
											"source": 20,
											"value": "478"
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "479"
										},
										{
											"begin": 7297,
											"end": 7302,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "374"
										},
										{
											"begin": 7247,
											"end": 7303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "tag",
											"source": 20,
											"value": "479"
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7326,
											"end": 7333,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 20,
											"value": "480"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7367,
											"end": 7373,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7361,
											"end": 7374,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "482"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7443,
											"end": 7449,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7437,
											"end": 7450,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "483"
										},
										{
											"begin": 7529,
											"end": 7532,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 7514,
											"end": 7527,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "376"
										},
										{
											"begin": 7470,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "tag",
											"source": 20,
											"value": "483"
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "484"
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "377"
										},
										{
											"begin": 7556,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "tag",
											"source": 20,
											"value": "484"
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7402,
											"end": 7626,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7382,
											"end": 7391,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "480"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 20,
											"value": "482"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7346,
											"end": 7360,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7642,
											"end": 7645,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6919,
											"end": 7651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "tag",
											"source": 20,
											"value": "83"
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8006,
											"end": 8010,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8047,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 8033,
											"end": 8042,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8029,
											"end": 8048,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "486"
										},
										{
											"begin": 8124,
											"end": 8125,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8122,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8109,
											"end": 8126,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8100,
											"end": 8106,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "370"
										},
										{
											"begin": 8058,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "tag",
											"source": 20,
											"value": "486"
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8164,
											"end": 8184,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8144,
											"end": 8162,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8137,
											"end": 8185,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "487"
										},
										{
											"begin": 8275,
											"end": 8279,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8266,
											"end": 8272,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "351"
										},
										{
											"begin": 8202,
											"end": 8280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "tag",
											"source": 20,
											"value": "487"
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8327,
											"end": 8336,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8317,
											"end": 8337,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8312,
											"end": 8314,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8301,
											"end": 8310,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8297,
											"end": 8315,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8290,
											"end": 8338,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "488"
										},
										{
											"begin": 8428,
											"end": 8432,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "351"
										},
										{
											"begin": 8355,
											"end": 8433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "tag",
											"source": 20,
											"value": "488"
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "489"
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 8500,
											"end": 8509,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8496,
											"end": 8514,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8487,
											"end": 8493,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 8443,
											"end": 8515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "tag",
											"source": 20,
											"value": "489"
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "490"
										},
										{
											"begin": 8593,
											"end": 8596,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 8582,
											"end": 8591,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 8525,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "tag",
											"source": 20,
											"value": "490"
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "491"
										},
										{
											"begin": 8676,
											"end": 8679,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 8665,
											"end": 8674,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8661,
											"end": 8680,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8652,
											"end": 8658,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 8608,
											"end": 8681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "tag",
											"source": 20,
											"value": "491"
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8729,
											"end": 8738,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8723,
											"end": 8727,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8719,
											"end": 8739,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 8716,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 8702,
											"end": 8711,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8698,
											"end": 8717,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8691,
											"end": 8740,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "492"
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8851,
											"end": 8857,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "378"
										},
										{
											"begin": 8757,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "tag",
											"source": 20,
											"value": "492"
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP9",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "tag",
											"source": 20,
											"value": "88"
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8971,
											"end": 8975,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9009,
											"end": 9011,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8998,
											"end": 9007,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8994,
											"end": 9012,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8986,
											"end": 9012,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8986,
											"end": 9012,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "494"
										},
										{
											"begin": 9090,
											"end": 9091,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9088,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9075,
											"end": 9092,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9066,
											"end": 9072,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 9022,
											"end": 9093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "tag",
											"source": 20,
											"value": "494"
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8878,
											"end": 9100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9106,
											"end": 9435,
											"name": "tag",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 9106,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9165,
											"end": 9171,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9216,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9202,
											"end": 9211,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9193,
											"end": 9200,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9189,
											"end": 9212,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 9185,
											"end": 9217,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 9182,
											"end": 9301,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9182,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "496"
										},
										{
											"begin": 9182,
											"end": 9301,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9220,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "497"
										},
										{
											"begin": 9220,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 9220,
											"end": 9299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9220,
											"end": 9299,
											"name": "tag",
											"source": 20,
											"value": "497"
										},
										{
											"begin": 9220,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9182,
											"end": 9301,
											"name": "tag",
											"source": 20,
											"value": "496"
										},
										{
											"begin": 9182,
											"end": 9301,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9340,
											"end": 9341,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "498"
										},
										{
											"begin": 9410,
											"end": 9417,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9401,
											"end": 9407,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9390,
											"end": 9399,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9386,
											"end": 9408,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 9365,
											"end": 9418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9365,
											"end": 9418,
											"name": "tag",
											"source": 20,
											"value": "498"
										},
										{
											"begin": 9365,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9355,
											"end": 9418,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9355,
											"end": 9418,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9311,
											"end": 9428,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9106,
											"end": 9435,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9106,
											"end": 9435,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9106,
											"end": 9435,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9106,
											"end": 9435,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9106,
											"end": 9435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9441,
											"end": 9559,
											"name": "tag",
											"source": 20,
											"value": "379"
										},
										{
											"begin": 9441,
											"end": 9559,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9512,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "500"
										},
										{
											"begin": 9528,
											"end": 9533,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9512,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "365"
										},
										{
											"begin": 9512,
											"end": 9534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9512,
											"end": 9534,
											"name": "tag",
											"source": 20,
											"value": "500"
										},
										{
											"begin": 9512,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9505,
											"end": 9510,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9502,
											"end": 9535,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 9492,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "501"
										},
										{
											"begin": 9492,
											"end": 9553,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9549,
											"end": 9550,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9546,
											"end": 9547,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9539,
											"end": 9551,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 9492,
											"end": 9553,
											"name": "tag",
											"source": 20,
											"value": "501"
										},
										{
											"begin": 9492,
											"end": 9553,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9441,
											"end": 9559,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9441,
											"end": 9559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9565,
											"end": 9700,
											"name": "tag",
											"source": 20,
											"value": "380"
										},
										{
											"begin": 9565,
											"end": 9700,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9609,
											"end": 9614,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9647,
											"end": 9653,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9634,
											"end": 9654,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 9625,
											"end": 9654,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9625,
											"end": 9654,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9663,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "503"
										},
										{
											"begin": 9688,
											"end": 9693,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9663,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "379"
										},
										{
											"begin": 9663,
											"end": 9694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9663,
											"end": 9694,
											"name": "tag",
											"source": 20,
											"value": "503"
										},
										{
											"begin": 9663,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9565,
											"end": 9700,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9565,
											"end": 9700,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9565,
											"end": 9700,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9565,
											"end": 9700,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9565,
											"end": 9700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9706,
											"end": 9828,
											"name": "tag",
											"source": 20,
											"value": "381"
										},
										{
											"begin": 9706,
											"end": 9828,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9779,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "505"
										},
										{
											"begin": 9797,
											"end": 9802,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9779,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "367"
										},
										{
											"begin": 9779,
											"end": 9803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9779,
											"end": 9803,
											"name": "tag",
											"source": 20,
											"value": "505"
										},
										{
											"begin": 9779,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9772,
											"end": 9777,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9769,
											"end": 9804,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 9759,
											"end": 9822,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "506"
										},
										{
											"begin": 9759,
											"end": 9822,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9818,
											"end": 9819,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9816,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9808,
											"end": 9820,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 9759,
											"end": 9822,
											"name": "tag",
											"source": 20,
											"value": "506"
										},
										{
											"begin": 9759,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9706,
											"end": 9828,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9706,
											"end": 9828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9834,
											"end": 9973,
											"name": "tag",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 9834,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9880,
											"end": 9885,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9918,
											"end": 9924,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9905,
											"end": 9925,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 9896,
											"end": 9925,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9896,
											"end": 9925,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9934,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "508"
										},
										{
											"begin": 9961,
											"end": 9966,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9934,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "381"
										},
										{
											"begin": 9934,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9934,
											"end": 9967,
											"name": "tag",
											"source": 20,
											"value": "508"
										},
										{
											"begin": 9934,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9834,
											"end": 9973,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9834,
											"end": 9973,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9834,
											"end": 9973,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9834,
											"end": 9973,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9834,
											"end": 9973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9979,
											"end": 11178,
											"name": "tag",
											"source": 20,
											"value": "105"
										},
										{
											"begin": 9979,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10090,
											"end": 10096,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10098,
											"end": 10104,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10106,
											"end": 10112,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10114,
											"end": 10120,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10122,
											"end": 10128,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10130,
											"end": 10136,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10187,
											"end": 10190,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 10175,
											"end": 10184,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 10166,
											"end": 10173,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10162,
											"end": 10185,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 10155,
											"end": 10275,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10155,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "510"
										},
										{
											"begin": 10155,
											"end": 10275,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10194,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "511"
										},
										{
											"begin": 10194,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 10194,
											"end": 10273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10194,
											"end": 10273,
											"name": "tag",
											"source": 20,
											"value": "511"
										},
										{
											"begin": 10194,
											"end": 10273,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10155,
											"end": 10275,
											"name": "tag",
											"source": 20,
											"value": "510"
										},
										{
											"begin": 10155,
											"end": 10275,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10314,
											"end": 10315,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10339,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "512"
										},
										{
											"begin": 10384,
											"end": 10391,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10375,
											"end": 10381,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10364,
											"end": 10373,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10360,
											"end": 10382,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10339,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "358"
										},
										{
											"begin": 10339,
											"end": 10392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10339,
											"end": 10392,
											"name": "tag",
											"source": 20,
											"value": "512"
										},
										{
											"begin": 10339,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10329,
											"end": 10392,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 10329,
											"end": 10392,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10285,
											"end": 10402,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10441,
											"end": 10443,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10467,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "513"
										},
										{
											"begin": 10512,
											"end": 10519,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10503,
											"end": 10509,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10492,
											"end": 10501,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10488,
											"end": 10510,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10467,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "358"
										},
										{
											"begin": 10467,
											"end": 10520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10467,
											"end": 10520,
											"name": "tag",
											"source": 20,
											"value": "513"
										},
										{
											"begin": 10467,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10457,
											"end": 10520,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 10457,
											"end": 10520,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10412,
											"end": 10530,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10569,
											"end": 10571,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10595,
											"end": 10648,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "514"
										},
										{
											"begin": 10640,
											"end": 10647,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10620,
											"end": 10629,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10616,
											"end": 10638,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10595,
											"end": 10648,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 10595,
											"end": 10648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10595,
											"end": 10648,
											"name": "tag",
											"source": 20,
											"value": "514"
										},
										{
											"begin": 10595,
											"end": 10648,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10585,
											"end": 10648,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 10585,
											"end": 10648,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10540,
											"end": 10658,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10697,
											"end": 10699,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 10723,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "515"
										},
										{
											"begin": 10768,
											"end": 10775,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10759,
											"end": 10765,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10748,
											"end": 10757,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10744,
											"end": 10766,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10723,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 10723,
											"end": 10776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10723,
											"end": 10776,
											"name": "tag",
											"source": 20,
											"value": "515"
										},
										{
											"begin": 10723,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10713,
											"end": 10776,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 10713,
											"end": 10776,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10668,
											"end": 10786,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10825,
											"end": 10828,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 10852,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "516"
										},
										{
											"begin": 10895,
											"end": 10902,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10886,
											"end": 10892,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10875,
											"end": 10884,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10871,
											"end": 10893,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10852,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "380"
										},
										{
											"begin": 10852,
											"end": 10903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10852,
											"end": 10903,
											"name": "tag",
											"source": 20,
											"value": "516"
										},
										{
											"begin": 10852,
											"end": 10903,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10842,
											"end": 10903,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 10842,
											"end": 10903,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10796,
											"end": 10913,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10952,
											"end": 10955,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 10979,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "517"
										},
										{
											"begin": 11024,
											"end": 11031,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 11015,
											"end": 11021,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11004,
											"end": 11013,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 11000,
											"end": 11022,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10979,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 10979,
											"end": 11032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10979,
											"end": 11032,
											"name": "tag",
											"source": 20,
											"value": "517"
										},
										{
											"begin": 10979,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10969,
											"end": 11032,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10969,
											"end": 11032,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10923,
											"end": 11042,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11081,
											"end": 11084,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 11108,
											"end": 11161,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "518"
										},
										{
											"begin": 11153,
											"end": 11160,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 11144,
											"end": 11150,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11133,
											"end": 11142,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 11129,
											"end": 11151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11108,
											"end": 11161,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 11108,
											"end": 11161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11108,
											"end": 11161,
											"name": "tag",
											"source": 20,
											"value": "518"
										},
										{
											"begin": 11108,
											"end": 11161,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11098,
											"end": 11161,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11098,
											"end": 11161,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11052,
											"end": 11171,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9979,
											"end": 11178,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9979,
											"end": 11178,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 9979,
											"end": 11178,
											"name": "SWAP9",
											"source": 20
										},
										{
											"begin": 9979,
											"end": 11178,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9979,
											"end": 11178,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 9979,
											"end": 11178,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 9979,
											"end": 11178,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9979,
											"end": 11178,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9979,
											"end": 11178,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 9979,
											"end": 11178,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9979,
											"end": 11178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11184,
											"end": 11658,
											"name": "tag",
											"source": 20,
											"value": "110"
										},
										{
											"begin": 11184,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11260,
											"end": 11266,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 11309,
											"end": 11311,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11306,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11288,
											"end": 11295,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11284,
											"end": 11307,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 11280,
											"end": 11312,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 11277,
											"end": 11396,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 11277,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "520"
										},
										{
											"begin": 11277,
											"end": 11396,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11315,
											"end": 11394,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "521"
										},
										{
											"begin": 11315,
											"end": 11394,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 11315,
											"end": 11394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11315,
											"end": 11394,
											"name": "tag",
											"source": 20,
											"value": "521"
										},
										{
											"begin": 11315,
											"end": 11394,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11277,
											"end": 11396,
											"name": "tag",
											"source": 20,
											"value": "520"
										},
										{
											"begin": 11277,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11435,
											"end": 11436,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11460,
											"end": 11513,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "522"
										},
										{
											"begin": 11505,
											"end": 11512,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11496,
											"end": 11502,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11485,
											"end": 11494,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 11481,
											"end": 11503,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11460,
											"end": 11513,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "358"
										},
										{
											"begin": 11460,
											"end": 11513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11460,
											"end": 11513,
											"name": "tag",
											"source": 20,
											"value": "522"
										},
										{
											"begin": 11460,
											"end": 11513,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11450,
											"end": 11513,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 11450,
											"end": 11513,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11406,
											"end": 11523,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11562,
											"end": 11564,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11588,
											"end": 11641,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "523"
										},
										{
											"begin": 11633,
											"end": 11640,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11624,
											"end": 11630,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11613,
											"end": 11622,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 11609,
											"end": 11631,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11588,
											"end": 11641,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "358"
										},
										{
											"begin": 11588,
											"end": 11641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11588,
											"end": 11641,
											"name": "tag",
											"source": 20,
											"value": "523"
										},
										{
											"begin": 11588,
											"end": 11641,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11578,
											"end": 11641,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11578,
											"end": 11641,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11533,
											"end": 11651,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11184,
											"end": 11658,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 11184,
											"end": 11658,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11184,
											"end": 11658,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 11184,
											"end": 11658,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11184,
											"end": 11658,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11184,
											"end": 11658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11664,
											"end": 11844,
											"name": "tag",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 11664,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11712,
											"end": 11789,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11709,
											"end": 11710,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11702,
											"end": 11790,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11809,
											"end": 11813,
											"name": "PUSH",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 11806,
											"end": 11807,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 11799,
											"end": 11814,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11833,
											"end": 11837,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 11830,
											"end": 11831,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11823,
											"end": 11838,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 11850,
											"end": 12170,
											"name": "tag",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 11850,
											"end": 12170,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11894,
											"end": 11900,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11931,
											"end": 11932,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 11925,
											"end": 11929,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11921,
											"end": 11933,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 11911,
											"end": 11933,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11911,
											"end": 11933,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11978,
											"end": 11979,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 11972,
											"end": 11976,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11968,
											"end": 11980,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11999,
											"end": 12017,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 11989,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "526"
										},
										{
											"begin": 11989,
											"end": 12070,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12055,
											"end": 12059,
											"name": "PUSH",
											"source": 20,
											"value": "7F"
										},
										{
											"begin": 12047,
											"end": 12053,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12043,
											"end": 12060,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 12033,
											"end": 12060,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12033,
											"end": 12060,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11989,
											"end": 12070,
											"name": "tag",
											"source": 20,
											"value": "526"
										},
										{
											"begin": 11989,
											"end": 12070,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12117,
											"end": 12119,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 12109,
											"end": 12115,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12106,
											"end": 12120,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12083,
											"end": 12121,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 12080,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "527"
										},
										{
											"begin": 12080,
											"end": 12164,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12136,
											"end": 12154,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "528"
										},
										{
											"begin": 12136,
											"end": 12154,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "383"
										},
										{
											"begin": 12136,
											"end": 12154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12136,
											"end": 12154,
											"name": "tag",
											"source": 20,
											"value": "528"
										},
										{
											"begin": 12136,
											"end": 12154,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12080,
											"end": 12164,
											"name": "tag",
											"source": 20,
											"value": "527"
										},
										{
											"begin": 12080,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11901,
											"end": 12170,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11850,
											"end": 12170,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11850,
											"end": 12170,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11850,
											"end": 12170,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11850,
											"end": 12170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12176,
											"end": 12356,
											"name": "tag",
											"source": 20,
											"value": "384"
										},
										{
											"begin": 12176,
											"end": 12356,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12224,
											"end": 12301,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12221,
											"end": 12222,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12302,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12321,
											"end": 12325,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 12318,
											"end": 12319,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 12311,
											"end": 12326,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12345,
											"end": 12349,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 12342,
											"end": 12343,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12335,
											"end": 12350,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12772,
											"name": "tag",
											"source": 20,
											"value": "142"
										},
										{
											"begin": 12362,
											"end": 12772,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12402,
											"end": 12409,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12425,
											"end": 12445,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "531"
										},
										{
											"begin": 12443,
											"end": 12444,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12425,
											"end": 12445,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 12425,
											"end": 12445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12425,
											"end": 12445,
											"name": "tag",
											"source": 20,
											"value": "531"
										},
										{
											"begin": 12425,
											"end": 12445,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12420,
											"end": 12445,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12420,
											"end": 12445,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12459,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "532"
										},
										{
											"begin": 12477,
											"end": 12478,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12459,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 12459,
											"end": 12479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12459,
											"end": 12479,
											"name": "tag",
											"source": 20,
											"value": "532"
										},
										{
											"begin": 12459,
											"end": 12479,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12454,
											"end": 12479,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12454,
											"end": 12479,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12514,
											"end": 12515,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12511,
											"end": 12512,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12507,
											"end": 12516,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 12536,
											"end": 12566,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "533"
										},
										{
											"begin": 12554,
											"end": 12565,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 12536,
											"end": 12566,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 12536,
											"end": 12566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12536,
											"end": 12566,
											"name": "tag",
											"source": 20,
											"value": "533"
										},
										{
											"begin": 12536,
											"end": 12566,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12525,
											"end": 12566,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12525,
											"end": 12566,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12715,
											"end": 12716,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12706,
											"end": 12713,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12702,
											"end": 12717,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 12699,
											"end": 12700,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 12696,
											"end": 12718,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 12676,
											"end": 12677,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12669,
											"end": 12678,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 12649,
											"end": 12732,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 12626,
											"end": 12765,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "534"
										},
										{
											"begin": 12626,
											"end": 12765,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 12745,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "535"
										},
										{
											"begin": 12745,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "384"
										},
										{
											"begin": 12745,
											"end": 12763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12745,
											"end": 12763,
											"name": "tag",
											"source": 20,
											"value": "535"
										},
										{
											"begin": 12745,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12626,
											"end": 12765,
											"name": "tag",
											"source": 20,
											"value": "534"
										},
										{
											"begin": 12626,
											"end": 12765,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12410,
											"end": 12772,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12772,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12772,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12772,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12772,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12778,
											"end": 12958,
											"name": "tag",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 12778,
											"end": 12958,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12826,
											"end": 12903,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12823,
											"end": 12824,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12816,
											"end": 12904,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12923,
											"end": 12927,
											"name": "PUSH",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 12920,
											"end": 12921,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 12913,
											"end": 12928,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12947,
											"end": 12951,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 12944,
											"end": 12945,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12937,
											"end": 12952,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 12964,
											"end": 13149,
											"name": "tag",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 12964,
											"end": 13149,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13004,
											"end": 13005,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13021,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "538"
										},
										{
											"begin": 13039,
											"end": 13040,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13021,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 13021,
											"end": 13041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13021,
											"end": 13041,
											"name": "tag",
											"source": 20,
											"value": "538"
										},
										{
											"begin": 13021,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13016,
											"end": 13041,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13016,
											"end": 13041,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13055,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "539"
										},
										{
											"begin": 13073,
											"end": 13074,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13055,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 13055,
											"end": 13075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13055,
											"end": 13075,
											"name": "tag",
											"source": 20,
											"value": "539"
										},
										{
											"begin": 13055,
											"end": 13075,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 13050,
											"end": 13075,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13094,
											"end": 13095,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13084,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "540"
										},
										{
											"begin": 13084,
											"end": 13119,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 13099,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "541"
										},
										{
											"begin": 13099,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 13099,
											"end": 13117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13099,
											"end": 13117,
											"name": "tag",
											"source": 20,
											"value": "541"
										},
										{
											"begin": 13099,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13084,
											"end": 13119,
											"name": "tag",
											"source": 20,
											"value": "540"
										},
										{
											"begin": 13084,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13141,
											"end": 13142,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13138,
											"end": 13139,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13134,
											"end": 13143,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 13129,
											"end": 13143,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13129,
											"end": 13143,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12964,
											"end": 13149,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12964,
											"end": 13149,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12964,
											"end": 13149,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12964,
											"end": 13149,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12964,
											"end": 13149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13155,
											"end": 13390,
											"name": "tag",
											"source": 20,
											"value": "386"
										},
										{
											"begin": 13155,
											"end": 13390,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13295,
											"end": 13329,
											"name": "PUSH",
											"source": 20,
											"value": "63757272656E746C79206465707420746F20636F727265746572616C20726174"
										},
										{
											"begin": 13291,
											"end": 13292,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13283,
											"end": 13289,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13279,
											"end": 13293,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13272,
											"end": 13330,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13364,
											"end": 13382,
											"name": "PUSH",
											"source": 20,
											"value": "696F206C657373207468616E2038352500000000000000000000000000000000"
										},
										{
											"begin": 13359,
											"end": 13361,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13351,
											"end": 13357,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13347,
											"end": 13362,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13340,
											"end": 13383,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 13155,
											"end": 13390,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13155,
											"end": 13390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13396,
											"end": 13762,
											"name": "tag",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 13396,
											"end": 13762,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13538,
											"end": 13541,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13559,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "544"
										},
										{
											"begin": 13623,
											"end": 13625,
											"name": "PUSH",
											"source": 20,
											"value": "30"
										},
										{
											"begin": 13618,
											"end": 13621,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13559,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "348"
										},
										{
											"begin": 13559,
											"end": 13626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13559,
											"end": 13626,
											"name": "tag",
											"source": 20,
											"value": "544"
										},
										{
											"begin": 13559,
											"end": 13626,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13552,
											"end": 13626,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13552,
											"end": 13626,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13635,
											"end": 13728,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "545"
										},
										{
											"begin": 13724,
											"end": 13727,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13635,
											"end": 13728,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "386"
										},
										{
											"begin": 13635,
											"end": 13728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13635,
											"end": 13728,
											"name": "tag",
											"source": 20,
											"value": "545"
										},
										{
											"begin": 13635,
											"end": 13728,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13753,
											"end": 13755,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 13748,
											"end": 13751,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13744,
											"end": 13756,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13737,
											"end": 13756,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13737,
											"end": 13756,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13396,
											"end": 13762,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13396,
											"end": 13762,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13396,
											"end": 13762,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13396,
											"end": 13762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13768,
											"end": 14187,
											"name": "tag",
											"source": 20,
											"value": "148"
										},
										{
											"begin": 13768,
											"end": 14187,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13934,
											"end": 13938,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13972,
											"end": 13974,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13961,
											"end": 13970,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13957,
											"end": 13975,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13949,
											"end": 13975,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13949,
											"end": 13975,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14021,
											"end": 14030,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14015,
											"end": 14019,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14011,
											"end": 14031,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 14007,
											"end": 14008,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 14005,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13992,
											"end": 14009,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13985,
											"end": 14032,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14049,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "547"
										},
										{
											"begin": 14175,
											"end": 14179,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14049,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 14049,
											"end": 14180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14049,
											"end": 14180,
											"name": "tag",
											"source": 20,
											"value": "547"
										},
										{
											"begin": 14049,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14041,
											"end": 14180,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14041,
											"end": 14180,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13768,
											"end": 14187,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 13768,
											"end": 14187,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13768,
											"end": 14187,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13768,
											"end": 14187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14193,
											"end": 14513,
											"name": "tag",
											"source": 20,
											"value": "151"
										},
										{
											"begin": 14193,
											"end": 14513,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14308,
											"end": 14312,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14346,
											"end": 14348,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 14335,
											"end": 14344,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14331,
											"end": 14349,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14323,
											"end": 14349,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14323,
											"end": 14349,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14359,
											"end": 14430,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "549"
										},
										{
											"begin": 14427,
											"end": 14428,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14416,
											"end": 14425,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14412,
											"end": 14429,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14403,
											"end": 14409,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 14359,
											"end": 14430,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 14359,
											"end": 14430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14359,
											"end": 14430,
											"name": "tag",
											"source": 20,
											"value": "549"
										},
										{
											"begin": 14359,
											"end": 14430,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14440,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "550"
										},
										{
											"begin": 14502,
											"end": 14504,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 14491,
											"end": 14500,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14487,
											"end": 14505,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14478,
											"end": 14484,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 14440,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "363"
										},
										{
											"begin": 14440,
											"end": 14506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14440,
											"end": 14506,
											"name": "tag",
											"source": 20,
											"value": "550"
										},
										{
											"begin": 14440,
											"end": 14506,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14193,
											"end": 14513,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 14193,
											"end": 14513,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14193,
											"end": 14513,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14193,
											"end": 14513,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14193,
											"end": 14513,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14193,
											"end": 14513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14519,
											"end": 14624,
											"name": "tag",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 14519,
											"end": 14624,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14555,
											"end": 14562,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14595,
											"end": 14617,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14588,
											"end": 14593,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14584,
											"end": 14618,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 14573,
											"end": 14618,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14573,
											"end": 14618,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14519,
											"end": 14624,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14519,
											"end": 14624,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14519,
											"end": 14624,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14519,
											"end": 14624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14630,
											"end": 14750,
											"name": "tag",
											"source": 20,
											"value": "389"
										},
										{
											"begin": 14630,
											"end": 14750,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14702,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "553"
										},
										{
											"begin": 14719,
											"end": 14724,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14702,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 14702,
											"end": 14725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14702,
											"end": 14725,
											"name": "tag",
											"source": 20,
											"value": "553"
										},
										{
											"begin": 14702,
											"end": 14725,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14695,
											"end": 14700,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14692,
											"end": 14726,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 14682,
											"end": 14744,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "554"
										},
										{
											"begin": 14682,
											"end": 14744,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 14740,
											"end": 14741,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14737,
											"end": 14738,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 14730,
											"end": 14742,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 14682,
											"end": 14744,
											"name": "tag",
											"source": 20,
											"value": "554"
										},
										{
											"begin": 14682,
											"end": 14744,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14630,
											"end": 14750,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14630,
											"end": 14750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14756,
											"end": 14897,
											"name": "tag",
											"source": 20,
											"value": "390"
										},
										{
											"begin": 14756,
											"end": 14897,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14812,
											"end": 14817,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14843,
											"end": 14849,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14837,
											"end": 14850,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 14828,
											"end": 14850,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14828,
											"end": 14850,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14859,
											"end": 14891,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "556"
										},
										{
											"begin": 14885,
											"end": 14890,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14859,
											"end": 14891,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "389"
										},
										{
											"begin": 14859,
											"end": 14891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14859,
											"end": 14891,
											"name": "tag",
											"source": 20,
											"value": "556"
										},
										{
											"begin": 14859,
											"end": 14891,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14756,
											"end": 14897,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14756,
											"end": 14897,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14756,
											"end": 14897,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14756,
											"end": 14897,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14756,
											"end": 14897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14903,
											"end": 14979,
											"name": "tag",
											"source": 20,
											"value": "391"
										},
										{
											"begin": 14903,
											"end": 14979,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14939,
											"end": 14946,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 14973,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 14957,
											"end": 14973,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14957,
											"end": 14973,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14903,
											"end": 14979,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14903,
											"end": 14979,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14903,
											"end": 14979,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14903,
											"end": 14979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14985,
											"end": 15105,
											"name": "tag",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 14985,
											"end": 15105,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15057,
											"end": 15080,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "559"
										},
										{
											"begin": 15074,
											"end": 15079,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15057,
											"end": 15080,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "391"
										},
										{
											"begin": 15057,
											"end": 15080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15057,
											"end": 15080,
											"name": "tag",
											"source": 20,
											"value": "559"
										},
										{
											"begin": 15057,
											"end": 15080,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15050,
											"end": 15055,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15047,
											"end": 15081,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 15037,
											"end": 15099,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "560"
										},
										{
											"begin": 15037,
											"end": 15099,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 15095,
											"end": 15096,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15092,
											"end": 15093,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 15085,
											"end": 15097,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 15037,
											"end": 15099,
											"name": "tag",
											"source": 20,
											"value": "560"
										},
										{
											"begin": 15037,
											"end": 15099,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14985,
											"end": 15105,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14985,
											"end": 15105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15111,
											"end": 15252,
											"name": "tag",
											"source": 20,
											"value": "393"
										},
										{
											"begin": 15111,
											"end": 15252,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15167,
											"end": 15172,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15198,
											"end": 15204,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15192,
											"end": 15205,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 15183,
											"end": 15205,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15183,
											"end": 15205,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "562"
										},
										{
											"begin": 15240,
											"end": 15245,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 15214,
											"end": 15246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "tag",
											"source": 20,
											"value": "562"
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15111,
											"end": 15252,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 15111,
											"end": 15252,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15111,
											"end": 15252,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15111,
											"end": 15252,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15111,
											"end": 15252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15258,
											"end": 15401,
											"name": "tag",
											"source": 20,
											"value": "394"
										},
										{
											"begin": 15258,
											"end": 15401,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15315,
											"end": 15320,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15352,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15340,
											"end": 15353,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 15331,
											"end": 15353,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15331,
											"end": 15353,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15362,
											"end": 15395,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "564"
										},
										{
											"begin": 15389,
											"end": 15394,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 15362,
											"end": 15395,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "360"
										},
										{
											"begin": 15362,
											"end": 15395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15362,
											"end": 15395,
											"name": "tag",
											"source": 20,
											"value": "564"
										},
										{
											"begin": 15362,
											"end": 15395,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15258,
											"end": 15401,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 15258,
											"end": 15401,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 15258,
											"end": 15401,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15258,
											"end": 15401,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15258,
											"end": 15401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15407,
											"end": 16378,
											"name": "tag",
											"source": 20,
											"value": "160"
										},
										{
											"begin": 15407,
											"end": 16378,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15510,
											"end": 15516,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15518,
											"end": 15524,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 15526,
											"end": 15532,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15534,
											"end": 15540,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 15542,
											"end": 15548,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15591,
											"end": 15594,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 15579,
											"end": 15588,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 15570,
											"end": 15577,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 15566,
											"end": 15589,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 15562,
											"end": 15595,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 15559,
											"end": 15679,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 15559,
											"end": 15679,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "566"
										},
										{
											"begin": 15559,
											"end": 15679,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 15598,
											"end": 15677,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "567"
										},
										{
											"begin": 15598,
											"end": 15677,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 15598,
											"end": 15677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15598,
											"end": 15677,
											"name": "tag",
											"source": 20,
											"value": "567"
										},
										{
											"begin": 15598,
											"end": 15677,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15559,
											"end": 15679,
											"name": "tag",
											"source": 20,
											"value": "566"
										},
										{
											"begin": 15559,
											"end": 15679,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15743,
											"end": 15806,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "568"
										},
										{
											"begin": 15798,
											"end": 15805,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 15789,
											"end": 15795,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15778,
											"end": 15787,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 15774,
											"end": 15796,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15743,
											"end": 15806,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "390"
										},
										{
											"begin": 15743,
											"end": 15806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15743,
											"end": 15806,
											"name": "tag",
											"source": 20,
											"value": "568"
										},
										{
											"begin": 15743,
											"end": 15806,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15733,
											"end": 15806,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 15733,
											"end": 15806,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15689,
											"end": 15816,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15855,
											"end": 15857,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15881,
											"end": 15944,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "569"
										},
										{
											"begin": 15936,
											"end": 15943,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 15927,
											"end": 15933,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15916,
											"end": 15925,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 15912,
											"end": 15934,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15881,
											"end": 15944,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "393"
										},
										{
											"begin": 15881,
											"end": 15944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15881,
											"end": 15944,
											"name": "tag",
											"source": 20,
											"value": "569"
										},
										{
											"begin": 15881,
											"end": 15944,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15871,
											"end": 15944,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 15871,
											"end": 15944,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15826,
											"end": 15954,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15993,
											"end": 15995,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 16019,
											"end": 16083,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "570"
										},
										{
											"begin": 16075,
											"end": 16082,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 16066,
											"end": 16072,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16055,
											"end": 16064,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 16051,
											"end": 16073,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16019,
											"end": 16083,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "394"
										},
										{
											"begin": 16019,
											"end": 16083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16019,
											"end": 16083,
											"name": "tag",
											"source": 20,
											"value": "570"
										},
										{
											"begin": 16019,
											"end": 16083,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16009,
											"end": 16083,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 16009,
											"end": 16083,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15964,
											"end": 16093,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16132,
											"end": 16134,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 16158,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "571"
										},
										{
											"begin": 16214,
											"end": 16221,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 16205,
											"end": 16211,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16194,
											"end": 16203,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 16190,
											"end": 16212,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16158,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "394"
										},
										{
											"begin": 16158,
											"end": 16222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16158,
											"end": 16222,
											"name": "tag",
											"source": 20,
											"value": "571"
										},
										{
											"begin": 16158,
											"end": 16222,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16148,
											"end": 16222,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 16148,
											"end": 16222,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16103,
											"end": 16232,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16271,
											"end": 16274,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 16298,
											"end": 16361,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "572"
										},
										{
											"begin": 16353,
											"end": 16360,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 16344,
											"end": 16350,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16333,
											"end": 16342,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 16329,
											"end": 16351,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16298,
											"end": 16361,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "390"
										},
										{
											"begin": 16298,
											"end": 16361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16298,
											"end": 16361,
											"name": "tag",
											"source": 20,
											"value": "572"
										},
										{
											"begin": 16298,
											"end": 16361,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16288,
											"end": 16361,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16288,
											"end": 16361,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16242,
											"end": 16371,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15407,
											"end": 16378,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 15407,
											"end": 16378,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 15407,
											"end": 16378,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15407,
											"end": 16378,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 15407,
											"end": 16378,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 15407,
											"end": 16378,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15407,
											"end": 16378,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 15407,
											"end": 16378,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15407,
											"end": 16378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16384,
											"end": 16564,
											"name": "tag",
											"source": 20,
											"value": "177"
										},
										{
											"begin": 16384,
											"end": 16564,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16432,
											"end": 16509,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16429,
											"end": 16430,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16422,
											"end": 16510,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16529,
											"end": 16533,
											"name": "PUSH",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 16526,
											"end": 16527,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 16519,
											"end": 16534,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16553,
											"end": 16557,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 16550,
											"end": 16551,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16543,
											"end": 16558,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 16570,
											"end": 16750,
											"name": "tag",
											"source": 20,
											"value": "395"
										},
										{
											"begin": 16570,
											"end": 16750,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16710,
											"end": 16742,
											"name": "PUSH",
											"source": 20,
											"value": "526174696F206D757374206C657373207468616E20657175616C203735250000"
										},
										{
											"begin": 16706,
											"end": 16707,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16698,
											"end": 16704,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16694,
											"end": 16708,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 16687,
											"end": 16743,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16570,
											"end": 16750,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16570,
											"end": 16750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16756,
											"end": 17122,
											"name": "tag",
											"source": 20,
											"value": "396"
										},
										{
											"begin": 16756,
											"end": 17122,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16898,
											"end": 16901,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16919,
											"end": 16986,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 16983,
											"end": 16985,
											"name": "PUSH",
											"source": 20,
											"value": "1E"
										},
										{
											"begin": 16978,
											"end": 16981,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 16919,
											"end": 16986,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "348"
										},
										{
											"begin": 16919,
											"end": 16986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16919,
											"end": 16986,
											"name": "tag",
											"source": 20,
											"value": "576"
										},
										{
											"begin": 16919,
											"end": 16986,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 16912,
											"end": 16986,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16912,
											"end": 16986,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16995,
											"end": 17088,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "577"
										},
										{
											"begin": 17084,
											"end": 17087,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 16995,
											"end": 17088,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "395"
										},
										{
											"begin": 16995,
											"end": 17088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 16995,
											"end": 17088,
											"name": "tag",
											"source": 20,
											"value": "577"
										},
										{
											"begin": 16995,
											"end": 17088,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17113,
											"end": 17115,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17108,
											"end": 17111,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17104,
											"end": 17116,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17097,
											"end": 17116,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17097,
											"end": 17116,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16756,
											"end": 17122,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 16756,
											"end": 17122,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 16756,
											"end": 17122,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 16756,
											"end": 17122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17128,
											"end": 17547,
											"name": "tag",
											"source": 20,
											"value": "192"
										},
										{
											"begin": 17128,
											"end": 17547,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17294,
											"end": 17298,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17332,
											"end": 17334,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17321,
											"end": 17330,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17317,
											"end": 17335,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17309,
											"end": 17335,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17309,
											"end": 17335,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17381,
											"end": 17390,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17375,
											"end": 17379,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17371,
											"end": 17391,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 17367,
											"end": 17368,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17356,
											"end": 17365,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17352,
											"end": 17369,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17345,
											"end": 17392,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 17409,
											"end": 17540,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "579"
										},
										{
											"begin": 17535,
											"end": 17539,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 17409,
											"end": 17540,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "396"
										},
										{
											"begin": 17409,
											"end": 17540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17409,
											"end": 17540,
											"name": "tag",
											"source": 20,
											"value": "579"
										},
										{
											"begin": 17409,
											"end": 17540,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17401,
											"end": 17540,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17401,
											"end": 17540,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17128,
											"end": 17547,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 17128,
											"end": 17547,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17128,
											"end": 17547,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17128,
											"end": 17547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17553,
											"end": 18328,
											"name": "tag",
											"source": 20,
											"value": "207"
										},
										{
											"begin": 17553,
											"end": 18328,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17786,
											"end": 17790,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17824,
											"end": 17827,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 17813,
											"end": 17822,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 17809,
											"end": 17828,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17801,
											"end": 17828,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 17801,
											"end": 17828,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17838,
											"end": 17909,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "581"
										},
										{
											"begin": 17906,
											"end": 17907,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 17895,
											"end": 17904,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17891,
											"end": 17908,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17882,
											"end": 17888,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 17838,
											"end": 17909,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 17838,
											"end": 17909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17838,
											"end": 17909,
											"name": "tag",
											"source": 20,
											"value": "581"
										},
										{
											"begin": 17838,
											"end": 17909,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17919,
											"end": 17991,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "582"
										},
										{
											"begin": 17987,
											"end": 17989,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 17976,
											"end": 17985,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 17972,
											"end": 17990,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 17963,
											"end": 17969,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 17919,
											"end": 17991,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 17919,
											"end": 17991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 17919,
											"end": 17991,
											"name": "tag",
											"source": 20,
											"value": "582"
										},
										{
											"begin": 17919,
											"end": 17991,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18001,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "583"
										},
										{
											"begin": 18069,
											"end": 18071,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 18058,
											"end": 18067,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18054,
											"end": 18072,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18045,
											"end": 18051,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 18001,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 18001,
											"end": 18073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18001,
											"end": 18073,
											"name": "tag",
											"source": 20,
											"value": "583"
										},
										{
											"begin": 18001,
											"end": 18073,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18083,
											"end": 18155,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "584"
										},
										{
											"begin": 18151,
											"end": 18153,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 18140,
											"end": 18149,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18136,
											"end": 18154,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18127,
											"end": 18133,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 18083,
											"end": 18155,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 18083,
											"end": 18155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18083,
											"end": 18155,
											"name": "tag",
											"source": 20,
											"value": "584"
										},
										{
											"begin": 18083,
											"end": 18155,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18165,
											"end": 18238,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "585"
										},
										{
											"begin": 18233,
											"end": 18236,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 18222,
											"end": 18231,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18218,
											"end": 18237,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18209,
											"end": 18215,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 18165,
											"end": 18238,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 18165,
											"end": 18238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18165,
											"end": 18238,
											"name": "tag",
											"source": 20,
											"value": "585"
										},
										{
											"begin": 18165,
											"end": 18238,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18248,
											"end": 18321,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "586"
										},
										{
											"begin": 18316,
											"end": 18319,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 18305,
											"end": 18314,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18301,
											"end": 18320,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18292,
											"end": 18298,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 18248,
											"end": 18321,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 18248,
											"end": 18321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18248,
											"end": 18321,
											"name": "tag",
											"source": 20,
											"value": "586"
										},
										{
											"begin": 18248,
											"end": 18321,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 17553,
											"end": 18328,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 17553,
											"end": 18328,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 17553,
											"end": 18328,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17553,
											"end": 18328,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17553,
											"end": 18328,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17553,
											"end": 18328,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17553,
											"end": 18328,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17553,
											"end": 18328,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17553,
											"end": 18328,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 17553,
											"end": 18328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18334,
											"end": 18666,
											"name": "tag",
											"source": 20,
											"value": "214"
										},
										{
											"begin": 18334,
											"end": 18666,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18455,
											"end": 18459,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18493,
											"end": 18495,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 18482,
											"end": 18491,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18478,
											"end": 18496,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18470,
											"end": 18496,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18506,
											"end": 18577,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "588"
										},
										{
											"begin": 18574,
											"end": 18575,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18563,
											"end": 18572,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18550,
											"end": 18556,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 18506,
											"end": 18577,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 18506,
											"end": 18577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18506,
											"end": 18577,
											"name": "tag",
											"source": 20,
											"value": "588"
										},
										{
											"begin": 18506,
											"end": 18577,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18587,
											"end": 18659,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "589"
										},
										{
											"begin": 18655,
											"end": 18657,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 18644,
											"end": 18653,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18640,
											"end": 18658,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18631,
											"end": 18637,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 18587,
											"end": 18659,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 18587,
											"end": 18659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18587,
											"end": 18659,
											"name": "tag",
											"source": 20,
											"value": "589"
										},
										{
											"begin": 18587,
											"end": 18659,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18334,
											"end": 18666,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 18334,
											"end": 18666,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 18334,
											"end": 18666,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18334,
											"end": 18666,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18334,
											"end": 18666,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18334,
											"end": 18666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18672,
											"end": 19114,
											"name": "tag",
											"source": 20,
											"value": "232"
										},
										{
											"begin": 18672,
											"end": 19114,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18821,
											"end": 18825,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18859,
											"end": 18861,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 18848,
											"end": 18857,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 18844,
											"end": 18862,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18836,
											"end": 18862,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 18836,
											"end": 18862,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18872,
											"end": 18943,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 18940,
											"end": 18941,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 18929,
											"end": 18938,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 18925,
											"end": 18942,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18916,
											"end": 18922,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 18872,
											"end": 18943,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 18872,
											"end": 18943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18872,
											"end": 18943,
											"name": "tag",
											"source": 20,
											"value": "591"
										},
										{
											"begin": 18872,
											"end": 18943,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18953,
											"end": 19025,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 19021,
											"end": 19023,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 19010,
											"end": 19019,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19006,
											"end": 19024,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 18997,
											"end": 19003,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 18953,
											"end": 19025,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 18953,
											"end": 19025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 18953,
											"end": 19025,
											"name": "tag",
											"source": 20,
											"value": "592"
										},
										{
											"begin": 18953,
											"end": 19025,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19035,
											"end": 19107,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "593"
										},
										{
											"begin": 19103,
											"end": 19105,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 19092,
											"end": 19101,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19088,
											"end": 19106,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19079,
											"end": 19085,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 19035,
											"end": 19107,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 19035,
											"end": 19107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19035,
											"end": 19107,
											"name": "tag",
											"source": 20,
											"value": "593"
										},
										{
											"begin": 19035,
											"end": 19107,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 18672,
											"end": 19114,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 18672,
											"end": 19114,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 18672,
											"end": 19114,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18672,
											"end": 19114,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18672,
											"end": 19114,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18672,
											"end": 19114,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 18672,
											"end": 19114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19120,
											"end": 19311,
											"name": "tag",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 19120,
											"end": 19311,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19160,
											"end": 19163,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19179,
											"end": 19199,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "595"
										},
										{
											"begin": 19197,
											"end": 19198,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19179,
											"end": 19199,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 19179,
											"end": 19199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19179,
											"end": 19199,
											"name": "tag",
											"source": 20,
											"value": "595"
										},
										{
											"begin": 19179,
											"end": 19199,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19174,
											"end": 19199,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19174,
											"end": 19199,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19213,
											"end": 19233,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "596"
										},
										{
											"begin": 19231,
											"end": 19232,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19213,
											"end": 19233,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 19213,
											"end": 19233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19213,
											"end": 19233,
											"name": "tag",
											"source": 20,
											"value": "596"
										},
										{
											"begin": 19213,
											"end": 19233,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19208,
											"end": 19233,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 19208,
											"end": 19233,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19256,
											"end": 19257,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19253,
											"end": 19254,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19249,
											"end": 19258,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19242,
											"end": 19258,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 19242,
											"end": 19258,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19277,
											"end": 19280,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 19274,
											"end": 19275,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19271,
											"end": 19281,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 19268,
											"end": 19304,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 19268,
											"end": 19304,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "597"
										},
										{
											"begin": 19268,
											"end": 19304,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 19284,
											"end": 19302,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "598"
										},
										{
											"begin": 19284,
											"end": 19302,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "384"
										},
										{
											"begin": 19284,
											"end": 19302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19284,
											"end": 19302,
											"name": "tag",
											"source": 20,
											"value": "598"
										},
										{
											"begin": 19284,
											"end": 19302,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19268,
											"end": 19304,
											"name": "tag",
											"source": 20,
											"value": "597"
										},
										{
											"begin": 19268,
											"end": 19304,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19120,
											"end": 19311,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 19120,
											"end": 19311,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 19120,
											"end": 19311,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19120,
											"end": 19311,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19120,
											"end": 19311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19317,
											"end": 19981,
											"name": "tag",
											"source": 20,
											"value": "293"
										},
										{
											"begin": 19317,
											"end": 19981,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19522,
											"end": 19526,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19560,
											"end": 19563,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 19549,
											"end": 19558,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 19545,
											"end": 19564,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19537,
											"end": 19564,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 19537,
											"end": 19564,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19574,
											"end": 19645,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "600"
										},
										{
											"begin": 19642,
											"end": 19643,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 19631,
											"end": 19640,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19627,
											"end": 19644,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19618,
											"end": 19624,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 19574,
											"end": 19645,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 19574,
											"end": 19645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19574,
											"end": 19645,
											"name": "tag",
											"source": 20,
											"value": "600"
										},
										{
											"begin": 19574,
											"end": 19645,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19655,
											"end": 19727,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "601"
										},
										{
											"begin": 19723,
											"end": 19725,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 19712,
											"end": 19721,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19708,
											"end": 19726,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19699,
											"end": 19705,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 19655,
											"end": 19727,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 19655,
											"end": 19727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19655,
											"end": 19727,
											"name": "tag",
											"source": 20,
											"value": "601"
										},
										{
											"begin": 19655,
											"end": 19727,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19737,
											"end": 19809,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "602"
										},
										{
											"begin": 19805,
											"end": 19807,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 19794,
											"end": 19803,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19790,
											"end": 19808,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19781,
											"end": 19787,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 19737,
											"end": 19809,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 19737,
											"end": 19809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19737,
											"end": 19809,
											"name": "tag",
											"source": 20,
											"value": "602"
										},
										{
											"begin": 19737,
											"end": 19809,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19819,
											"end": 19891,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "603"
										},
										{
											"begin": 19887,
											"end": 19889,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 19876,
											"end": 19885,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19872,
											"end": 19890,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19863,
											"end": 19869,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 19819,
											"end": 19891,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 19819,
											"end": 19891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19819,
											"end": 19891,
											"name": "tag",
											"source": 20,
											"value": "603"
										},
										{
											"begin": 19819,
											"end": 19891,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19901,
											"end": 19974,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "604"
										},
										{
											"begin": 19969,
											"end": 19972,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 19958,
											"end": 19967,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 19954,
											"end": 19973,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 19945,
											"end": 19951,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 19901,
											"end": 19974,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "371"
										},
										{
											"begin": 19901,
											"end": 19974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19901,
											"end": 19974,
											"name": "tag",
											"source": 20,
											"value": "604"
										},
										{
											"begin": 19901,
											"end": 19974,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19317,
											"end": 19981,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 19317,
											"end": 19981,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 19317,
											"end": 19981,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19317,
											"end": 19981,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19317,
											"end": 19981,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19317,
											"end": 19981,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19317,
											"end": 19981,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19317,
											"end": 19981,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19317,
											"end": 19981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 19987,
											"end": 20532,
											"name": "tag",
											"source": 20,
											"value": "308"
										},
										{
											"begin": 19987,
											"end": 20532,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20160,
											"end": 20164,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20198,
											"end": 20201,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 20187,
											"end": 20196,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 20183,
											"end": 20202,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20175,
											"end": 20202,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 20175,
											"end": 20202,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 20212,
											"end": 20283,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "606"
										},
										{
											"begin": 20280,
											"end": 20281,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20269,
											"end": 20278,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 20265,
											"end": 20282,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20256,
											"end": 20262,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 20212,
											"end": 20283,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 20212,
											"end": 20283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20212,
											"end": 20283,
											"name": "tag",
											"source": 20,
											"value": "606"
										},
										{
											"begin": 20212,
											"end": 20283,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20293,
											"end": 20361,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "607"
										},
										{
											"begin": 20357,
											"end": 20359,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 20346,
											"end": 20355,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 20342,
											"end": 20360,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20333,
											"end": 20339,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 20293,
											"end": 20361,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "366"
										},
										{
											"begin": 20293,
											"end": 20361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20293,
											"end": 20361,
											"name": "tag",
											"source": 20,
											"value": "607"
										},
										{
											"begin": 20293,
											"end": 20361,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20371,
											"end": 20443,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "608"
										},
										{
											"begin": 20439,
											"end": 20441,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 20428,
											"end": 20437,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 20424,
											"end": 20442,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20415,
											"end": 20421,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 20371,
											"end": 20443,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 20371,
											"end": 20443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20371,
											"end": 20443,
											"name": "tag",
											"source": 20,
											"value": "608"
										},
										{
											"begin": 20371,
											"end": 20443,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20453,
											"end": 20525,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "609"
										},
										{
											"begin": 20521,
											"end": 20523,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 20510,
											"end": 20519,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 20506,
											"end": 20524,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 20497,
											"end": 20503,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 20453,
											"end": 20525,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 20453,
											"end": 20525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20453,
											"end": 20525,
											"name": "tag",
											"source": 20,
											"value": "609"
										},
										{
											"begin": 20453,
											"end": 20525,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 19987,
											"end": 20532,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 19987,
											"end": 20532,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 19987,
											"end": 20532,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19987,
											"end": 20532,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19987,
											"end": 20532,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19987,
											"end": 20532,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19987,
											"end": 20532,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 19987,
											"end": 20532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 20538,
											"end": 20718,
											"name": "tag",
											"source": 20,
											"value": "315"
										},
										{
											"begin": 20538,
											"end": 20718,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 20586,
											"end": 20663,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20583,
											"end": 20584,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20576,
											"end": 20664,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 20683,
											"end": 20687,
											"name": "PUSH",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 20680,
											"end": 20681,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 20673,
											"end": 20688,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 20707,
											"end": 20711,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 20704,
											"end": 20705,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 20697,
											"end": 20712,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/ownership/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/PepoStablecoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"borrow(uint256)": "c5ebeaec",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"getEthPrice()": "67c9b017",
							"liquidate(address)": "2f865568",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isUSDP\",\"type\":\"bool\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isETH\",\"type\":\"bool\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PepoStablecoin.sol\":\"PepoStablecoin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xe7026fe6394bd39f8bd184b928859c06793f8b31532ab3301d297998c4d052e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e249367ad0e341fa395b39e2e6ba57194fb27611f7a7dc16c67c447cdf6774c\",\"dweb:/ipfs/QmU9iz1TysJTpmfJrRQu2vFjFBKxeBC9ZmmDnaEhVpzEo9\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/PepoStablecoin.sol\":{\"keccak256\":\"0x57e0fe722ea74dbda649435d609bdba72d57aae23afd63f4af698994f9c76562\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ba53b470d838d03cf4487b6e9b69f8c74413d5e79401c1ae96d2e9fec0e5e38\",\"dweb:/ipfs/QmRG2jGjmFb1okmJCeMdbEJo6jYQt4rFvTxcGCRFCF7AY8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 378,
								"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 384,
								"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 386,
								"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 388,
								"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 390,
								"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2229,
								"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2231,
								"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1208,
								"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 216,
								"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 3674,
								"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
								"label": "deptCollateralRatios",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(deptCollateralRatio)3669_storage)"
							},
							{
								"astId": 3677,
								"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
								"label": "ethPriceFeed",
								"offset": 0,
								"slot": "10",
								"type": "t_contract(AggregatorV3Interface)45"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(deptCollateralRatio)3669_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PepoStablecoin.deptCollateralRatio)",
								"numberOfBytes": "32",
								"value": "t_struct(deptCollateralRatio)3669_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(deptCollateralRatio)3669_storage": {
								"encoding": "inplace",
								"label": "struct PepoStablecoin.deptCollateralRatio",
								"members": [
									{
										"astId": 3666,
										"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
										"label": "dept",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3668,
										"contract": "contracts/PepoStablecoin.sol:PepoStablecoin",
										"label": "collateral",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							70
						]
					},
					"id": 71,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "IERC5267",
							"nameLocation": "143:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:1",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 50,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:1"
									},
									"src": "247:28:1"
								},
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:1",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "510:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 53,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "537:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 55,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "569:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 57,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "604:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "633:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "672:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 63,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "698:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 65,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 66,
													"nodeType": "ArrayTypeName",
													"src": "698:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:1"
									},
									"scope": 70,
									"src": "426:310:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 71,
							"src": "133:605:1",
							"usedErrors": [],
							"usedEvents": [
								50
							]
						}
					],
					"src": "107:632:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							207
						],
						"IERC20Errors": [
							112
						],
						"IERC721Errors": [
							160
						]
					},
					"id": 208,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 72,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 73,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 82,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 87,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 92,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 101,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 106,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 111,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 208,
							"src": "278:1764:2",
							"usedErrors": [
								82,
								87,
								92,
								101,
								106,
								111
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 113,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 160,
							"linearizedBaseContracts": [
								160
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 118,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 123,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 132,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 137,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 142,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 149,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 154,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 159,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 208,
							"src": "2186:2092:2",
							"usedErrors": [
								118,
								123,
								132,
								137,
								142,
								149,
								154,
								159
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 161,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 207,
							"linearizedBaseContracts": [
								207
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 172,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 177,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 182,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 189,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 194,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 199,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 206,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 208,
							"src": "4424:2107:2",
							"usedErrors": [
								172,
								177,
								182,
								189,
								194,
								199,
								206
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/ownership/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1194
						],
						"Ownable": [
							355
						]
					},
					"id": 356,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 209,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 211,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 356,
							"sourceUnit": 1195,
							"src": "128:45:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 210,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1194,
										"src": "136:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 213,
										"name": "Context",
										"nameLocations": [
											"692:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1194,
										"src": "692:7:3"
									},
									"id": 214,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:3"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 212,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 355,
							"linearizedBaseContracts": [
								355,
								1194
							],
							"name": "Ownable",
							"nameLocation": "681:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 216,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 355,
									"src": "706:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 215,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:3",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 221,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "858:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:3"
									},
									"src": "825:50:3"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:3",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 226,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "994:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:3"
									},
									"src": "968:41:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 232,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1042:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1073:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:3"
									},
									"src": "1015:84:3"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "1259:153:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 238,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "1273:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 239,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "1269:95:3",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "1301:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 245,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 244,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "1322:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 250,
															"nodeType": "RevertStatement",
															"src": "1315:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 254,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "1392:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 253,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "1373:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:3"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:3",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 258,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "1237:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:3"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:3"
									},
									"scope": 355,
									"src": "1225:187:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "1521:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 261,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "1531:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:3"
											},
											{
												"id": 264,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:3"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 266,
									"name": "onlyOwner",
									"nameLocation": "1509:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:3"
									},
									"src": "1500:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "1693:30:3",
										"statements": [
											{
												"expression": {
													"id": 272,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 216,
													"src": "1710:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 271,
												"id": 273,
												"nodeType": "Return",
												"src": "1703:13:3"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:3"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1684:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:3"
									},
									"scope": 355,
									"src": "1638:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "1841:117:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 279,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "1855:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 281,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "1866:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "1851:101:3",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "1880:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 285,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1176,
																			"src": "1928:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 284,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "1901:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 288,
															"nodeType": "RevertStatement",
															"src": "1894:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:3"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:3"
									},
									"scope": 355,
									"src": "1796:162:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "2347:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 299,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 298,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "2357:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:3"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 296,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 295,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 266,
												"src": "2337:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:3"
									},
									"scope": 355,
									"src": "2293:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "2613:145:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 314,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "2627:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 315,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "IfStatement",
												"src": "2623:91:3",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "2651:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 321,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 320,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "2672:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 326,
															"nodeType": "RevertStatement",
															"src": "2665:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "2742:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 329,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "2723:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:3"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 312,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 311,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 266,
												"src": "2603:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "2570:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:3"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:3"
									},
									"scope": 355,
									"src": "2543:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2975:124:3",
										"statements": [
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 353,
														"src": "2985:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 340,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"id": 342,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 216,
													"src": "3004:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:3"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 344,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "3020:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 345,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "3029:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 349,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "3073:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 350,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "3083:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 348,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "3052:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "EmitStatement",
												"src": "3047:45:3"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2940:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:3"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:3"
									},
									"scope": 355,
									"src": "2912:187:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 356,
							"src": "663:2438:3",
							"usedErrors": [
								221,
								226
							],
							"usedEvents": [
								232
							]
						}
					],
					"src": "102:2999:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1194
						],
						"ERC20": [
							870
						],
						"IERC20": [
							948
						],
						"IERC20Errors": [
							112
						],
						"IERC20Metadata": [
							1128
						]
					},
					"id": 871,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 357,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 949,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 948,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 361,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 1129,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 360,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1128,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 363,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 1195,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 362,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1194,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 208,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 364,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 367,
										"name": "Context",
										"nameLocations": [
											"1428:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1194,
										"src": "1428:7:4"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:4"
								},
								{
									"baseName": {
										"id": 369,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 948,
										"src": "1437:6:4"
									},
									"id": 370,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:4"
								},
								{
									"baseName": {
										"id": 371,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1128,
										"src": "1445:14:4"
									},
									"id": 372,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:4"
								},
								{
									"baseName": {
										"id": 373,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "1461:12:4"
									},
									"id": 374,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 366,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 870,
							"linearizedBaseContracts": [
								870,
								112,
								1128,
								948,
								1194
							],
							"name": "ERC20",
							"nameLocation": "1419:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 870,
									"src": "1480:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1496:7:4",
										"keyType": {
											"id": 375,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 870,
									"src": "1540:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 383,
										"keyName": "account",
										"keyNameLocation": "1556:7:4",
										"keyType": {
											"id": 379,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 382,
											"keyName": "spender",
											"keyNameLocation": "1583:7:4",
											"keyType": {
												"id": 380,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 381,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 386,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 870,
									"src": "1630:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 388,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 870,
									"src": "1665:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 387,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 390,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 870,
									"src": "1691:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 389,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "1952:57:4",
										"statements": [
											{
												"expression": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 398,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "1962:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 399,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1970:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:4"
											},
											{
												"expression": {
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 402,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "1985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 403,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "1995:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:4"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 407,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1908:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1929:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:4"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:4"
									},
									"scope": 870,
									"src": "1896:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1115
									],
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "2134:29:4",
										"statements": [
											{
												"expression": {
													"id": 413,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "2151:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 412,
												"id": 414,
												"nodeType": "Return",
												"src": "2144:12:4"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:4"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2119:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 410,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:4"
									},
									"scope": 870,
									"src": "2074:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "2338:31:4",
										"statements": [
											{
												"expression": {
													"id": 422,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 390,
													"src": "2355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 421,
												"id": 423,
												"nodeType": "Return",
												"src": "2348:14:4"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:4"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2323:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:4"
									},
									"scope": 870,
									"src": "2276:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1127
									],
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "3058:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 430,
												"id": 432,
												"nodeType": "Return",
												"src": "3068:9:4"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:4"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3051:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 428,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:4"
									},
									"scope": 870,
									"src": "3002:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										897
									],
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "3205:36:4",
										"statements": [
											{
												"expression": {
													"id": 440,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 386,
													"src": "3222:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 441,
												"nodeType": "Return",
												"src": "3215:19:4"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:4"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3196:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:4"
									},
									"scope": 870,
									"src": "3144:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										905
									],
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3373:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 451,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "3390:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 453,
													"indexExpression": {
														"id": 452,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "3400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 454,
												"nodeType": "Return",
												"src": "3383:25:4"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:4"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3364:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:4"
									},
									"scope": 870,
									"src": "3299:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										915
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "3685:103:4",
										"statements": [
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "3695:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 466,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 468,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "3711:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 472,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "3743:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 473,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "3750:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 474,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 471,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "3733:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 465,
												"id": 478,
												"nodeType": "Return",
												"src": "3770:11:4"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "3628:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "3640:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:4"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "3679:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:4"
									},
									"scope": 870,
									"src": "3610:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										925
									],
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "3935:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 490,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3952:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 492,
														"indexExpression": {
															"id": 491,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3964:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 494,
													"indexExpression": {
														"id": 493,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "3971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 489,
												"id": 495,
												"nodeType": "Return",
												"src": "3945:34:4"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3865:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3880:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:4"
									},
									"scope": 870,
									"src": "3846:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										935
									],
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "4372:107:4",
										"statements": [
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "4382:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 507,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 509,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "4398:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "4429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "4436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4445:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															761,
															821
														],
														"referencedDeclaration": 761,
														"src": "4420:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 506,
												"id": 519,
												"nodeType": "Return",
												"src": "4461:11:4"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "4310:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "4327:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:4"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "4366:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:4"
									},
									"scope": 870,
									"src": "4293:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										947
									],
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "5132:151:4",
										"statements": [
											{
												"assignments": [
													534
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "5142:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 533,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 535,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "5160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "5198:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "5204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "5213:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "5182:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "5239:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 546,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "5245:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "5249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 544,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "5229:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 532,
												"id": 551,
												"nodeType": "Return",
												"src": "5265:11:4"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5061:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5075:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5087:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5126:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:4"
									},
									"scope": 870,
									"src": "5039:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "5725:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 563,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "5739:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 564,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "5735:86:4",
												"trueBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "5759:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 570,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 569,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "5780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 575,
															"nodeType": "RevertStatement",
															"src": "5773:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "5834:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 592,
												"nodeType": "IfStatement",
												"src": "5830:86:4",
												"trueBody": {
													"id": 591,
													"nodeType": "Block",
													"src": "5852:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 585,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 584,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "5873:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 590,
															"nodeType": "RevertStatement",
															"src": "5866:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 594,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "5933:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 595,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5939:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 596,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "5943:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 593,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "5925:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:4"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5701:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:4"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:4"
									},
									"scope": 870,
									"src": "5656:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "6346:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "6360:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 611,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "6534:362:4",
													"statements": [
														{
															"assignments": [
																622
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 622,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 647,
																	"src": "6548:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 626,
															"initialValue": {
																"baseExpression": {
																	"id": 623,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "6570:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 625,
																"indexExpression": {
																	"id": 624,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "6580:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 627,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 628,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "6617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 637,
															"nodeType": "IfStatement",
															"src": "6599:115:4",
															"trueBody": {
																"id": 636,
																"nodeType": "Block",
																"src": "6624:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 631,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 603,
																					"src": "6674:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 632,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 622,
																					"src": "6680:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 633,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "6693:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 630,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 82,
																				"src": "6649:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 635,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:4"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 638,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 378,
																				"src": "6834:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 640,
																			"indexExpression": {
																				"id": 639,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "6844:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 641,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 622,
																				"src": "6852:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 642,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "6866:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:4"
																}
															]
														}
													]
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "6356:540:4",
												"trueBody": {
													"id": 620,
													"nodeType": "Block",
													"src": "6380:148:4",
													"statements": [
														{
															"expression": {
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 616,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "6496:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 617,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "6512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 649,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "6910:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 650,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 668,
													"nodeType": "Block",
													"src": "7125:206:4",
													"statements": [
														{
															"id": 667,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 661,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 378,
																				"src": "7284:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 663,
																			"indexExpression": {
																				"id": 662,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "7294:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 664,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "7301:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 666,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:4"
																}
															]
														}
													]
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "6906:425:4",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "6928:191:4",
													"statements": [
														{
															"id": 659,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 655,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "7073:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 656,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "7089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 658,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 671,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "7355:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7361:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 670,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "7346:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "EmitStatement",
												"src": "7341:30:4"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "6288:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "6302:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "6314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:4"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:4"
									},
									"scope": 870,
									"src": "6271:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "7777:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "7791:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 686,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "7787:91:4",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "7814:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 692,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 691,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "7835:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "RevertStatement",
															"src": "7828:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 701,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 705,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "7907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "7916:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 700,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:4"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "7736:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "7753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:4"
									},
									"scope": 870,
									"src": "7721:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "8303:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 718,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "8317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 719,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 732,
												"nodeType": "IfStatement",
												"src": "8313:89:4",
												"trueBody": {
													"id": 731,
													"nodeType": "Block",
													"src": "8340:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 725,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 724,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "8361:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 730,
															"nodeType": "RevertStatement",
															"src": "8354:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 734,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "8419:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 735,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "8440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 733,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "8411:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:4"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "8262:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "8279:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:4"
									},
									"scope": 870,
									"src": "8247:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "9063:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "9082:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "9089:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "9098:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 753,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															761,
															821
														],
														"referencedDeclaration": 821,
														"src": "9073:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:4"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "9007:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "9022:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "9039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:4"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:4"
									},
									"scope": 870,
									"src": "8989:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "10047:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "10061:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 774,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 787,
												"nodeType": "IfStatement",
												"src": "10057:89:4",
												"trueBody": {
													"id": 786,
													"nodeType": "Block",
													"src": "10082:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 780,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 779,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "10103:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 785,
															"nodeType": "RevertStatement",
															"src": "10096:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 788,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "10159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "10155:90:4",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "10182:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 795,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 794,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "10203:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 800,
															"nodeType": "RevertStatement",
															"src": "10196:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 803,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "10254:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 806,
															"indexExpression": {
																"id": 804,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "10266:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 807,
														"indexExpression": {
															"id": 805,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "10273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 808,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "10284:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:4"
											},
											{
												"condition": {
													"id": 811,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 770,
													"src": "10303:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 819,
												"nodeType": "IfStatement",
												"src": "10299:76:4",
												"trueBody": {
													"id": 818,
													"nodeType": "Block",
													"src": "10314:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 813,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "10342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 814,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "10349:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 815,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "10358:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 812,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "10333:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 817,
															"nodeType": "EmitStatement",
															"src": "10328:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "9967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "9999:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "10014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 769,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:4"
									},
									"scope": 870,
									"src": "9949:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "10752:388:4",
										"statements": [
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "10762:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 831,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 837,
												"initialValue": {
													"arguments": [
														{
															"id": 834,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "10799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 835,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "10806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 833,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "10789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 838,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "10828:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 840,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 839,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "10824:310:4",
												"trueBody": {
													"id": 866,
													"nodeType": "Block",
													"src": "10867:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 845,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "10885:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 846,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "10904:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 855,
															"nodeType": "IfStatement",
															"src": "10881:130:4",
															"trueBody": {
																"id": 854,
																"nodeType": "Block",
																"src": "10911:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 849,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10963:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 850,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 832,
																					"src": "10972:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 851,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 828,
																					"src": "10990:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 848,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "10936:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 853,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:4"
																	}
																]
															}
														},
														{
															"id": 865,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 857,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 824,
																				"src": "11061:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 858,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 826,
																				"src": "11068:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 859,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 832,
																					"src": "11077:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 860,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 828,
																					"src": "11096:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 856,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				761,
																				821
																			],
																			"referencedDeclaration": 821,
																			"src": "11052:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 864,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "10688:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "10703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "10720:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:4"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:4"
									},
									"scope": 870,
									"src": "10663:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 871,
							"src": "1401:9741:4",
							"usedErrors": [
								82,
								87,
								92,
								101,
								106,
								111
							],
							"usedEvents": [
								882,
								891
							]
						}
					],
					"src": "105:11038:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							948
						]
					},
					"id": 949,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 872,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 873,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 948,
							"linearizedBaseContracts": [
								948
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 882,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 891,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 897,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 948,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 905,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 948,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 912,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 948,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 948,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 932,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 948,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 948,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 949,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								882,
								891
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
					"exportedSymbols": {
						"ECDSA": [
							2192
						],
						"EIP712": [
							2419
						],
						"ERC20": [
							870
						],
						"ERC20Permit": [
							1102
						],
						"IERC20Permit": [
							1164
						],
						"Nonces": [
							1262
						]
					},
					"id": 1103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 950,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 952,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1103,
							"sourceUnit": 1165,
							"src": "148:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 951,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "156:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 954,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1103,
							"sourceUnit": 871,
							"src": "197:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 953,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 870,
										"src": "205:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "../../../utils/cryptography/ECDSA.sol",
							"id": 956,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1103,
							"sourceUnit": 2193,
							"src": "233:60:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 955,
										"name": "ECDSA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2192,
										"src": "241:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"file": "../../../utils/cryptography/EIP712.sol",
							"id": 958,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1103,
							"sourceUnit": 2420,
							"src": "294:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 957,
										"name": "EIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2419,
										"src": "302:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Nonces.sol",
							"file": "../../../utils/Nonces.sol",
							"id": 960,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1103,
							"sourceUnit": 1263,
							"src": "357:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 959,
										"name": "Nonces",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "365:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 962,
										"name": "ERC20",
										"nameLocations": [
											"929:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 870,
										"src": "929:5:6"
									},
									"id": 963,
									"nodeType": "InheritanceSpecifier",
									"src": "929:5:6"
								},
								{
									"baseName": {
										"id": 964,
										"name": "IERC20Permit",
										"nameLocations": [
											"936:12:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "936:12:6"
									},
									"id": 965,
									"nodeType": "InheritanceSpecifier",
									"src": "936:12:6"
								},
								{
									"baseName": {
										"id": 966,
										"name": "EIP712",
										"nameLocations": [
											"950:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2419,
										"src": "950:6:6"
									},
									"id": 967,
									"nodeType": "InheritanceSpecifier",
									"src": "950:6:6"
								},
								{
									"baseName": {
										"id": 968,
										"name": "Nonces",
										"nameLocations": [
											"958:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "958:6:6"
									},
									"id": 969,
									"nodeType": "InheritanceSpecifier",
									"src": "958:6:6"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 961,
								"nodeType": "StructuredDocumentation",
								"src": "408:487:6",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 1102,
							"linearizedBaseContracts": [
								1102,
								1262,
								2419,
								70,
								1164,
								870,
								112,
								1128,
								948,
								1194
							],
							"name": "ERC20Permit",
							"nameLocation": "914:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 974,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "996:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1102,
									"src": "971:146:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 970,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "971:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 972,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1032:84:6",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 971,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1022:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 973,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1022:95:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "1124:52:6",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 979,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "1187:23:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1219:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1211:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:18:6"
									},
									"src": "1181:48:6"
								},
								{
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "1235:45:6",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 986,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "1291:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1320:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1312:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1336:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1328:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:31:6"
									},
									"src": "1285:58:6"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "1624:2:6",
										"statements": []
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "1349:220:6",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 997,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 992,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 989,
													"src": "1613:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1619:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 994,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 991,
												"name": "EIP712",
												"nameLocations": [
													"1606:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2419,
												"src": "1606:6:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1606:17:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1600:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1586:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1586:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:20:6"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1624:0:6"
									},
									"scope": 1102,
									"src": "1574:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1149
									],
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "1869:483:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1015,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1883:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1889:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1883:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1017,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "1901:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1883:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "IfStatement",
												"src": "1879:97:6",
												"trueBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "1911:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1020,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1006,
																		"src": "1956:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1019,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "1932:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1932:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1022,
															"nodeType": "RevertStatement",
															"src": "1925:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1026
												],
												"declarations": [
													{
														"constant": false,
														"id": 1026,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "1994:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1073,
														"src": "1986:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1025,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1986:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1040,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1030,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "2028:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1031,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "2045:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1032,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "2052:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1033,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "2061:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1035,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "2078:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1034,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "2068:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2068:16:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1037,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "2086:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1028,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2017:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2021:6:6",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2017:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2017:78:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1027,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2007:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2007:89:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1986:110:6"
											},
											{
												"assignments": [
													1042
												],
												"declarations": [
													{
														"constant": false,
														"id": 1042,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "2115:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1073,
														"src": "2107:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1041,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2107:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1046,
												"initialValue": {
													"arguments": [
														{
															"id": 1044,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "2139:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1043,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2352,
														"src": "2122:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2107:43:6"
											},
											{
												"assignments": [
													1048
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "2169:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1073,
														"src": "2161:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1047,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2161:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": {
													"arguments": [
														{
															"id": 1051,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "2192:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1052,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "2198:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1053,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "2201:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1054,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "2204:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1049,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "2178:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$2192_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2184:7:6",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2142,
														"src": "2178:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2161:45:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1057,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "2220:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1058,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "2230:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2220:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1066,
												"nodeType": "IfStatement",
												"src": "2216:88:6",
												"trueBody": {
													"id": 1065,
													"nodeType": "Block",
													"src": "2237:67:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1061,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "2279:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1062,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "2287:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1060,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "2258:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2258:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1064,
															"nodeType": "RevertStatement",
															"src": "2251:42:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1068,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "2323:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "2330:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1070,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "2339:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1067,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															761,
															821
														],
														"referencedDeclaration": 761,
														"src": "2314:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "2314:31:6"
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "1632:43:6",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1689:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1713:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1705:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1736:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1728:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1761:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1753:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1784:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1776:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1808:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1802:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1007,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1802:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1827:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1819:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1009,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1846:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1838:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:158:6"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:0:6"
									},
									"scope": 1102,
									"src": "1680:672:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1157,
										1221
									],
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "2506:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1087,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "2536:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1085,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2523:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$1102_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2529:6:6",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1221,
														"src": "2523:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2523:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1084,
												"id": 1089,
												"nodeType": "Return",
												"src": "2516:26:6"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "2358:43:6",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "2415:6:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1081,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1079,
												"name": "IERC20Permit",
												"nameLocations": [
													"2466:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1164,
												"src": "2466:12:6"
											},
											{
												"id": 1080,
												"name": "Nonces",
												"nameLocations": [
													"2480:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1262,
												"src": "2480:6:6"
											}
										],
										"src": "2457:30:6"
									},
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2430:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "2422:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:15:6"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "2497:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2497:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:9:6"
									},
									"scope": 1102,
									"src": "2406:143:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1163
									],
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "2724:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1097,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2315,
														"src": "2741:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2741:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1099,
												"nodeType": "Return",
												"src": "2734:27:6"
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2555:43:6",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2665:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2681:2:6"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "2715:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1094,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:9:6"
									},
									"scope": 1102,
									"src": "2656:112:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 1103,
							"src": "896:1874:6",
							"usedErrors": [
								82,
								87,
								92,
								101,
								106,
								111,
								979,
								986,
								1204,
								1276,
								1278,
								1855,
								1860,
								1865
							],
							"usedEvents": [
								50,
								882,
								891
							]
						}
					],
					"src": "122:2649:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							948
						],
						"IERC20Metadata": [
							1128
						]
					},
					"id": 1129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1106,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1129,
							"sourceUnit": 949,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1105,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 948,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1108,
										"name": "IERC20",
										"nameLocations": [
											"305:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 948,
										"src": "305:6:7"
									},
									"id": 1109,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1107,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:7",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1128,
							"linearizedBaseContracts": [
								1128,
								948
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:7"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "416:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1112,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:7"
									},
									"scope": 1128,
									"src": "377:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:7"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:7"
									},
									"scope": 1128,
									"src": "498:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:7"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "673:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1124,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:7"
									},
									"scope": 1128,
									"src": "630:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1129,
							"src": "277:405:7",
							"usedErrors": [],
							"usedEvents": [
								882,
								891
							]
						}
					],
					"src": "125:558:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1164
						]
					},
					"id": 1165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1131,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:8",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 1164,
							"linearizedBaseContracts": [
								1164
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:8",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 1149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "3022:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "3045:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "3070:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "3093:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "3119:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1141,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "3136:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "3155:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:8"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:8"
									},
									"scope": 1164,
									"src": "2997:183:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:8",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3501:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:8"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3539:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:8"
									},
									"scope": 1164,
									"src": "3485:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:8",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:8"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "3791:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1160,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:8"
									},
									"scope": 1164,
									"src": "3740:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1165,
							"src": "2113:1689:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1194
						]
					},
					"id": 1195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1167,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1194,
							"linearizedBaseContracts": [
								1194
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1172,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1171,
												"id": 1174,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1194,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1181,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1180,
												"id": 1183,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1194,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1189,
												"id": 1191,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1194,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1195,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Nonces.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Nonces.sol",
					"exportedSymbols": {
						"Nonces": [
							1262
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1197,
								"nodeType": "StructuredDocumentation",
								"src": "125:83:10",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 1262,
							"linearizedBaseContracts": [
								1262
							],
							"name": "Nonces",
							"nameLocation": "227:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "240:90:10",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 1204,
									"name": "InvalidAccountNonce",
									"nameLocation": "341:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "369:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "361:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "386:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "378:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:39:10"
									},
									"src": "335:65:10"
								},
								{
									"constant": false,
									"id": 1208,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "450:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "406:51:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1207,
										"keyName": "account",
										"keyNameLocation": "422:7:10",
										"keyType": {
											"id": 1205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "414:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "406:35:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1206,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "433:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "607:38:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1216,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "624:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1218,
													"indexExpression": {
														"id": 1217,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "632:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "624:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1215,
												"id": 1219,
												"nodeType": "Return",
												"src": "617:21:10"
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "464:69:10",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "547:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "562:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "554:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:15:10"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "598:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:9:10"
									},
									"scope": 1262,
									"src": "538:107:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "828:326:10",
										"statements": [
											{
												"id": 1234,
												"nodeType": "UncheckedBlock",
												"src": "1031:117:10",
												"statements": [
													{
														"expression": {
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1121:16:10",
															"subExpression": {
																"baseExpression": {
																	"id": 1229,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "1121:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1231,
																"indexExpression": {
																	"id": 1230,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "1129:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1121:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1228,
														"id": 1233,
														"nodeType": "Return",
														"src": "1114:23:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "651:103:10",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "768:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "786:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "778:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:15:10"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "819:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:9:10"
									},
									"scope": 1262,
									"src": "759:395:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "1338:149:10",
										"statements": [
											{
												"assignments": [
													1245
												],
												"declarations": [
													{
														"constant": false,
														"id": 1245,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "1356:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "1348:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1244,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1348:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1249,
												"initialValue": {
													"arguments": [
														{
															"id": 1247,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "1376:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1246,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "1366:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1366:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1348:34:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1250,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "1396:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1251,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "1405:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1396:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1259,
												"nodeType": "IfStatement",
												"src": "1392:89:10",
												"trueBody": {
													"id": 1258,
													"nodeType": "Block",
													"src": "1414:67:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1254,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "1455:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1255,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "1462:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1253,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "1435:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1435:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1257,
															"nodeType": "RevertStatement",
															"src": "1428:42:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "1160:100:10",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "1274:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1299:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1291:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1314:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1306:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:30:10"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:0:10"
									},
									"scope": 1262,
									"src": "1265:222:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1263,
							"src": "209:1280:10",
							"usedErrors": [
								1204
							],
							"usedEvents": []
						}
					],
					"src": "99:1391:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							1268
						],
						"ShortStrings": [
							1479
						],
						"StorageSlot": [
							1589
						]
					},
					"id": 1480,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1266,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1480,
							"sourceUnit": 1590,
							"src": "132:46:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1265,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1589,
										"src": "140:11:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 1268,
							"name": "ShortString",
							"nameLocation": "353:11:11",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:11",
							"underlyingType": {
								"id": 1267,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:11",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1269,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:11",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1479,
							"linearizedBaseContracts": [
								1479
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1272,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 1479,
									"src": "1345:111:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1270,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 1271,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 1276,
									"name": "StringTooLong",
									"nameLocation": "1469:13:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "1483:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1273,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:11"
									},
									"src": "1463:32:11"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 1278,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:11"
									},
									"src": "1500:27:11"
								},
								{
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "1786:208:11",
										"statements": [
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1321,
														"src": "1796:17:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1287,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1293,
												"initialValue": {
													"arguments": [
														{
															"id": 1291,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "1822:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1289,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:11",
															"typeDescriptions": {}
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1294,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "1840:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1303,
												"nodeType": "IfStatement",
												"src": "1836:72:11",
												"trueBody": {
													"id": 1302,
													"nodeType": "Block",
													"src": "1858:50:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1299,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1281,
																		"src": "1893:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1298,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "1879:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1301,
															"nodeType": "RevertStatement",
															"src": "1872:25:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1312,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "1965:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1311,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 1310,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1308,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 1315,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1288,
																			"src": "1974:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1306,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1304,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "1924:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1268_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:11",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1268_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 1286,
												"id": 1320,
												"nodeType": "Return",
												"src": "1917:70:11"
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:11",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "1731:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:11"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "1773:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1284,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1283,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "1773:11:11"
													},
													"referencedDeclaration": 1268,
													"src": "1773:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:11"
									},
									"scope": 1479,
									"src": "1708:286:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "2152:331:11",
										"statements": [
											{
												"assignments": [
													1332
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1347,
														"src": "2162:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1336,
												"initialValue": {
													"arguments": [
														{
															"id": 1334,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "2187:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																"typeString": "ShortString"
															}
														],
														"id": 1333,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "2176:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1268_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:11"
											},
											{
												"assignments": [
													1338
												],
												"declarations": [
													{
														"constant": false,
														"id": 1338,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1347,
														"src": "2280:17:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1337,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1343,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 1339,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:11"
											},
											{
												"AST": {
													"nativeSrc": "2376:81:11",
													"nodeType": "YulBlock",
													"src": "2376:81:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2397:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2402:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:11"
																},
																"nativeSrc": "2390:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2390:16:11"
															},
															"nativeSrc": "2390:16:11",
															"nodeType": "YulExpressionStatement",
															"src": "2390:16:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2430:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2435:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:11"
																		},
																		"nativeSrc": "2426:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:14:11"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2442:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2442:4:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2419:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:11"
																},
																"nativeSrc": "2419:28:11",
																"nodeType": "YulFunctionCall",
																"src": "2419:28:11"
															},
															"nativeSrc": "2419:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "2419:28:11"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1332,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:3:11",
														"valueSize": 1
													},
													{
														"declaration": 1326,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:4:11",
														"valueSize": 1
													},
													{
														"declaration": 1338,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:3:11",
														"valueSize": 1
													},
													{
														"declaration": 1338,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:3:11",
														"valueSize": 1
													}
												],
												"id": 1344,
												"nodeType": "InlineAssembly",
												"src": "2367:90:11"
											},
											{
												"expression": {
													"id": 1345,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "2473:3:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1330,
												"id": 1346,
												"nodeType": "Return",
												"src": "2466:10:11"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:11",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "2096:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1324,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "2096:11:11"
													},
													"referencedDeclaration": 1268,
													"src": "2096:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:11"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "2137:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1328,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:11"
									},
									"scope": 1479,
									"src": "2078:405:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "2625:175:11",
										"statements": [
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2643:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1379,
														"src": "2635:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1368,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1363,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "2679:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 1361,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "2660:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1268_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2672:6:11",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2660:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1268_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:24:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2652:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1359,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2652:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2652:33:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2652:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:57:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1369,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "2706:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2715:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2706:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1376,
												"nodeType": "IfStatement",
												"src": "2702:69:11",
												"trueBody": {
													"id": 1375,
													"nodeType": "Block",
													"src": "2719:52:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1372,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "2740:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2740:20:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1374,
															"nodeType": "RevertStatement",
															"src": "2733:27:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1377,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "2787:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1378,
												"nodeType": "Return",
												"src": "2780:13:11"
											}
										]
									},
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "2489:61:11",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2564:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2587:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "2575:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1351,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1350,
														"name": "ShortString",
														"nameLocations": [
															"2575:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "2575:11:11"
													},
													"referencedDeclaration": 1268,
													"src": "2575:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:11"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "2616:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:9:11"
									},
									"scope": 1479,
									"src": "2555:245:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "3023:231:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1393,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "3043:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3037:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1391,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3037:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3037:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3037:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3037:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1417,
													"nodeType": "Block",
													"src": "3121:127:11",
													"statements": [
														{
															"expression": {
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1406,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1385,
																				"src": "3161:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 1403,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1589,
																				"src": "3135:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1589_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3147:13:11",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1566,
																			"src": "3135:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1497_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:32:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$1497_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3168:5:11",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1496,
																	"src": "3135:38:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "3176:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3135:46:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 1411,
															"nodeType": "ExpressionStatement",
															"src": "3135:46:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1414,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1272,
																		"src": "3219:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1412,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "3202:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1268_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3214:4:11",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3202:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1268_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1390,
															"id": 1416,
															"nodeType": "Return",
															"src": "3195:42:11"
														}
													]
												},
												"id": 1418,
												"nodeType": "IfStatement",
												"src": "3033:215:11",
												"trueBody": {
													"id": 1402,
													"nodeType": "Block",
													"src": "3063:52:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1399,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1383,
																		"src": "3098:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1398,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "3084:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1268_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:20:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1390,
															"id": 1401,
															"nodeType": "Return",
															"src": "3077:27:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "2806:103:11",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2923:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2963:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "2949:19:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1382,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2949:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2985:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "2970:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1384,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2970:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:43:11"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "3010:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1387,
														"name": "ShortString",
														"nameLocations": [
															"3010:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "3010:11:11"
													},
													"referencedDeclaration": 1268,
													"src": "3010:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:13:11"
									},
									"scope": 1479,
									"src": "2914:340:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "3494:158:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1433,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "3527:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1431,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "3508:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1268_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3520:6:11",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3508:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1268_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:25:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1435,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3537:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3508:46:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1444,
													"nodeType": "Block",
													"src": "3609:37:11",
													"statements": [
														{
															"expression": {
																"id": 1442,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "3630:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 1430,
															"id": 1443,
															"nodeType": "Return",
															"src": "3623:12:11"
														}
													]
												},
												"id": 1445,
												"nodeType": "IfStatement",
												"src": "3504:142:11",
												"trueBody": {
													"id": 1441,
													"nodeType": "Block",
													"src": "3556:47:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1438,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "3586:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1437,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "3577:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1268_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:15:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1430,
															"id": 1440,
															"nodeType": "Return",
															"src": "3570:22:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "3260:120:11",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3394:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3427:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "3415:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1422,
														"name": "ShortString",
														"nameLocations": [
															"3415:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "3415:11:11"
													},
													"referencedDeclaration": 1268,
													"src": "3415:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3449:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "3434:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:41:11"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "3479:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1428,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3479:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:15:11"
									},
									"scope": 1479,
									"src": "3385:267:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "4132:174:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1460,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "4165:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1458,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "4146:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1268_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4158:6:11",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4146:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1268_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4146:25:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1462,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "4175:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4146:46:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1475,
													"nodeType": "Block",
													"src": "4249:51:11",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1471,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1453,
																			"src": "4276:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 1470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1469,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:12:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4270:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1457,
															"id": 1474,
															"nodeType": "Return",
															"src": "4263:26:11"
														}
													]
												},
												"id": 1476,
												"nodeType": "IfStatement",
												"src": "4142:158:11",
												"trueBody": {
													"id": 1468,
													"nodeType": "Block",
													"src": "4194:49:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1465,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "4226:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1464,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "4215:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1268_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4215:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1457,
															"id": 1467,
															"nodeType": "Return",
															"src": "4208:24:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "3658:364:11",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4036:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "4059:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1450,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1449,
														"name": "ShortString",
														"nameLocations": [
															"4059:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "4059:11:11"
													},
													"referencedDeclaration": 1268,
													"src": "4059:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4093:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "4078:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4078:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:41:11"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "4123:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4122:9:11"
									},
									"scope": 1479,
									"src": "4027:279:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1480,
							"src": "1255:3053:11",
							"usedErrors": [
								1276,
								1278
							],
							"usedEvents": []
						}
					],
					"src": "106:4203:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1589
						]
					},
					"id": 1590,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1481,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1482,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:12",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1589,
							"linearizedBaseContracts": [
								1589
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1485,
									"members": [
										{
											"constant": false,
											"id": 1484,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "1300:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1483,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:12",
									"nodeType": "StructDefinition",
									"scope": 1589,
									"src": "1271:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1488,
									"members": [
										{
											"constant": false,
											"id": 1487,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1488,
											"src": "1355:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1486,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:12",
									"nodeType": "StructDefinition",
									"scope": 1589,
									"src": "1326:46:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1491,
									"members": [
										{
											"constant": false,
											"id": 1490,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1491,
											"src": "1407:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1489,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:12",
									"nodeType": "StructDefinition",
									"scope": 1589,
									"src": "1378:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1494,
									"members": [
										{
											"constant": false,
											"id": 1493,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1494,
											"src": "1462:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1492,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:12",
									"nodeType": "StructDefinition",
									"scope": 1589,
									"src": "1433:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1497,
									"members": [
										{
											"constant": false,
											"id": 1496,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1497,
											"src": "1516:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1495,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:12",
									"nodeType": "StructDefinition",
									"scope": 1589,
									"src": "1488:47:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1500,
									"members": [
										{
											"constant": false,
											"id": 1499,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1500,
											"src": "1568:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1498,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:12",
									"nodeType": "StructDefinition",
									"scope": 1589,
									"src": "1541:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "1768:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:12",
													"nodeType": "YulBlock",
													"src": "1830:38:12",
													"statements": [
														{
															"nativeSrc": "1844:14:12",
															"nodeType": "YulAssignment",
															"src": "1844:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:12",
																"nodeType": "YulIdentifier",
																"src": "1854:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1507,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1503,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:12",
														"valueSize": 1
													}
												],
												"id": 1509,
												"nodeType": "InlineAssembly",
												"src": "1821:47:12"
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:12",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1708:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:12"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1745:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1485_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1506,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1505,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1485,
														"src": "1745:11:12"
													},
													"referencedDeclaration": 1485,
													"src": "1745:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1485_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:12"
									},
									"scope": 1589,
									"src": "1684:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "2056:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:12",
													"nodeType": "YulBlock",
													"src": "2118:38:12",
													"statements": [
														{
															"nativeSrc": "2132:14:12",
															"nodeType": "YulAssignment",
															"src": "2132:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:12",
																"nodeType": "YulIdentifier",
																"src": "2142:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1518,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1514,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:12",
														"valueSize": 1
													}
												],
												"id": 1520,
												"nodeType": "InlineAssembly",
												"src": "2109:47:12"
											}
										]
									},
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:12",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "1996:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:12"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "2033:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1488_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1517,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1516,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1488,
														"src": "2033:11:12"
													},
													"referencedDeclaration": 1488,
													"src": "2033:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1488_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:12"
									},
									"scope": 1589,
									"src": "1972:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "2344:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:12",
													"nodeType": "YulBlock",
													"src": "2406:38:12",
													"statements": [
														{
															"nativeSrc": "2420:14:12",
															"nodeType": "YulAssignment",
															"src": "2420:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:12",
																"nodeType": "YulIdentifier",
																"src": "2430:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1529,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1525,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:12",
														"valueSize": 1
													}
												],
												"id": 1531,
												"nodeType": "InlineAssembly",
												"src": "2397:47:12"
											}
										]
									},
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:12",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "2284:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1524,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:12"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "2321:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1491_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1528,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1527,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1491,
														"src": "2321:11:12"
													},
													"referencedDeclaration": 1491,
													"src": "2321:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1491_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:12"
									},
									"scope": 1589,
									"src": "2260:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1543,
										"nodeType": "Block",
										"src": "2632:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:12",
													"nodeType": "YulBlock",
													"src": "2694:38:12",
													"statements": [
														{
															"nativeSrc": "2708:14:12",
															"nodeType": "YulAssignment",
															"src": "2708:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:12",
																"nodeType": "YulIdentifier",
																"src": "2718:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1540,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1536,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:12",
														"valueSize": 1
													}
												],
												"id": 1542,
												"nodeType": "InlineAssembly",
												"src": "2685:47:12"
											}
										]
									},
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:12",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2572:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1535,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:12"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2609:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1494_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1539,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1538,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1494,
														"src": "2609:11:12"
													},
													"referencedDeclaration": 1494,
													"src": "2609:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1494_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:12"
									},
									"scope": 1589,
									"src": "2548:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "2917:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:12",
													"nodeType": "YulBlock",
													"src": "2979:38:12",
													"statements": [
														{
															"nativeSrc": "2993:14:12",
															"nodeType": "YulAssignment",
															"src": "2993:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:12",
																"nodeType": "YulIdentifier",
																"src": "3003:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1551,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1547,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:12",
														"valueSize": 1
													}
												],
												"id": 1553,
												"nodeType": "InlineAssembly",
												"src": "2970:47:12"
											}
										]
									},
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:12",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2858:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1546,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:12"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2895:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1497_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1550,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1549,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1497,
														"src": "2895:10:12"
													},
													"referencedDeclaration": 1497,
													"src": "2895:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1497_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:12"
									},
									"scope": 1589,
									"src": "2835:188:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "3225:112:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:12",
													"nodeType": "YulBlock",
													"src": "3287:44:12",
													"statements": [
														{
															"nativeSrc": "3301:20:12",
															"nodeType": "YulAssignment",
															"src": "3301:20:12",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:12",
																"nodeType": "YulIdentifier",
																"src": "3311:10:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1562,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1558,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:12",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1564,
												"nodeType": "InlineAssembly",
												"src": "3278:53:12"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:12",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "3158:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:12"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "3203:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1497_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1561,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1560,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1497,
														"src": "3203:10:12"
													},
													"referencedDeclaration": 1497,
													"src": "3203:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1497_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:12"
									},
									"scope": 1589,
									"src": "3135:202:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "3513:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:12",
													"nodeType": "YulBlock",
													"src": "3575:38:12",
													"statements": [
														{
															"nativeSrc": "3589:14:12",
															"nodeType": "YulAssignment",
															"src": "3589:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:12",
																"nodeType": "YulIdentifier",
																"src": "3599:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1573,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1569,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:12",
														"valueSize": 1
													}
												],
												"id": 1575,
												"nodeType": "InlineAssembly",
												"src": "3566:47:12"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:12",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "3455:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1568,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:12"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "3492:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1500_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1572,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1571,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1500,
														"src": "3492:9:12"
													},
													"referencedDeclaration": 1500,
													"src": "3492:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1500_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:12"
									},
									"scope": 1589,
									"src": "3433:186:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "3816:112:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:12",
													"nodeType": "YulBlock",
													"src": "3878:44:12",
													"statements": [
														{
															"nativeSrc": "3892:20:12",
															"nodeType": "YulAssignment",
															"src": "3892:20:12",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:12",
																"nodeType": "YulIdentifier",
																"src": "3902:10:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1584,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1580,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:12",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1586,
												"nodeType": "InlineAssembly",
												"src": "3869:53:12"
											}
										]
									},
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:12",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "3751:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:12"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "3795:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1500_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1582,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1500,
														"src": "3795:9:12"
													},
													"referencedDeclaration": 1500,
													"src": "3795:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1500_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:12"
									},
									"scope": 1589,
									"src": "3729:199:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1590,
							"src": "1245:2685:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3547
						],
						"SignedMath": [
							3652
						],
						"Strings": [
							1844
						]
					},
					"id": 1845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1591,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1593,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 3548,
							"src": "127:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1592,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3547,
										"src": "135:4:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1595,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 3653,
							"src": "165:49:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1594,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3652,
										"src": "173:10:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1596,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1844,
							"linearizedBaseContracts": [
								1844
							],
							"name": "Strings",
							"nameLocation": "259:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1599,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "273:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1597,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1598,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1602,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "335:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1600,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1601,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:13",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1609,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "505:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "520:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:13"
									},
									"src": "470:66:13"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "708:627:13",
										"statements": [
											{
												"id": 1655,
												"nodeType": "UncheckedBlock",
												"src": "718:611:13",
												"statements": [
													{
														"assignments": [
															1618
														],
														"declarations": [
															{
																"constant": false,
																"id": 1618,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1655,
																"src": "742:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1617,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1625,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1621,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "770:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1619,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3547,
																		"src": "759:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3547_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:13",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3367,
																	"src": "759:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:13"
													},
													{
														"assignments": [
															1627
														],
														"declarations": [
															{
																"constant": false,
																"id": 1627,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1655,
																"src": "794:20:13",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1626,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1632,
														"initialValue": {
															"arguments": [
																{
																	"id": 1630,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "828:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1628,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:13"
													},
													{
														"assignments": [
															1634
														],
														"declarations": [
															{
																"constant": false,
																"id": 1634,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:13",
																"nodeType": "VariableDeclaration",
																"scope": 1655,
																"src": "849:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1633,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1635,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:13"
													},
													{
														"AST": {
															"nativeSrc": "930:67:13",
															"nodeType": "YulBlock",
															"src": "930:67:13",
															"statements": [
																{
																	"nativeSrc": "948:35:13",
																	"nodeType": "YulAssignment",
																	"src": "948:35:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:13",
																						"nodeType": "YulLiteral",
																						"src": "971:2:13",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:13"
																				},
																				"nativeSrc": "967:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:13"
																		},
																		"nativeSrc": "955:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:13"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:13"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1627,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1618,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1634,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:13",
																"valueSize": 1
															}
														],
														"id": 1636,
														"nodeType": "InlineAssembly",
														"src": "921:76:13"
													},
													{
														"body": {
															"id": 1651,
															"nodeType": "Block",
															"src": "1023:269:13",
															"statements": [
																{
																	"expression": {
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:13",
																		"subExpression": {
																			"id": 1638,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1634,
																			"src": "1041:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1640,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:13"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:13",
																		"nodeType": "YulBlock",
																		"src": "1124:86:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:13",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:13",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:13"
																									},
																									"nativeSrc": "1164:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:13"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:13"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:13"
																							},
																							"nativeSrc": "1159:32:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:13"
																					},
																					"nativeSrc": "1146:46:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:13"
																				},
																				"nativeSrc": "1146:46:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:13"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1599,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1634,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1612,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:13",
																			"valueSize": 1
																		}
																	],
																	"id": 1641,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:13"
																},
																{
																	"expression": {
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1612,
																			"src": "1227:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1645,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1646,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1612,
																			"src": "1260:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1650,
																	"nodeType": "IfStatement",
																	"src": "1256:21:13",
																	"trueBody": {
																		"id": 1649,
																		"nodeType": "Break",
																		"src": "1272:5:13"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1652,
														"nodeType": "WhileStatement",
														"src": "1010:282:13"
													},
													{
														"expression": {
															"id": 1653,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "1312:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1616,
														"id": 1654,
														"nodeType": "Return",
														"src": "1305:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "655:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:13"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "693:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1614,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:13"
									},
									"scope": 1844,
									"src": "637:698:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "1511:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1668,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "1542:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:13",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1677,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1660,
																			"src": "1588:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1675,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3652,
																			"src": "1573:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3652_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:13",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3651,
																		"src": "1573:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1674,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "1564:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1665,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 1667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:13",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1664,
												"id": 1681,
												"nodeType": "Return",
												"src": "1521:75:13"
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:13",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "1459:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1659,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:13"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "1496:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1662,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:13"
									},
									"scope": 1844,
									"src": "1435:168:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "1782:100:13",
										"statements": [
											{
												"id": 1701,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1692,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1686,
																	"src": "1835:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1695,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1686,
																				"src": "1854:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1693,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3547,
																				"src": "1842:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3547_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:13",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3489,
																			"src": "1842:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1691,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1703,
																	1786,
																	1806
																],
																"referencedDeclaration": 1786,
																"src": "1823:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1690,
														"id": 1700,
														"nodeType": "Return",
														"src": "1816:49:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1729:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:13"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1767:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1688,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:13"
									},
									"scope": 1844,
									"src": "1708:174:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "2095:435:13",
										"statements": [
											{
												"assignments": [
													1714
												],
												"declarations": [
													{
														"constant": false,
														"id": 1714,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1785,
														"src": "2105:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1716,
												"initialValue": {
													"id": 1715,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1706,
													"src": "2126:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:13"
											},
											{
												"assignments": [
													1718
												],
												"declarations": [
													{
														"constant": false,
														"id": 1718,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1785,
														"src": "2141:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1717,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1727,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1722,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "2177:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1719,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:13"
											},
											{
												"expression": {
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1728,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "2198:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1730,
														"indexExpression": {
															"hexValue": "30",
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:13"
											},
											{
												"expression": {
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1734,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "2223:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1736,
														"indexExpression": {
															"hexValue": "31",
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1739,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:13"
											},
											{
												"body": {
													"id": 1768,
													"nodeType": "Block",
													"src": "2293:95:13",
													"statements": [
														{
															"expression": {
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1754,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1718,
																		"src": "2307:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1756,
																	"indexExpression": {
																		"id": 1755,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1741,
																		"src": "2314:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1757,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "2319:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1761,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1758,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1714,
																			"src": "2330:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1763,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:13"
														},
														{
															"expression": {
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1764,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "2361:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1767,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1748,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "2281:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1769,
												"initializationExpression": {
													"assignments": [
														1741
													],
													"declarations": [
														{
															"constant": false,
															"id": 1741,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1769,
															"src": "2253:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1740,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1747,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1743,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "2269:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:13"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:13",
														"subExpression": {
															"id": 1751,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "2290:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1753,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1770,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "2401:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1779,
												"nodeType": "IfStatement",
												"src": "2397:96:13",
												"trueBody": {
													"id": 1778,
													"nodeType": "Block",
													"src": "2418:75:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1774,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "2468:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1775,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "2475:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1773,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "2439:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1777,
															"nodeType": "RevertStatement",
															"src": "2432:50:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1782,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "2516:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1780,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1784,
												"nodeType": "Return",
												"src": "2502:21:13"
											}
										]
									},
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "2026:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "2041:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:13"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "2080:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1710,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:13"
									},
									"scope": 1844,
									"src": "2005:525:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "2762:75:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1799,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1789,
																			"src": "2807:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1797,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1795,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1802,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "2815:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1794,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1703,
															1786,
															1806
														],
														"referencedDeclaration": 1786,
														"src": "2779:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1793,
												"id": 1804,
												"nodeType": "Return",
												"src": "2772:58:13"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:13",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "2710:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:13"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "2747:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:13"
									},
									"scope": 1844,
									"src": "2689:148:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "2992:104:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1818,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "3015:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1816,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1823,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1811,
																		"src": "3034:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1821,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1830,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1809,
																			"src": "3063:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1828,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1827,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1836,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1811,
																			"src": "3086:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1834,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1833,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1841,
												"nodeType": "Return",
												"src": "3002:87:13"
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:13",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "2929:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1808,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "2946:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:13"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "2986:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1813,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:13"
									},
									"scope": 1844,
									"src": "2914:182:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1845,
							"src": "251:2847:13",
							"usedErrors": [
								1609
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							2192
						]
					},
					"id": 2193,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1847,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:14",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 2192,
							"linearizedBaseContracts": [
								2192
							],
							"name": "ECDSA",
							"nameLocation": "352:5:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1852,
									"members": [
										{
											"id": 1848,
											"name": "NoError",
											"nameLocation": "392:7:14",
											"nodeType": "EnumValue",
											"src": "392:7:14"
										},
										{
											"id": 1849,
											"name": "InvalidSignature",
											"nameLocation": "409:16:14",
											"nodeType": "EnumValue",
											"src": "409:16:14"
										},
										{
											"id": 1850,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:14",
											"nodeType": "EnumValue",
											"src": "435:22:14"
										},
										{
											"id": 1851,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:14",
											"nodeType": "EnumValue",
											"src": "467:17:14"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:14",
									"nodeType": "EnumDefinition",
									"src": "364:126:14"
								},
								{
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:14",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1855,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:14"
									},
									"src": "564:30:14"
								},
								{
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:14",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1860,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "699:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:14"
									},
									"src": "665:50:14"
								},
								{
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:14",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1865,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "840:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1862,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:14"
									},
									"src": "811:40:14"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "2242:653:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1880,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "2256:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1915,
													"nodeType": "Block",
													"src": "2781:108:14",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1904,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1902,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1906,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1852,
																			"src": "2815:12:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1852_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:14",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1850,
																		"src": "2815:35:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1852",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1910,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1870,
																					"src": "2860:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:14",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1908,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1913,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1879,
															"id": 1914,
															"nodeType": "Return",
															"src": "2795:83:14"
														}
													]
												},
												"id": 1916,
												"nodeType": "IfStatement",
												"src": "2252:637:14",
												"trueBody": {
													"id": 1901,
													"nodeType": "Block",
													"src": "2280:495:14",
													"statements": [
														{
															"assignments": [
																1885
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1885,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 1901,
																	"src": "2294:9:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1884,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1886,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:14"
														},
														{
															"assignments": [
																1888
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1888,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 1901,
																	"src": "2317:9:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1887,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1889,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:14"
														},
														{
															"assignments": [
																1891
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1891,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 1901,
																	"src": "2340:7:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1890,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1892,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:14"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:14",
																"nodeType": "YulBlock",
																"src": "2548:171:14",
																"statements": [
																	{
																		"nativeSrc": "2566:32:14",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:14",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:14",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:14",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:14",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:14"
																					},
																					"nativeSrc": "2577:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:14"
																			},
																			"nativeSrc": "2571:27:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:14"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:14",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:14",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:14",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:14"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:14",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:14",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:14"
																					},
																					"nativeSrc": "2626:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:14"
																			},
																			"nativeSrc": "2620:27:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:14"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:14",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:14",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:14",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:14"
																							},
																							"nativeSrc": "2683:20:14",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:14"
																					},
																					"nativeSrc": "2677:27:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:14"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:14"
																			},
																			"nativeSrc": "2669:36:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:14"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:14"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1885,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1888,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1870,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1870,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1870,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1891,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:14",
																	"valueSize": 1
																}
															],
															"id": 1893,
															"nodeType": "InlineAssembly",
															"src": "2539:180:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1895,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "2750:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1896,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "2756:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1897,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1885,
																		"src": "2759:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1898,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1888,
																		"src": "2762:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1894,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1918,
																		1998,
																		2106
																	],
																	"referencedDeclaration": 2106,
																	"src": "2739:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1879,
															"id": 1900,
															"nodeType": "Return",
															"src": "2732:32:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:14",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "2149:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1867,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "2163:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:14"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "2210:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "2219:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1852",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1875,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1874,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1852,
														"src": "2219:12:14"
													},
													"referencedDeclaration": 1852,
													"src": "2219:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1852",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "2233:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1877,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:14"
									},
									"scope": 2192,
									"src": "2129:766:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "3789:168:14",
										"statements": [
											{
												"assignments": [
													1929,
													1932,
													1934
												],
												"declarations": [
													{
														"constant": false,
														"id": 1929,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "3800:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1928,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1932,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "3819:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1852",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1931,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1930,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1852,
																"src": "3819:12:14"
															},
															"referencedDeclaration": 1852,
															"src": "3819:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1934,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "3839:16:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1933,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1939,
												"initialValue": {
													"arguments": [
														{
															"id": 1936,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "3870:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1937,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "3876:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1935,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1918,
															1998,
															2106
														],
														"referencedDeclaration": 1918,
														"src": "3859:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1941,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "3908:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1942,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "3915:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1940,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "3896:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1852_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1944,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:14"
											},
											{
												"expression": {
													"id": 1945,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1929,
													"src": "3941:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1927,
												"id": 1946,
												"nodeType": "Return",
												"src": "3934:16:14"
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:14",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "3719:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1920,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "3733:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1922,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:14"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "3780:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:14"
									},
									"scope": 2192,
									"src": "3702:255:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "4285:342:14",
										"statements": [
											{
												"id": 1996,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:14",
												"statements": [
													{
														"assignments": [
															1966
														],
														"declarations": [
															{
																"constant": false,
																"id": 1966,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 1996,
																"src": "4319:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1965,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1973,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1967,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1955,
																"src": "4331:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1968,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:14"
													},
													{
														"assignments": [
															1975
														],
														"declarations": [
															{
																"constant": false,
																"id": 1975,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 1996,
																"src": "4522:7:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1974,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1988,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1980,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1955,
																							"src": "4547:2:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1979,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1978,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:14",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1981,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:14",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1982,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1984,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1976,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:14"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1990,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "4596:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1991,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1975,
																	"src": "4602:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1992,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "4605:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1993,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1966,
																	"src": "4608:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1989,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1918,
																	1998,
																	2106
																],
																"referencedDeclaration": 2106,
																"src": "4585:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1964,
														"id": 1995,
														"nodeType": "Return",
														"src": "4578:32:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:14",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "4193:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1950,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "4207:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1952,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "4218:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1954,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:14"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "4253:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "4262:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1852",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1960,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1959,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1852,
														"src": "4262:12:14"
													},
													"referencedDeclaration": 1852,
													"src": "4262:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1852",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "4276:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1962,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:14"
									},
									"scope": 2192,
									"src": "4173:454:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "4840:164:14",
										"statements": [
											{
												"assignments": [
													2011,
													2014,
													2016
												],
												"declarations": [
													{
														"constant": false,
														"id": 2011,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 2030,
														"src": "4851:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2010,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2014,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 2030,
														"src": "4870:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1852",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2013,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2012,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1852,
																"src": "4870:12:14"
															},
															"referencedDeclaration": 1852,
															"src": "4870:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2016,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 2030,
														"src": "4890:16:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2015,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2022,
												"initialValue": {
													"arguments": [
														{
															"id": 2018,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "4921:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2019,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "4927:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2020,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "4930:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2017,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1918,
															1998,
															2106
														],
														"referencedDeclaration": 1998,
														"src": "4910:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2024,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "4955:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2025,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "4962:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2023,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "4943:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1852_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2027,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:14"
											},
											{
												"expression": {
													"id": 2028,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2011,
													"src": "4988:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2009,
												"id": 2029,
												"nodeType": "Return",
												"src": "4981:16:14"
											}
										]
									},
									"documentation": {
										"id": 1999,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:14",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "4771:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2000,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "4785:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2002,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "4796:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2004,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:14"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "4831:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:14"
									},
									"scope": 2192,
									"src": "4754:250:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2105,
										"nodeType": "Block",
										"src": "5298:1372:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2052,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2040,
																"src": "6194:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2050,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2066,
												"nodeType": "IfStatement",
												"src": "6182:164:14",
												"trueBody": {
													"id": 2065,
													"nodeType": "Block",
													"src": "6267:79:14",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2058,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2056,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2060,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1852,
																			"src": "6301:12:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1852_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:14",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1851,
																		"src": "6301:30:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1852",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 2062,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2040,
																		"src": "6333:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2063,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2049,
															"id": 2064,
															"nodeType": "Return",
															"src": "6281:54:14"
														}
													]
												}
											},
											{
												"assignments": [
													2068
												],
												"declarations": [
													{
														"constant": false,
														"id": 2068,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2105,
														"src": "6440:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2067,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2075,
												"initialValue": {
													"arguments": [
														{
															"id": 2070,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "6467:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2071,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "6473:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2072,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "6476:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2073,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "6479:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2069,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2076,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2068,
														"src": "6495:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2077,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2095,
												"nodeType": "IfStatement",
												"src": "6491:113:14",
												"trueBody": {
													"id": 2094,
													"nodeType": "Block",
													"src": "6517:87:14",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2082,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2086,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1852,
																			"src": "6551:12:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1852_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:14",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1849,
																		"src": "6551:29:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1852",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2088,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2092,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2049,
															"id": 2093,
															"nodeType": "Return",
															"src": "6531:62:14"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2096,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "6622:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2097,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "6630:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1852_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:14",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1848,
															"src": "6630:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2099,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 2103,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 2049,
												"id": 2104,
												"nodeType": "Return",
												"src": "6614:49:14"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:14",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "5169:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "5191:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2035,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "5208:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2037,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "5227:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2039,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:14"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "5266:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "5275:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1852",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2045,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2044,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1852,
														"src": "5275:12:14"
													},
													"referencedDeclaration": 1852,
													"src": "5275:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1852",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "5289:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2047,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:14"
									},
									"scope": 2192,
									"src": "5140:1530:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2141,
										"nodeType": "Block",
										"src": "6897:166:14",
										"statements": [
											{
												"assignments": [
													2121,
													2124,
													2126
												],
												"declarations": [
													{
														"constant": false,
														"id": 2121,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 2141,
														"src": "6908:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2120,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2124,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 2141,
														"src": "6927:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1852",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2123,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2122,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1852,
																"src": "6927:12:14"
															},
															"referencedDeclaration": 1852,
															"src": "6927:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2126,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 2141,
														"src": "6947:16:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2125,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2133,
												"initialValue": {
													"arguments": [
														{
															"id": 2128,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "6978:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2129,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "6984:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2130,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "6987:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2131,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2115,
															"src": "6990:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2127,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1918,
															1998,
															2106
														],
														"referencedDeclaration": 2106,
														"src": "6967:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1852_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2135,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "7014:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2136,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "7021:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2134,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "7002:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1852_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2138,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:14"
											},
											{
												"expression": {
													"id": 2139,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2121,
													"src": "7047:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2119,
												"id": 2140,
												"nodeType": "Return",
												"src": "7040:16:14"
											}
										]
									},
									"documentation": {
										"id": 2107,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:14",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "6820:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2108,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "6834:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2110,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "6843:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "6854:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2114,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:14"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "6888:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:14"
									},
									"scope": 2192,
									"src": "6803:260:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2190,
										"nodeType": "Block",
										"src": "7268:460:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1852",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2151,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2146,
														"src": "7282:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1852",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2152,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "7291:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1852_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 2153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:14",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1848,
														"src": "7291:20:14",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1852",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1852",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2157,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "7378:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2158,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "7387:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1852_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:14",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1849,
															"src": "7387:29:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1852",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2165,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2146,
																"src": "7483:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1852",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2166,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1852,
																	"src": "7492:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1852_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:14",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1850,
																"src": "7492:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1852",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1852",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2177,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2146,
																	"src": "7617:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1852",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2178,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1852,
																		"src": "7626:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1852_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 2179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:14",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1851,
																	"src": "7626:30:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1852",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2186,
															"nodeType": "IfStatement",
															"src": "7613:109:14",
															"trueBody": {
																"id": 2185,
																"nodeType": "Block",
																"src": "7658:64:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2182,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2148,
																					"src": "7702:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2181,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1865,
																				"src": "7679:22:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2184,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:14"
																	}
																]
															}
														},
														"id": 2187,
														"nodeType": "IfStatement",
														"src": "7479:243:14",
														"trueBody": {
															"id": 2176,
															"nodeType": "Block",
															"src": "7529:78:14",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2172,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2148,
																						"src": "7586:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 2171,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2170,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2169,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1860,
																			"src": "7550:27:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2175,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:14"
																}
															]
														}
													},
													"id": 2188,
													"nodeType": "IfStatement",
													"src": "7374:348:14",
													"trueBody": {
														"id": 2164,
														"nodeType": "Block",
														"src": "7418:55:14",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2161,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "7439:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2163,
																"nodeType": "RevertStatement",
																"src": "7432:30:14"
															}
														]
													}
												},
												"id": 2189,
												"nodeType": "IfStatement",
												"src": "7278:444:14",
												"trueBody": {
													"id": 2156,
													"nodeType": "Block",
													"src": "7313:55:14",
													"statements": [
														{
															"functionReturnParameters": 2150,
															"id": 2155,
															"nodeType": "Return",
															"src": "7327:7:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2143,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:14",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 2191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "7217:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1852",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2144,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1852,
														"src": "7217:12:14"
													},
													"referencedDeclaration": 1852,
													"src": "7217:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1852",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "7237:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2147,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:14"
									},
									"returnParameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:14"
									},
									"scope": 2192,
									"src": "7196:532:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2193,
							"src": "344:7386:14",
							"usedErrors": [
								1855,
								1860,
								1865
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							2419
						],
						"IERC5267": [
							70
						],
						"MessageHashUtils": [
							2493
						],
						"ShortString": [
							1268
						],
						"ShortStrings": [
							1479
						]
					},
					"id": 2420,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2194,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 2196,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2420,
							"sourceUnit": 2494,
							"src": "139:56:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2195,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2493,
										"src": "147:16:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 2199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2420,
							"sourceUnit": 1480,
							"src": "196:62:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2197,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1479,
										"src": "204:12:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2198,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1268,
										"src": "218:11:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 2201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2420,
							"sourceUnit": 71,
							"src": "259:55:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2200,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 70,
										"src": "267:8:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2203,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 70,
										"src": "1988:8:15"
									},
									"id": 2204,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:15"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2202,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:15",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2419,
							"linearizedBaseContracts": [
								2419,
								70
							],
							"name": "EIP712",
							"nameLocation": "1978:6:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2206,
									"libraryName": {
										"id": 2205,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1479,
										"src": "2009:12:15"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:15"
								},
								{
									"constant": true,
									"id": 2211,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:15",
									"nodeType": "VariableDeclaration",
									"scope": 2419,
									"src": "2034:140:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2207,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 2209,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 2208,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2213,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:15",
									"nodeType": "VariableDeclaration",
									"scope": 2419,
									"src": "2373:48:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2212,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2215,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:15",
									"nodeType": "VariableDeclaration",
									"scope": 2419,
									"src": "2427:40:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2214,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2217,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:15",
									"nodeType": "VariableDeclaration",
									"scope": 2419,
									"src": "2473:37:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2216,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:15",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2219,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:15",
									"nodeType": "VariableDeclaration",
									"scope": 2419,
									"src": "2517:37:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2218,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2221,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:15",
									"nodeType": "VariableDeclaration",
									"scope": 2419,
									"src": "2560:40:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2220,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2224,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:15",
									"nodeType": "VariableDeclaration",
									"scope": 2419,
									"src": "2607:35:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2223,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2222,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1268,
											"src": "2607:11:15"
										},
										"referencedDeclaration": 1268,
										"src": "2607:11:15",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2227,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:15",
									"nodeType": "VariableDeclaration",
									"scope": 2419,
									"src": "2648:38:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2226,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2225,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1268,
											"src": "2648:11:15"
										},
										"referencedDeclaration": 1268,
										"src": "2648:11:15",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2229,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:15",
									"nodeType": "VariableDeclaration",
									"scope": 2419,
									"src": "2692:28:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2228,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2231,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:15",
									"nodeType": "VariableDeclaration",
									"scope": 2419,
									"src": "2726:31:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2230,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2288,
										"nodeType": "Block",
										"src": "3383:376:15",
										"statements": [
											{
												"expression": {
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2239,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2224,
														"src": "3393:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2242,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "3432:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2240,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "3401:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:15",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1420,
															"src": "3401:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1268_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:15",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
														"typeString": "ShortString"
													}
												},
												"id": 2245,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:15"
											},
											{
												"expression": {
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2246,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2227,
														"src": "3456:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2249,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2231,
																"src": "3501:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2247,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2236,
																"src": "3467:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:15",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1420,
															"src": "3467:33:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1268_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:15",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
														"typeString": "ShortString"
													}
												},
												"id": 2252,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:15"
											},
											{
												"expression": {
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2253,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "3528:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2257,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "3558:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2255,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2254,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2261,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:15"
											},
											{
												"expression": {
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2262,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "3574:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2266,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2236,
																		"src": "3607:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2264,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2263,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2270,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:15"
											},
											{
												"expression": {
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2271,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "3627:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2272,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:15",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2275,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:15"
											},
											{
												"expression": {
													"id": 2279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2276,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "3667:22:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2277,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "3692:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 2278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2280,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:15"
											},
											{
												"expression": {
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2281,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2217,
														"src": "3725:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2284,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2419",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2419",
																	"typeString": "contract EIP712"
																}
															],
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2282,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 2285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2287,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:15"
											}
										]
									},
									"documentation": {
										"id": 2232,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:15",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 2289,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "3340:18:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "3360:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:15"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:15"
									},
									"scope": 2419,
									"src": "3328:431:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "3907:200:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2297,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2419",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2419",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2295,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2299,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2217,
															"src": "3938:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2301,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:15",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2303,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3970:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2312,
													"nodeType": "Block",
													"src": "4046:55:15",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2309,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2336,
																	"src": "4067:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2294,
															"id": 2311,
															"nodeType": "Return",
															"src": "4060:30:15"
														}
													]
												},
												"id": 2313,
												"nodeType": "IfStatement",
												"src": "3917:184:15",
												"trueBody": {
													"id": 2308,
													"nodeType": "Block",
													"src": "3986:54:15",
													"statements": [
														{
															"expression": {
																"id": 2306,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "4007:22:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2294,
															"id": 2307,
															"nodeType": "Return",
															"src": "4000:29:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2290,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:15",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:15"
									},
									"returnParameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "3898:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2292,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:15"
									},
									"scope": 2419,
									"src": "3845:262:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2335,
										"nodeType": "Block",
										"src": "4177:115:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2323,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2211,
																	"src": "4215:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2324,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2219,
																	"src": "4226:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2325,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2221,
																	"src": "4239:14:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2326,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:15",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2330,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2419",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2419",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 2329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2328,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2321,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:15",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2320,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2319,
												"id": 2334,
												"nodeType": "Return",
												"src": "4187:98:15"
											}
										]
									},
									"id": 2336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:15"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "4168:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:15"
									},
									"scope": 2419,
									"src": "4113:179:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2351,
										"nodeType": "Block",
										"src": "5003:90:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2346,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2315,
																"src": "5053:18:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2348,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "5075:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2344,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2493,
															"src": "5020:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2493_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:15",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2492,
														"src": "5020:32:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 2349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2343,
												"id": 2350,
												"nodeType": "Return",
												"src": "5013:73:15"
											}
										]
									},
									"documentation": {
										"id": 2337,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:15",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 2352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "4943:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:15"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "4994:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2341,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:15"
									},
									"scope": 2419,
									"src": "4917:176:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										69
									],
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "5472:229:15",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2372,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "5533:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2374,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "5560:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2376,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:15",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2380,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2419",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2419",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2378,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2382,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2386,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2387,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 2391,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:15",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 2370,
												"id": 2392,
												"nodeType": "Return",
												"src": "5482:212:15"
											}
										]
									},
									"documentation": {
										"id": 2353,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:15",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 2394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:15"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "5242:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 2355,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "5269:18:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2357,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "5301:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "5336:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:15",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "5365:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "5404:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "5430:27:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2367,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2368,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:15"
									},
									"scope": 2419,
									"src": "5144:557:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2405,
										"nodeType": "Block",
										"src": "6082:65:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2402,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "6126:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2400,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "6099:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																"typeString": "ShortString"
															}
														},
														"id": 2401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:15",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1447,
														"src": "6099:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1268_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1268_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2399,
												"id": 2404,
												"nodeType": "Return",
												"src": "6092:48:15"
											}
										]
									},
									"documentation": {
										"id": 2395,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:15",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:15"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "6067:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2397,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:15"
									},
									"scope": 2419,
									"src": "6021:126:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2417,
										"nodeType": "Block",
										"src": "6537:71:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2414,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "6584:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2412,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "6554:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1268",
																"typeString": "ShortString"
															}
														},
														"id": 2413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:15",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1447,
														"src": "6554:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1268_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1268_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2411,
												"id": 2416,
												"nodeType": "Return",
												"src": "6547:54:15"
											}
										]
									},
									"documentation": {
										"id": 2407,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:15",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:15"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "6522:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:15"
									},
									"scope": 2419,
									"src": "6473:135:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2420,
							"src": "1960:4650:15",
							"usedErrors": [
								1276,
								1278
							],
							"usedEvents": [
								50
							]
						}
					],
					"src": "113:6498:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							2493
						],
						"Strings": [
							1844
						]
					},
					"id": 2494,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2421,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 2423,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2494,
							"sourceUnit": 1845,
							"src": "149:39:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2422,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1844,
										"src": "157:7:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2424,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:16",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2493,
							"linearizedBaseContracts": [
								2493
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "1314:368:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:16",
													"nodeType": "YulBlock",
													"src": "1376:300:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:16",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:16",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:16",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:16"
																},
																"nativeSrc": "1390:48:16",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:16"
															},
															"nativeSrc": "1390:48:16",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:16",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:16",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:16"
																},
																"nativeSrc": "1492:25:16",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:16"
															},
															"nativeSrc": "1492:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:16"
														},
														{
															"nativeSrc": "1571:31:16",
															"nodeType": "YulAssignment",
															"src": "1571:31:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:16",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:16",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:16"
																},
																"nativeSrc": "1581:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:16"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:16"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2430,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:16",
														"valueSize": 1
													},
													{
														"declaration": 2427,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:16",
														"valueSize": 1
													}
												],
												"id": 2432,
												"nodeType": "InlineAssembly",
												"src": "1367:309:16"
											}
										]
									},
									"documentation": {
										"id": 2425,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:16",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "1254:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:16"
									},
									"returnParameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "1298:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2429,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:16"
									},
									"scope": 2493,
									"src": "1222:460:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2459,
										"nodeType": "Block",
										"src": "2234:143:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2451,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2437,
																						"src": "2343:7:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:16",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2449,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1844,
																					"src": "2326:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1844_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:16",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1657,
																				"src": "2326:16:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2447,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2455,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2437,
																	"src": "2361:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2443,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:16",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2442,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2441,
												"id": 2458,
												"nodeType": "Return",
												"src": "2244:126:16"
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:16",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "2180:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2436,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:16"
									},
									"returnParameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "2225:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2439,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:16"
									},
									"scope": 2493,
									"src": "2148:229:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2479,
										"nodeType": "Block",
										"src": "2831:80:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2474,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2463,
																	"src": "2887:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2475,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2465,
																	"src": "2898:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2471,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:16",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2470,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2469,
												"id": 2478,
												"nodeType": "Return",
												"src": "2841:63:16"
											}
										]
									},
									"documentation": {
										"id": 2461,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:16",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "2761:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "2780:17:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:16"
									},
									"returnParameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "2822:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2467,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:16"
									},
									"scope": 2493,
									"src": "2720:191:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2491,
										"nodeType": "Block",
										"src": "3462:292:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:16",
													"nodeType": "YulBlock",
													"src": "3524:224:16",
													"statements": [
														{
															"nativeSrc": "3538:22:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:16",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:16"
																},
																"nativeSrc": "3549:11:16",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:16"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:16",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:16"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:16",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:16",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:16"
																},
																"nativeSrc": "3573:23:16",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:16"
															},
															"nativeSrc": "3573:23:16",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:16",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:16",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:16"
																		},
																		"nativeSrc": "3616:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:16"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:16",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:16"
																},
																"nativeSrc": "3609:39:16",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:16"
															},
															"nativeSrc": "3609:39:16",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:16",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:16",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:16"
																		},
																		"nativeSrc": "3668:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:16"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:16"
																},
																"nativeSrc": "3661:34:16",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:16"
															},
															"nativeSrc": "3661:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:16"
														},
														{
															"nativeSrc": "3708:30:16",
															"nodeType": "YulAssignment",
															"src": "3708:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:16",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:16"
																},
																"nativeSrc": "3718:20:16",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:16"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:16"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2488,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:16",
														"valueSize": 1
													},
													{
														"declaration": 2483,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:16",
														"valueSize": 1
													},
													{
														"declaration": 2485,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:16",
														"valueSize": 1
													}
												],
												"id": 2490,
												"nodeType": "InlineAssembly",
												"src": "3515:233:16"
											}
										]
									},
									"documentation": {
										"id": 2481,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:16",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:16",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "3378:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2482,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "3403:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:16"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "3446:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2487,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:16"
									},
									"scope": 2493,
									"src": "3353:401:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2494,
							"src": "521:3235:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3547
						]
					},
					"id": 3548,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2495,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2496,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:17",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3547,
							"linearizedBaseContracts": [
								3547
							],
							"name": "Math",
							"nameLocation": "211:4:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2497,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:17",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2499,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:17"
									},
									"src": "277:29:17"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2504,
									"members": [
										{
											"id": 2500,
											"name": "Floor",
											"nameLocation": "336:5:17",
											"nodeType": "EnumValue",
											"src": "336:5:17"
										},
										{
											"id": 2501,
											"name": "Ceil",
											"nameLocation": "379:4:17",
											"nodeType": "EnumValue",
											"src": "379:4:17"
										},
										{
											"id": 2502,
											"name": "Trunc",
											"nameLocation": "421:5:17",
											"nodeType": "EnumValue",
											"src": "421:5:17"
										},
										{
											"id": 2503,
											"name": "Expand",
											"nameLocation": "451:6:17",
											"nodeType": "EnumValue",
											"src": "451:6:17"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:17",
									"nodeType": "EnumDefinition",
									"src": "312:169:17"
								},
								{
									"body": {
										"id": 2535,
										"nodeType": "Block",
										"src": "661:140:17",
										"statements": [
											{
												"id": 2534,
												"nodeType": "UncheckedBlock",
												"src": "671:124:17",
												"statements": [
													{
														"assignments": [
															2517
														],
														"declarations": [
															{
																"constant": false,
																"id": 2517,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:17",
																"nodeType": "VariableDeclaration",
																"scope": 2534,
																"src": "695:9:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2516,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2521,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2518,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "707:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2519,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2509,
																"src": "711:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2522,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "730:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2523,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "734:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2529,
														"nodeType": "IfStatement",
														"src": "726:28:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2527,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2515,
															"id": 2528,
															"nodeType": "Return",
															"src": "737:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2531,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2517,
																	"src": "782:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2532,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2515,
														"id": 2533,
														"nodeType": "Return",
														"src": "768:16:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2505,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:17",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "601:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "612:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:17"
									},
									"returnParameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "646:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "652:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:17"
									},
									"scope": 3547,
									"src": "585:216:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2563,
										"nodeType": "Block",
										"src": "984:113:17",
										"statements": [
											{
												"id": 2562,
												"nodeType": "UncheckedBlock",
												"src": "994:97:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2548,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2541,
																"src": "1022:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2549,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2539,
																"src": "1026:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2555,
														"nodeType": "IfStatement",
														"src": "1018:28:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2553,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2547,
															"id": 2554,
															"nodeType": "Return",
															"src": "1029:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2557,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2539,
																		"src": "1074:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2558,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2541,
																		"src": "1078:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2560,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2547,
														"id": 2561,
														"nodeType": "Return",
														"src": "1060:20:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2537,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:17",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "924:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "935:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:17"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "969:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "975:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:17"
									},
									"scope": 3547,
									"src": "908:189:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2605,
										"nodeType": "Block",
										"src": "1283:417:17",
										"statements": [
											{
												"id": 2604,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2576,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2567,
																"src": "1551:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2583,
														"nodeType": "IfStatement",
														"src": "1547:28:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2581,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2575,
															"id": 2582,
															"nodeType": "Return",
															"src": "1559:16:17"
														}
													},
													{
														"assignments": [
															2585
														],
														"declarations": [
															{
																"constant": false,
																"id": 2585,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:17",
																"nodeType": "VariableDeclaration",
																"scope": 2604,
																"src": "1589:9:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2584,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2589,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2586,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2567,
																"src": "1601:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2587,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "1605:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2590,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "1624:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2591,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2567,
																	"src": "1628:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2593,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "1633:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2599,
														"nodeType": "IfStatement",
														"src": "1620:33:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2597,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2575,
															"id": 2598,
															"nodeType": "Return",
															"src": "1636:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2601,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "1681:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2602,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2575,
														"id": 2603,
														"nodeType": "Return",
														"src": "1667:16:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2565,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:17",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "1223:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "1234:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:17"
									},
									"returnParameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "1268:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "1274:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:17"
									},
									"scope": 3547,
									"src": "1207:493:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2633,
										"nodeType": "Block",
										"src": "1887:114:17",
										"statements": [
											{
												"id": 2632,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2618,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2611,
																"src": "1925:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2625,
														"nodeType": "IfStatement",
														"src": "1921:29:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2623,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2617,
															"id": 2624,
															"nodeType": "Return",
															"src": "1933:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2627,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2609,
																		"src": "1978:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2628,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2611,
																		"src": "1982:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2630,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2617,
														"id": 2631,
														"nodeType": "Return",
														"src": "1964:20:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2607,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:17",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "1827:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "1838:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:17"
									},
									"returnParameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "1872:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "1878:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:17"
									},
									"scope": 3547,
									"src": "1811:190:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2661,
										"nodeType": "Block",
										"src": "2198:114:17",
										"statements": [
											{
												"id": 2660,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2646,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2639,
																"src": "2236:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2653,
														"nodeType": "IfStatement",
														"src": "2232:29:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2651,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2645,
															"id": 2652,
															"nodeType": "Return",
															"src": "2244:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2655,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2637,
																		"src": "2289:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2656,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2639,
																		"src": "2293:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2658,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2645,
														"id": 2659,
														"nodeType": "Return",
														"src": "2275:20:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2635,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:17",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "2138:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "2149:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:17"
									},
									"returnParameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "2183:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "2189:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:17"
									},
									"scope": 3547,
									"src": "2122:190:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2679,
										"nodeType": "Block",
										"src": "2449:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2672,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2665,
															"src": "2466:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2673,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2667,
															"src": "2470:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2676,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2667,
														"src": "2478:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:17",
													"trueExpression": {
														"id": 2675,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2665,
														"src": "2474:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2671,
												"id": 2678,
												"nodeType": "Return",
												"src": "2459:20:17"
											}
										]
									},
									"documentation": {
										"id": 2663,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:17",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "2395:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "2406:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:17"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "2440:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:17"
									},
									"scope": 3547,
									"src": "2382:104:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2697,
										"nodeType": "Block",
										"src": "2624:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2690,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2683,
															"src": "2641:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2691,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2685,
															"src": "2645:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2694,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2685,
														"src": "2653:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:17",
													"trueExpression": {
														"id": 2693,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2683,
														"src": "2649:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2689,
												"id": 2696,
												"nodeType": "Return",
												"src": "2634:20:17"
											}
										]
									},
									"documentation": {
										"id": 2681,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:17",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "2570:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "2581:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:17"
									},
									"returnParameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "2615:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:17"
									},
									"scope": 3547,
									"src": "2557:104:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2720,
										"nodeType": "Block",
										"src": "2845:82:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2708,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2701,
																	"src": "2900:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2709,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2703,
																	"src": "2904:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2711,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2712,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2701,
																		"src": "2910:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2713,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2703,
																		"src": "2914:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2715,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2707,
												"id": 2719,
												"nodeType": "Return",
												"src": "2892:28:17"
											}
										]
									},
									"documentation": {
										"id": 2699,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:17",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "2791:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "2802:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:17"
									},
									"returnParameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "2836:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:17"
									},
									"scope": 3547,
									"src": "2774:153:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2754,
										"nodeType": "Block",
										"src": "3219:260:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2731,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2726,
														"src": "3233:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2739,
												"nodeType": "IfStatement",
												"src": "3229:127:17",
												"trueBody": {
													"id": 2738,
													"nodeType": "Block",
													"src": "3241:115:17",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2734,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2724,
																	"src": "3340:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2735,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "3344:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2730,
															"id": 2737,
															"nodeType": "Return",
															"src": "3333:12:17"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2740,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2724,
															"src": "3444:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2744,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2724,
																			"src": "3458:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2747,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2748,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2726,
																"src": "3467:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:17",
													"trueExpression": {
														"hexValue": "30",
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2730,
												"id": 2753,
												"nodeType": "Return",
												"src": "3437:35:17"
											}
										]
									},
									"documentation": {
										"id": 2722,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:17",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "3165:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "3176:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:17"
									},
									"returnParameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "3210:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:17"
									},
									"scope": 3547,
									"src": "3148:331:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2880,
										"nodeType": "Block",
										"src": "3901:4018:17",
										"statements": [
											{
												"id": 2879,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:17",
												"statements": [
													{
														"assignments": [
															2768
														],
														"declarations": [
															{
																"constant": false,
																"id": 2768,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:17",
																"nodeType": "VariableDeclaration",
																"scope": 2879,
																"src": "4232:13:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2767,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2772,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2769,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2758,
																"src": "4248:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2770,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2760,
																"src": "4252:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:17"
													},
													{
														"assignments": [
															2774
														],
														"declarations": [
															{
																"constant": false,
																"id": 2774,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:17",
																"nodeType": "VariableDeclaration",
																"scope": 2879,
																"src": "4312:13:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2773,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2775,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:17"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:17",
															"nodeType": "YulBlock",
															"src": "4392:122:17",
															"statements": [
																{
																	"nativeSrc": "4410:30:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:17",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:17"
																				},
																				"nativeSrc": "4433:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:17"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:17"
																		},
																		"nativeSrc": "4420:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:17"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:17",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:17",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:17"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:17"
																				},
																				"nativeSrc": "4470:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:17"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:17"
																				},
																				"nativeSrc": "4486:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:17"
																		},
																		"nativeSrc": "4466:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2768,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2768,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2774,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2758,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2760,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:17",
																"valueSize": 1
															}
														],
														"id": 2776,
														"nodeType": "InlineAssembly",
														"src": "4383:131:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2777,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2774,
																"src": "4595:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2785,
														"nodeType": "IfStatement",
														"src": "4591:368:17",
														"trueBody": {
															"id": 2784,
															"nodeType": "Block",
															"src": "4607:352:17",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2780,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2768,
																			"src": "4925:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2781,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2762,
																			"src": "4933:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2766,
																	"id": 2783,
																	"nodeType": "Return",
																	"src": "4918:26:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2786,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2762,
																"src": "5065:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2787,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2774,
																"src": "5080:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2793,
														"nodeType": "IfStatement",
														"src": "5061:88:17",
														"trueBody": {
															"id": 2792,
															"nodeType": "Block",
															"src": "5087:62:17",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2789,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2499,
																			"src": "5112:20:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2791,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:17"
																}
															]
														}
													},
													{
														"assignments": [
															2795
														],
														"declarations": [
															{
																"constant": false,
																"id": 2795,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:17",
																"nodeType": "VariableDeclaration",
																"scope": 2879,
																"src": "5404:17:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2794,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2796,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:17"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:17",
															"nodeType": "YulBlock",
															"src": "5444:291:17",
															"statements": [
																{
																	"nativeSrc": "5513:38:17",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:17"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:17",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:17"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:17"
																		},
																		"nativeSrc": "5526:25:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:17"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:17",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:17"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:17",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:17"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:17"
																				},
																				"nativeSrc": "5653:20:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:17"
																		},
																		"nativeSrc": "5642:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:17",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:17"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:17"
																		},
																		"nativeSrc": "5700:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2762,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2768,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2768,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2768,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2774,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2774,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2795,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2795,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2795,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2758,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2760,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:17",
																"valueSize": 1
															}
														],
														"id": 2797,
														"nodeType": "InlineAssembly",
														"src": "5435:300:17"
													},
													{
														"assignments": [
															2799
														],
														"declarations": [
															{
																"constant": false,
																"id": 2799,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:17",
																"nodeType": "VariableDeclaration",
																"scope": 2879,
																"src": "5939:12:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2798,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2806,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2800,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2762,
																"src": "5954:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2802,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2762,
																			"src": "5973:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2804,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:17"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:17",
															"nodeType": "YulBlock",
															"src": "6008:362:17",
															"statements": [
																{
																	"nativeSrc": "6073:37:17",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:17",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:17"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:17"
																		},
																		"nativeSrc": "6088:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:17"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:17",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:17"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:17",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:17"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:17"
																		},
																		"nativeSrc": "6186:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:17",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:17",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:17",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:17",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:17"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:17"
																						},
																						"nativeSrc": "6333:12:17",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:17"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:17"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:17"
																				},
																				"nativeSrc": "6329:23:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:17",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:17"
																		},
																		"nativeSrc": "6325:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:17"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:17",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2762,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2762,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2768,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2768,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2799,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2799,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2799,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2799,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2799,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:17",
																"valueSize": 1
															}
														],
														"id": 2807,
														"nodeType": "InlineAssembly",
														"src": "5999:371:17"
													},
													{
														"expression": {
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2808,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2768,
																"src": "6436:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2809,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2774,
																	"src": "6445:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2810,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2799,
																	"src": "6453:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2813,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:17"
													},
													{
														"assignments": [
															2815
														],
														"declarations": [
															{
																"constant": false,
																"id": 2815,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:17",
																"nodeType": "VariableDeclaration",
																"scope": 2879,
																"src": "6775:15:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2814,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2822,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2817,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2762,
																			"src": "6798:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2819,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:17"
													},
													{
														"expression": {
															"id": 2829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2823,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2815,
																"src": "7031:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2825,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "7046:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2826,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2815,
																		"src": "7060:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2830,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:17"
													},
													{
														"expression": {
															"id": 2837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2831,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2815,
																"src": "7100:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2833,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "7115:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2834,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2815,
																		"src": "7129:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2838,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:17"
													},
													{
														"expression": {
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2839,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2815,
																"src": "7170:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2841,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "7185:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2842,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2815,
																		"src": "7199:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2846,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:17"
													},
													{
														"expression": {
															"id": 2853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2847,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2815,
																"src": "7240:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2849,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "7255:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2850,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2815,
																		"src": "7269:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2854,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:17"
													},
													{
														"expression": {
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2855,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2815,
																"src": "7310:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2857,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "7325:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2858,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2815,
																		"src": "7339:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2862,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:17"
													},
													{
														"expression": {
															"id": 2869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2863,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2815,
																"src": "7381:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2865,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "7396:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2866,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2815,
																		"src": "7410:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2870,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:17"
													},
													{
														"expression": {
															"id": 2875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2871,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2765,
																"src": "7851:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2872,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2768,
																	"src": "7860:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2873,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "7868:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2876,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:17"
													},
													{
														"expression": {
															"id": 2877,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2765,
															"src": "7896:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2766,
														"id": 2878,
														"nodeType": "Return",
														"src": "7889:13:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2756,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:17",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "3819:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "3830:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "3841:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:17"
									},
									"returnParameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "3885:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:17"
									},
									"scope": 3547,
									"src": "3803:4116:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2923,
										"nodeType": "Block",
										"src": "8161:192:17",
										"statements": [
											{
												"assignments": [
													2897
												],
												"declarations": [
													{
														"constant": false,
														"id": 2897,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2923,
														"src": "8171:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2896,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2903,
												"initialValue": {
													"arguments": [
														{
															"id": 2899,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2884,
															"src": "8195:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2900,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2886,
															"src": "8198:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2901,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2888,
															"src": "8201:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2898,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2881,
															2924
														],
														"referencedDeclaration": 2881,
														"src": "8188:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2905,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2891,
																"src": "8244:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2504",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2504",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2904,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3546,
															"src": "8227:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2504_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2908,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2884,
																	"src": "8264:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2909,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2886,
																	"src": "8267:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2910,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2888,
																	"src": "8270:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2907,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2920,
												"nodeType": "IfStatement",
												"src": "8223:101:17",
												"trueBody": {
													"id": 2919,
													"nodeType": "Block",
													"src": "8288:36:17",
													"statements": [
														{
															"expression": {
																"id": 2917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2915,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2897,
																	"src": "8302:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2918,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:17"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2921,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2897,
													"src": "8340:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2895,
												"id": 2922,
												"nodeType": "Return",
												"src": "8333:13:17"
											}
										]
									},
									"documentation": {
										"id": 2882,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:17",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "8067:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "8078:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "8089:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "8110:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2504",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2890,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2889,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2504,
														"src": "8110:8:17"
													},
													"referencedDeclaration": 2504,
													"src": "8110:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2504",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:17"
									},
									"returnParameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "8152:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:17"
									},
									"scope": 3547,
									"src": "8051:302:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3035,
										"nodeType": "Block",
										"src": "8644:1585:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2932,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2927,
														"src": "8658:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2938,
												"nodeType": "IfStatement",
												"src": "8654:45:17",
												"trueBody": {
													"id": 2937,
													"nodeType": "Block",
													"src": "8666:33:17",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2931,
															"id": 2936,
															"nodeType": "Return",
															"src": "8680:8:17"
														}
													]
												}
											},
											{
												"assignments": [
													2940
												],
												"declarations": [
													{
														"constant": false,
														"id": 2940,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3035,
														"src": "9378:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2949,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2943,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "9406:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2942,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3203,
																			3238
																		],
																		"referencedDeclaration": 3203,
																		"src": "9401:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2947,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:17"
											},
											{
												"id": 3034,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:17",
												"statements": [
													{
														"expression": {
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2950,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2940,
																"src": "9839:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2951,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2940,
																				"src": "9849:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2954,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2952,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2927,
																					"src": "9858:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2953,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2940,
																					"src": "9862:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2956,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2960,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:17"
													},
													{
														"expression": {
															"id": 2970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2961,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2940,
																"src": "9888:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2962,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2940,
																				"src": "9898:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2965,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2963,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2927,
																					"src": "9907:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2964,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2940,
																					"src": "9911:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2967,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2971,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:17"
													},
													{
														"expression": {
															"id": 2981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2972,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2940,
																"src": "9937:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2973,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2940,
																				"src": "9947:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2974,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2927,
																					"src": "9956:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2975,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2940,
																					"src": "9960:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2978,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2982,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:17"
													},
													{
														"expression": {
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2983,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2940,
																"src": "9986:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2984,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2940,
																				"src": "9996:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2985,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2927,
																					"src": "10005:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2986,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2940,
																					"src": "10009:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2989,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2993,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:17"
													},
													{
														"expression": {
															"id": 3003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2994,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2940,
																"src": "10035:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2995,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2940,
																				"src": "10045:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2996,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2927,
																					"src": "10054:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2997,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2940,
																					"src": "10058:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3000,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3004,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:17"
													},
													{
														"expression": {
															"id": 3014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3005,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2940,
																"src": "10084:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3006,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2940,
																				"src": "10094:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3007,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2927,
																					"src": "10103:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3008,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2940,
																					"src": "10107:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3011,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3015,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:17"
													},
													{
														"expression": {
															"id": 3025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3016,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2940,
																"src": "10133:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3017,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2940,
																				"src": "10143:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3018,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2927,
																					"src": "10152:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3019,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2940,
																					"src": "10156:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3022,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3026,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:17"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 3028,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2940,
																	"src": "10193:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3029,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2927,
																		"src": "10201:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3030,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2940,
																		"src": "10205:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3027,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2698,
																"src": "10189:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2931,
														"id": 3033,
														"nodeType": "Return",
														"src": "10182:30:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2925,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:17",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 3036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "8601:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:17"
									},
									"returnParameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "8635:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:17"
									},
									"scope": 3547,
									"src": "8587:1642:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3070,
										"nodeType": "Block",
										"src": "10405:164:17",
										"statements": [
											{
												"id": 3069,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:17",
												"statements": [
													{
														"assignments": [
															3048
														],
														"declarations": [
															{
																"constant": false,
																"id": 3048,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3069,
																"src": "10439:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3047,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3052,
														"initialValue": {
															"arguments": [
																{
																	"id": 3050,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3039,
																	"src": "10461:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3049,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3036,
																	3071
																],
																"referencedDeclaration": 3036,
																"src": "10456:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3053,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3048,
																"src": "10484:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3055,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3042,
																						"src": "10511:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2504",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2504",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3054,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3546,
																					"src": "10494:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2504_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3061,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3059,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3057,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3048,
																						"src": "10524:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3058,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3048,
																						"src": "10533:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3060,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3039,
																					"src": "10542:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3066,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3046,
														"id": 3068,
														"nodeType": "Return",
														"src": "10477:75:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3037,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:17",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3071,
												"src": "10343:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3042,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3071,
												"src": "10354:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2504",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3041,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3040,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2504,
														"src": "10354:8:17"
													},
													"referencedDeclaration": 2504,
													"src": "10354:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2504",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:17"
									},
									"returnParameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3071,
												"src": "10396:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:17"
									},
									"scope": 3547,
									"src": "10329:240:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3202,
										"nodeType": "Block",
										"src": "10760:922:17",
										"statements": [
											{
												"assignments": [
													3080
												],
												"declarations": [
													{
														"constant": false,
														"id": 3080,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3202,
														"src": "10770:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3079,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3082,
												"initialValue": {
													"hexValue": "30",
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:17"
											},
											{
												"id": 3199,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3083,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3074,
																	"src": "10826:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3097,
														"nodeType": "IfStatement",
														"src": "10822:99:17",
														"trueBody": {
															"id": 3096,
															"nodeType": "Block",
															"src": "10844:77:17",
															"statements": [
																{
																	"expression": {
																		"id": 3090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3088,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3074,
																			"src": "10862:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3091,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:17"
																},
																{
																	"expression": {
																		"id": 3094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3092,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3080,
																			"src": "10893:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3095,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3098,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3074,
																	"src": "10938:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3112,
														"nodeType": "IfStatement",
														"src": "10934:96:17",
														"trueBody": {
															"id": 3111,
															"nodeType": "Block",
															"src": "10955:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 3105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3103,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3074,
																			"src": "10973:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3106,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:17"
																},
																{
																	"expression": {
																		"id": 3109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3107,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3080,
																			"src": "11003:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3110,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3113,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3074,
																	"src": "11047:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3127,
														"nodeType": "IfStatement",
														"src": "11043:96:17",
														"trueBody": {
															"id": 3126,
															"nodeType": "Block",
															"src": "11064:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 3120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3118,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3074,
																			"src": "11082:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3121,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:17"
																},
																{
																	"expression": {
																		"id": 3124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3122,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3080,
																			"src": "11112:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3125,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3128,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3074,
																	"src": "11156:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3142,
														"nodeType": "IfStatement",
														"src": "11152:96:17",
														"trueBody": {
															"id": 3141,
															"nodeType": "Block",
															"src": "11173:75:17",
															"statements": [
																{
																	"expression": {
																		"id": 3135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3133,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3074,
																			"src": "11191:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3136,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:17"
																},
																{
																	"expression": {
																		"id": 3139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3137,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3080,
																			"src": "11221:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3140,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3143,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3074,
																	"src": "11265:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3157,
														"nodeType": "IfStatement",
														"src": "11261:93:17",
														"trueBody": {
															"id": 3156,
															"nodeType": "Block",
															"src": "11281:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 3150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3148,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3074,
																			"src": "11299:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3151,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:17"
																},
																{
																	"expression": {
																		"id": 3154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3152,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3080,
																			"src": "11328:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3155,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3158,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3074,
																	"src": "11371:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3172,
														"nodeType": "IfStatement",
														"src": "11367:93:17",
														"trueBody": {
															"id": 3171,
															"nodeType": "Block",
															"src": "11387:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 3165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3163,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3074,
																			"src": "11405:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3166,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:17"
																},
																{
																	"expression": {
																		"id": 3169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3167,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3080,
																			"src": "11434:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3170,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3173,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3074,
																	"src": "11477:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3187,
														"nodeType": "IfStatement",
														"src": "11473:93:17",
														"trueBody": {
															"id": 3186,
															"nodeType": "Block",
															"src": "11493:73:17",
															"statements": [
																{
																	"expression": {
																		"id": 3180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3178,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3074,
																			"src": "11511:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3181,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:17"
																},
																{
																	"expression": {
																		"id": 3184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3182,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3080,
																			"src": "11540:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3185,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3188,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3074,
																	"src": "11583:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3198,
														"nodeType": "IfStatement",
														"src": "11579:64:17",
														"trueBody": {
															"id": 3197,
															"nodeType": "Block",
															"src": "11599:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3193,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3080,
																			"src": "11617:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3196,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3200,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3080,
													"src": "11669:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3078,
												"id": 3201,
												"nodeType": "Return",
												"src": "11662:13:17"
											}
										]
									},
									"documentation": {
										"id": 3072,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:17",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3074,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3203,
												"src": "10713:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:17"
									},
									"returnParameters": {
										"id": 3078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3203,
												"src": "10751:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:17"
									},
									"scope": 3547,
									"src": "10699:983:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3237,
										"nodeType": "Block",
										"src": "11915:168:17",
										"statements": [
											{
												"id": 3236,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:17",
												"statements": [
													{
														"assignments": [
															3215
														],
														"declarations": [
															{
																"constant": false,
																"id": 3215,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3236,
																"src": "11949:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3214,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3219,
														"initialValue": {
															"arguments": [
																{
																	"id": 3217,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3206,
																	"src": "11971:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3216,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3203,
																	3238
																],
																"referencedDeclaration": 3203,
																"src": "11966:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3220,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3215,
																"src": "11998:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3222,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3209,
																						"src": "12025:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2504",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2504",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3221,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3546,
																					"src": "12008:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2504_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3226,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3224,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3225,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3215,
																						"src": "12043:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3227,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3206,
																					"src": "12052:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3233,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3213,
														"id": 3235,
														"nodeType": "Return",
														"src": "11991:75:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3204,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:17",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3206,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3238,
												"src": "11849:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3209,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3238,
												"src": "11864:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2504",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3208,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3207,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2504,
														"src": "11864:8:17"
													},
													"referencedDeclaration": 2504,
													"src": "11864:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2504",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:17"
									},
									"returnParameters": {
										"id": 3213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3238,
												"src": "11906:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:17"
									},
									"scope": 3547,
									"src": "11835:248:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3366,
										"nodeType": "Block",
										"src": "12276:854:17",
										"statements": [
											{
												"assignments": [
													3247
												],
												"declarations": [
													{
														"constant": false,
														"id": 3247,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3366,
														"src": "12286:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3249,
												"initialValue": {
													"hexValue": "30",
													"id": 3248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:17"
											},
											{
												"id": 3363,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3250,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3241,
																"src": "12342:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3266,
														"nodeType": "IfStatement",
														"src": "12338:103:17",
														"trueBody": {
															"id": 3265,
															"nodeType": "Block",
															"src": "12361:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 3259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3255,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3241,
																			"src": "12379:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3260,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:17"
																},
																{
																	"expression": {
																		"id": 3263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3261,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3247,
																			"src": "12414:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3264,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3267,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3241,
																"src": "12458:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3283,
														"nodeType": "IfStatement",
														"src": "12454:103:17",
														"trueBody": {
															"id": 3282,
															"nodeType": "Block",
															"src": "12477:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 3276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3272,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3241,
																			"src": "12495:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3277,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:17"
																},
																{
																	"expression": {
																		"id": 3280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3278,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3247,
																			"src": "12530:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3281,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3284,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3241,
																"src": "12574:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3300,
														"nodeType": "IfStatement",
														"src": "12570:103:17",
														"trueBody": {
															"id": 3299,
															"nodeType": "Block",
															"src": "12593:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 3293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3289,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3241,
																			"src": "12611:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3294,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:17"
																},
																{
																	"expression": {
																		"id": 3297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3295,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3247,
																			"src": "12646:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3298,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3301,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3241,
																"src": "12690:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3317,
														"nodeType": "IfStatement",
														"src": "12686:100:17",
														"trueBody": {
															"id": 3316,
															"nodeType": "Block",
															"src": "12708:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3306,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3241,
																			"src": "12726:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3311,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:17"
																},
																{
																	"expression": {
																		"id": 3314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3312,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3247,
																			"src": "12760:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3315,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3318,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3241,
																"src": "12803:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3334,
														"nodeType": "IfStatement",
														"src": "12799:100:17",
														"trueBody": {
															"id": 3333,
															"nodeType": "Block",
															"src": "12821:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3323,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3241,
																			"src": "12839:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3328,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:17"
																},
																{
																	"expression": {
																		"id": 3331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3329,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3247,
																			"src": "12873:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3332,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3335,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3241,
																"src": "12916:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3351,
														"nodeType": "IfStatement",
														"src": "12912:100:17",
														"trueBody": {
															"id": 3350,
															"nodeType": "Block",
															"src": "12934:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3340,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3241,
																			"src": "12952:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3342,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3345,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:17"
																},
																{
																	"expression": {
																		"id": 3348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3346,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3247,
																			"src": "12986:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3349,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3352,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3241,
																"src": "13029:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3362,
														"nodeType": "IfStatement",
														"src": "13025:66:17",
														"trueBody": {
															"id": 3361,
															"nodeType": "Block",
															"src": "13047:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3357,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3247,
																			"src": "13065:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3360,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3364,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3247,
													"src": "13117:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3245,
												"id": 3365,
												"nodeType": "Return",
												"src": "13110:13:17"
											}
										]
									},
									"documentation": {
										"id": 3239,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:17",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3241,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3367,
												"src": "12229:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:17"
									},
									"returnParameters": {
										"id": 3245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3367,
												"src": "12267:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:17"
									},
									"scope": 3547,
									"src": "12214:916:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3401,
										"nodeType": "Block",
										"src": "13365:170:17",
										"statements": [
											{
												"id": 3400,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:17",
												"statements": [
													{
														"assignments": [
															3379
														],
														"declarations": [
															{
																"constant": false,
																"id": 3379,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3400,
																"src": "13399:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3378,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3383,
														"initialValue": {
															"arguments": [
																{
																	"id": 3381,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3370,
																	"src": "13422:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3380,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3367,
																	3402
																],
																"referencedDeclaration": 3367,
																"src": "13416:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3384,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3379,
																"src": "13449:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3386,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3373,
																						"src": "13476:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2504",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2504",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3385,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3546,
																					"src": "13459:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2504_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3390,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3388,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3389,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3379,
																						"src": "13495:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3391,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3370,
																					"src": "13504:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3397,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3377,
														"id": 3399,
														"nodeType": "Return",
														"src": "13442:76:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3368,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:17",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "13299:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3373,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "13314:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2504",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3371,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2504,
														"src": "13314:8:17"
													},
													"referencedDeclaration": 2504,
													"src": "13314:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2504",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:17"
									},
									"returnParameters": {
										"id": 3377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "13356:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:17"
									},
									"scope": 3547,
									"src": "13284:251:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3488,
										"nodeType": "Block",
										"src": "13855:600:17",
										"statements": [
											{
												"assignments": [
													3411
												],
												"declarations": [
													{
														"constant": false,
														"id": 3411,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3488,
														"src": "13865:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3413,
												"initialValue": {
													"hexValue": "30",
													"id": 3412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:17"
											},
											{
												"id": 3485,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3414,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3405,
																	"src": "13921:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3428,
														"nodeType": "IfStatement",
														"src": "13917:98:17",
														"trueBody": {
															"id": 3427,
															"nodeType": "Block",
															"src": "13939:76:17",
															"statements": [
																{
																	"expression": {
																		"id": 3421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3405,
																			"src": "13957:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3422,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:17"
																},
																{
																	"expression": {
																		"id": 3425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3423,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3411,
																			"src": "13988:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3426,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3429,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3405,
																	"src": "14032:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3443,
														"nodeType": "IfStatement",
														"src": "14028:95:17",
														"trueBody": {
															"id": 3442,
															"nodeType": "Block",
															"src": "14049:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3434,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3405,
																			"src": "14067:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3437,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:17"
																},
																{
																	"expression": {
																		"id": 3440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3438,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3411,
																			"src": "14097:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3441,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3444,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3405,
																	"src": "14140:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3458,
														"nodeType": "IfStatement",
														"src": "14136:95:17",
														"trueBody": {
															"id": 3457,
															"nodeType": "Block",
															"src": "14157:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3449,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3405,
																			"src": "14175:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3452,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:17"
																},
																{
																	"expression": {
																		"id": 3455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3453,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3411,
																			"src": "14205:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3456,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3459,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3405,
																	"src": "14248:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3473,
														"nodeType": "IfStatement",
														"src": "14244:95:17",
														"trueBody": {
															"id": 3472,
															"nodeType": "Block",
															"src": "14265:74:17",
															"statements": [
																{
																	"expression": {
																		"id": 3466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3464,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3405,
																			"src": "14283:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3467,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:17"
																},
																{
																	"expression": {
																		"id": 3470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3468,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3411,
																			"src": "14313:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3471,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3474,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3405,
																	"src": "14356:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3484,
														"nodeType": "IfStatement",
														"src": "14352:64:17",
														"trueBody": {
															"id": 3483,
															"nodeType": "Block",
															"src": "14372:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3479,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3411,
																			"src": "14390:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3482,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3486,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3411,
													"src": "14442:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3409,
												"id": 3487,
												"nodeType": "Return",
												"src": "14435:13:17"
											}
										]
									},
									"documentation": {
										"id": 3403,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:17",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "13808:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:17"
									},
									"returnParameters": {
										"id": 3409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "13846:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:17"
									},
									"scope": 3547,
									"src": "13792:663:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3526,
										"nodeType": "Block",
										"src": "14692:177:17",
										"statements": [
											{
												"id": 3525,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:17",
												"statements": [
													{
														"assignments": [
															3501
														],
														"declarations": [
															{
																"constant": false,
																"id": 3501,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3525,
																"src": "14726:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3500,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3505,
														"initialValue": {
															"arguments": [
																{
																	"id": 3503,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3492,
																	"src": "14750:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3502,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3489,
																	3527
																],
																"referencedDeclaration": 3489,
																"src": "14743:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3506,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3501,
																"src": "14777:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3508,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3495,
																						"src": "14804:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2504",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2504",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3507,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3546,
																					"src": "14787:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2504_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3515,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3510,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3513,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3511,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3501,
																									"src": "14823:6:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3512,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3514,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3516,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3492,
																					"src": "14838:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:17",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3522,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3499,
														"id": 3524,
														"nodeType": "Return",
														"src": "14770:82:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3490,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:17",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3527,
												"src": "14626:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3495,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3527,
												"src": "14641:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2504",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3494,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3493,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2504,
														"src": "14641:8:17"
													},
													"referencedDeclaration": 2504,
													"src": "14641:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2504",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:17"
									},
									"returnParameters": {
										"id": 3499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3527,
												"src": "14683:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:17"
									},
									"scope": 3547,
									"src": "14610:259:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3545,
										"nodeType": "Block",
										"src": "15067:48:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3538,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3531,
																	"src": "15090:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2504",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2504",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3536,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3535,
												"id": 3544,
												"nodeType": "Return",
												"src": "15077:31:17"
											}
										]
									},
									"documentation": {
										"id": 3528,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:17",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3531,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3546,
												"src": "15019:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2504",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3529,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2504,
														"src": "15019:8:17"
													},
													"referencedDeclaration": 2504,
													"src": "15019:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2504",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:17"
									},
									"returnParameters": {
										"id": 3535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3546,
												"src": "15061:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3533,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:17"
									},
									"scope": 3547,
									"src": "14993:122:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3548,
							"src": "203:14914:17",
							"usedErrors": [
								2499
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3652
						]
					},
					"id": 3653,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3549,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3550,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:18",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3652,
							"linearizedBaseContracts": [
								3652
							],
							"name": "SignedMath",
							"nameLocation": "224:10:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3567,
										"nodeType": "Block",
										"src": "376:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3560,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3553,
															"src": "393:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3561,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3555,
															"src": "397:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3564,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3555,
														"src": "405:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:18",
													"trueExpression": {
														"id": 3563,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3553,
														"src": "401:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3559,
												"id": 3566,
												"nodeType": "Return",
												"src": "386:20:18"
											}
										]
									},
									"documentation": {
										"id": 3551,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:18",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3553,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "325:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3552,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3555,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "335:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3554,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:18"
									},
									"returnParameters": {
										"id": 3559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "368:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3557,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:18"
									},
									"scope": 3652,
									"src": "312:101:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3585,
										"nodeType": "Block",
										"src": "555:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3578,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3571,
															"src": "572:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3579,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3573,
															"src": "576:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3582,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3573,
														"src": "584:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:18",
													"trueExpression": {
														"id": 3581,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3571,
														"src": "580:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3577,
												"id": 3584,
												"nodeType": "Return",
												"src": "565:20:18"
											}
										]
									},
									"documentation": {
										"id": 3569,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:18",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3571,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3586,
												"src": "504:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3570,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3573,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3586,
												"src": "514:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3572,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:18"
									},
									"returnParameters": {
										"id": 3577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3586,
												"src": "547:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3575,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:18"
									},
									"scope": 3652,
									"src": "491:101:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3629,
										"nodeType": "Block",
										"src": "797:162:18",
										"statements": [
											{
												"assignments": [
													3597
												],
												"declarations": [
													{
														"constant": false,
														"id": 3597,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:18",
														"nodeType": "VariableDeclaration",
														"scope": 3629,
														"src": "859:8:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3596,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3610,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3598,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3589,
																	"src": "871:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3599,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3591,
																	"src": "875:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3601,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3602,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3589,
																				"src": "882:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3603,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3591,
																				"src": "886:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3605,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3608,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:18"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3611,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3597,
														"src": "911:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3616,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3597,
																						"src": "931:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3614,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:18",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3612,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:18",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3621,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3589,
																				"src": "945:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3622,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3591,
																				"src": "949:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3624,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3626,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3595,
												"id": 3628,
												"nodeType": "Return",
												"src": "904:48:18"
											}
										]
									},
									"documentation": {
										"id": 3587,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:18",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3589,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3630,
												"src": "746:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3588,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3591,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3630,
												"src": "756:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3590,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:18"
									},
									"returnParameters": {
										"id": 3595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3630,
												"src": "789:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3593,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:18"
									},
									"scope": 3652,
									"src": "729:230:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3650,
										"nodeType": "Block",
										"src": "1103:158:18",
										"statements": [
											{
												"id": 3649,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:18",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3640,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3633,
																			"src": "1228:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:18",
																		"subExpression": {
																			"id": 3644,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3633,
																			"src": "1242:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:18",
																	"trueExpression": {
																		"id": 3643,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3633,
																		"src": "1237:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3638,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3637,
														"id": 3648,
														"nodeType": "Return",
														"src": "1213:31:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3631,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:18",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3633,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3651,
												"src": "1061:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3632,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:18"
									},
									"returnParameters": {
										"id": 3637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3651,
												"src": "1094:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:18"
									},
									"scope": 3652,
									"src": "1048:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3653,
							"src": "216:1047:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:18"
				},
				"id": 18
			},
			"contracts/PepoStablecoin.sol": {
				"ast": {
					"absolutePath": "contracts/PepoStablecoin.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							1194
						],
						"ECDSA": [
							2192
						],
						"EIP712": [
							2419
						],
						"ERC20": [
							870
						],
						"ERC20Permit": [
							1102
						],
						"IERC20": [
							948
						],
						"IERC20Errors": [
							112
						],
						"IERC20Metadata": [
							1128
						],
						"IERC20Permit": [
							1164
						],
						"Nonces": [
							1262
						],
						"Ownable": [
							355
						],
						"PepoStablecoin": [
							3834
						]
					},
					"id": 3835,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3654,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 3655,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3835,
							"sourceUnit": 871,
							"src": "58:55:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
							"id": 3656,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3835,
							"sourceUnit": 1103,
							"src": "114:72:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
							"file": "@openzeppelin/contracts/ownership/Ownable.sol",
							"id": 3657,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3835,
							"sourceUnit": 356,
							"src": "187:55:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 3658,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3835,
							"sourceUnit": 46,
							"src": "243:76:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3659,
										"name": "ERC20",
										"nameLocations": [
											"348:5:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 870,
										"src": "348:5:19"
									},
									"id": 3660,
									"nodeType": "InheritanceSpecifier",
									"src": "348:5:19"
								},
								{
									"baseName": {
										"id": 3661,
										"name": "ERC20Permit",
										"nameLocations": [
											"355:11:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1102,
										"src": "355:11:19"
									},
									"id": 3662,
									"nodeType": "InheritanceSpecifier",
									"src": "355:11:19"
								},
								{
									"baseName": {
										"id": 3663,
										"name": "Ownable",
										"nameLocations": [
											"368:7:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 355,
										"src": "368:7:19"
									},
									"id": 3664,
									"nodeType": "InheritanceSpecifier",
									"src": "368:7:19"
								}
							],
							"canonicalName": "PepoStablecoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3834,
							"linearizedBaseContracts": [
								3834,
								355,
								1102,
								1262,
								2419,
								70,
								1164,
								870,
								112,
								1128,
								948,
								1194
							],
							"name": "PepoStablecoin",
							"nameLocation": "330:14:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PepoStablecoin.deptCollateralRatio",
									"id": 3669,
									"members": [
										{
											"constant": false,
											"id": 3666,
											"mutability": "mutable",
											"name": "dept",
											"nameLocation": "423:4:19",
											"nodeType": "VariableDeclaration",
											"scope": 3669,
											"src": "418:9:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3665,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "418:4:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3668,
											"mutability": "mutable",
											"name": "collateral",
											"nameLocation": "442:10:19",
											"nodeType": "VariableDeclaration",
											"scope": 3669,
											"src": "437:15:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3667,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "437:4:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "deptCollateralRatio",
									"nameLocation": "388:19:19",
									"nodeType": "StructDefinition",
									"scope": 3834,
									"src": "381:78:19",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3674,
									"mutability": "mutable",
									"name": "deptCollateralRatios",
									"nameLocation": "504:20:19",
									"nodeType": "VariableDeclaration",
									"scope": 3834,
									"src": "464:60:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deptCollateralRatio_$3669_storage_$",
										"typeString": "mapping(address => struct PepoStablecoin.deptCollateralRatio)"
									},
									"typeName": {
										"id": 3673,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3670,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "472:7:19",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "464:39:19",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deptCollateralRatio_$3669_storage_$",
											"typeString": "mapping(address => struct PepoStablecoin.deptCollateralRatio)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3672,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3671,
												"name": "deptCollateralRatio",
												"nameLocations": [
													"483:19:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3669,
												"src": "483:19:19"
											},
											"referencedDeclaration": 3669,
											"src": "483:19:19",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_deptCollateralRatio_$3669_storage_ptr",
												"typeString": "struct PepoStablecoin.deptCollateralRatio"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3677,
									"mutability": "mutable",
									"name": "ethPriceFeed",
									"nameLocation": "561:12:19",
									"nodeType": "VariableDeclaration",
									"scope": 3834,
									"src": "530:43:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 3676,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3675,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"530:21:19"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "530:21:19"
										},
										"referencedDeclaration": 45,
										"src": "530:21:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "d9d00ed0decba63a0ad16a878de20d30a429554f47b378787a818b7284da17b5",
									"id": 3685,
									"name": "Borrow",
									"nameLocation": "586:6:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3679,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "609:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3685,
												"src": "593:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3681,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "621:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3685,
												"src": "616:11:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3680,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3683,
												"indexed": false,
												"mutability": "mutable",
												"name": "isUSDP",
												"nameLocation": "634:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3685,
												"src": "629:11:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "629:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:49:19"
									},
									"src": "580:62:19"
								},
								{
									"anonymous": false,
									"eventSelector": "319e74030d0614e8ec2bb9d3b1e951d0ea7420b49e63295b7651fd1ad03c0c51",
									"id": 3693,
									"name": "Liquidate",
									"nameLocation": "653:9:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3687,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "679:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3693,
												"src": "663:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3689,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "691:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 3693,
												"src": "686:11:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3688,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "686:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3691,
												"indexed": false,
												"mutability": "mutable",
												"name": "isETH",
												"nameLocation": "704:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3693,
												"src": "699:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "699:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:48:19"
									},
									"src": "647:64:19"
								},
								{
									"body": {
										"id": 3713,
										"nodeType": "Block",
										"src": "806:97:19",
										"statements": [
											{
												"expression": {
													"id": 3711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3707,
														"name": "ethPriceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3677,
														"src": "816:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307835663465433344663963626434333731344645323734306635453336313631353563356238343139",
																"id": 3709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "853:42:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3708,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "831:21:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 3710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "831:65:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "816:80:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 3712,
												"nodeType": "ExpressionStatement",
												"src": "816:80:19"
											}
										]
									},
									"id": 3714,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5065706f20537461626c65636f696e",
													"id": 3696,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "737:17:19",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_192ae97755a81048f81d2323fa7d7e82ee0652be981c586e49db866539b1bfe3",
														"typeString": "literal_string \"Pepo Stablecoin\""
													},
													"value": "Pepo Stablecoin"
												},
												{
													"hexValue": "55534450",
													"id": 3697,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "756:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e6ce7ecb96a43fc15fb4020f93c37885612803dd74366bb6815e4f607ac3ca20",
														"typeString": "literal_string \"USDP\""
													},
													"value": "USDP"
												}
											],
											"id": 3698,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3695,
												"name": "ERC20",
												"nameLocations": [
													"731:5:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 870,
												"src": "731:5:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "731:32:19"
										},
										{
											"arguments": [
												{
													"hexValue": "55534450",
													"id": 3700,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "776:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e6ce7ecb96a43fc15fb4020f93c37885612803dd74366bb6815e4f607ac3ca20",
														"typeString": "literal_string \"USDP\""
													},
													"value": "USDP"
												}
											],
											"id": 3701,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3699,
												"name": "ERC20Permit",
												"nameLocations": [
													"764:11:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1102,
												"src": "764:11:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "764:19:19"
										},
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3703,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "792:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "792:12:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3705,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3702,
												"name": "Ownable",
												"nameLocations": [
													"784:7:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 355,
												"src": "784:7:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "784:21:19"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:2:19"
									},
									"returnParameters": {
										"id": 3706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "806:0:19"
									},
									"scope": 3834,
									"src": "717:186:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3730,
										"nodeType": "Block",
										"src": "959:96:19",
										"statements": [
											{
												"assignments": [
													null,
													3720,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 3720,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "976:5:19",
														"nodeType": "VariableDeclaration",
														"scope": 3730,
														"src": "972:9:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3719,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "972:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 3724,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3721,
															"name": "ethPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3677,
															"src": "990:12:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 3722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1003:15:19",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "990:28:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 3723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "990:30:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "969:51:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3727,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3720,
															"src": "1042:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1037:4:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3725,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1037:4:19",
															"typeDescriptions": {}
														}
													},
													"id": 3728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1037:11:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3718,
												"id": 3729,
												"nodeType": "Return",
												"src": "1030:18:19"
											}
										]
									},
									"functionSelector": "67c9b017",
									"id": 3731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthPrice",
									"nameLocation": "918:11:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "929:2:19"
									},
									"returnParameters": {
										"id": 3718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3731,
												"src": "953:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "953:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:6:19"
									},
									"scope": 3834,
									"src": "909:146:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3780,
										"nodeType": "Block",
										"src": "1103:366:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3737,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3733,
																"src": "1121:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3735",
																"id": 3738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1130:2:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_75_by_1",
																	"typeString": "int_const 75"
																},
																"value": "75"
															},
															"src": "1121:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526174696f206d757374206c657373207468616e20657175616c20373525",
															"id": 3740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1134:32:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d",
																"typeString": "literal_string \"Ratio must less than equal 75%\""
															},
															"value": "Ratio must less than equal 75%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3bfdc7c83fee6abbe6f2f0a1bc4f35afdef7df356b24480c0d3fefa2d89c20d",
																"typeString": "literal_string \"Ratio must less than equal 75%\""
															}
														],
														"id": 3736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1113:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1113:54:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3742,
												"nodeType": "ExpressionStatement",
												"src": "1113:54:19"
											},
											{
												"assignments": [
													3744
												],
												"declarations": [
													{
														"constant": false,
														"id": 3744,
														"mutability": "mutable",
														"name": "collateral",
														"nameLocation": "1183:10:19",
														"nodeType": "VariableDeclaration",
														"scope": 3780,
														"src": "1178:15:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3743,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1178:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3750,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3745,
															"name": "getEthPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3731,
															"src": "1197:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 3746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1197:13:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"expression": {
															"id": 3747,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1213:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1217:5:19",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1213:9:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1197:25:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1178:44:19"
											},
											{
												"assignments": [
													3752
												],
												"declarations": [
													{
														"constant": false,
														"id": 3752,
														"mutability": "mutable",
														"name": "dept",
														"nameLocation": "1237:4:19",
														"nodeType": "VariableDeclaration",
														"scope": 3780,
														"src": "1232:9:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3751,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1232:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3756,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3753,
														"name": "collateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3744,
														"src": "1244:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3754,
														"name": "ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3733,
														"src": "1257:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1244:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1232:30:19"
											},
											{
												"expression": {
													"id": 3765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3757,
															"name": "deptCollateralRatios",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3674,
															"src": "1272:20:19",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deptCollateralRatio_$3669_storage_$",
																"typeString": "mapping(address => struct PepoStablecoin.deptCollateralRatio storage ref)"
															}
														},
														"id": 3760,
														"indexExpression": {
															"expression": {
																"id": 3758,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1293:3:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1297:6:19",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1293:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1272:32:19",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_deptCollateralRatio_$3669_storage",
															"typeString": "struct PepoStablecoin.deptCollateralRatio storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3762,
																"name": "dept",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3752,
																"src": "1340:4:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3763,
																"name": "collateral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3744,
																"src": "1358:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3761,
															"name": "deptCollateralRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3669,
															"src": "1307:19:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_deptCollateralRatio_$3669_storage_ptr_$",
																"typeString": "type(struct PepoStablecoin.deptCollateralRatio storage pointer)"
															}
														},
														"id": 3764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1307:71:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_deptCollateralRatio_$3669_memory_ptr",
															"typeString": "struct PepoStablecoin.deptCollateralRatio memory"
														}
													},
													"src": "1272:106:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_deptCollateralRatio_$3669_storage",
														"typeString": "struct PepoStablecoin.deptCollateralRatio storage ref"
													}
												},
												"id": 3766,
												"nodeType": "ExpressionStatement",
												"src": "1272:106:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3768,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "1395:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1395:12:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3770,
															"name": "dept",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3752,
															"src": "1409:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3767,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "1389:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1389:25:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3772,
												"nodeType": "ExpressionStatement",
												"src": "1389:25:19"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3774,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "1437:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1437:12:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3776,
															"name": "dept",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3752,
															"src": "1451:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1457:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3773,
														"name": "Borrow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3685,
														"src": "1430:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 3778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1430:32:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3779,
												"nodeType": "EmitStatement",
												"src": "1425:37:19"
											}
										]
									},
									"functionSelector": "c5ebeaec",
									"id": 3781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "1070:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3733,
												"mutability": "mutable",
												"name": "ratio",
												"nameLocation": "1082:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3781,
												"src": "1077:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3732,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:12:19"
									},
									"returnParameters": {
										"id": 3735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1103:0:19"
									},
									"scope": 3834,
									"src": "1061:408:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3832,
										"nodeType": "Block",
										"src": "1525:428:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3789,
																				"name": "deptCollateralRatios",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3674,
																				"src": "1543:20:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deptCollateralRatio_$3669_storage_$",
																					"typeString": "mapping(address => struct PepoStablecoin.deptCollateralRatio storage ref)"
																				}
																			},
																			"id": 3791,
																			"indexExpression": {
																				"id": 3790,
																				"name": "addr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3783,
																				"src": "1564:4:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1543:26:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_deptCollateralRatio_$3669_storage",
																				"typeString": "struct PepoStablecoin.deptCollateralRatio storage ref"
																			}
																		},
																		"id": 3792,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1570:4:19",
																		"memberName": "dept",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3666,
																		"src": "1543:31:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 3793,
																						"name": "getEthPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3731,
																						"src": "1578:11:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 3794,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1578:13:19",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 3795,
																							"name": "deptCollateralRatios",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3674,
																							"src": "1594:20:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deptCollateralRatio_$3669_storage_$",
																								"typeString": "mapping(address => struct PepoStablecoin.deptCollateralRatio storage ref)"
																							}
																						},
																						"id": 3797,
																						"indexExpression": {
																							"id": 3796,
																							"name": "addr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3783,
																							"src": "1615:4:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1594:26:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_deptCollateralRatio_$3669_storage",
																							"typeString": "struct PepoStablecoin.deptCollateralRatio storage ref"
																						}
																					},
																					"id": 3798,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1621:10:19",
																					"memberName": "collateral",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3668,
																					"src": "1594:37:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1578:53:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 3800,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1577:55:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1543:89:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 3802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1635:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1543:95:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "3835",
																"id": 3804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1642:2:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "85"
															},
															"src": "1543:101:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63757272656e746c79206465707420746f20636f727265746572616c20726174696f206c657373207468616e20383525",
															"id": 3806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1646:50:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413",
																"typeString": "literal_string \"currently dept to correteral ratio less than 85%\""
															},
															"value": "currently dept to correteral ratio less than 85%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_833dc26bd9e320c2a72aa06f682378d3355f5623bd8b9a7b2ea2ec49f3633413",
																"typeString": "literal_string \"currently dept to correteral ratio less than 85%\""
															}
														],
														"id": 3788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1535:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1535:162:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3808,
												"nodeType": "ExpressionStatement",
												"src": "1535:162:19"
											},
											{
												"assignments": [
													3810
												],
												"declarations": [
													{
														"constant": false,
														"id": 3810,
														"mutability": "mutable",
														"name": "liquidateEthAmount",
														"nameLocation": "1763:18:19",
														"nodeType": "VariableDeclaration",
														"scope": 3832,
														"src": "1758:23:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3809,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1758:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3815,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3811,
															"name": "deptCollateralRatios",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3674,
															"src": "1784:20:19",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deptCollateralRatio_$3669_storage_$",
																"typeString": "mapping(address => struct PepoStablecoin.deptCollateralRatio storage ref)"
															}
														},
														"id": 3813,
														"indexExpression": {
															"id": 3812,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3783,
															"src": "1805:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1784:26:19",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_deptCollateralRatio_$3669_storage",
															"typeString": "struct PepoStablecoin.deptCollateralRatio storage ref"
														}
													},
													"id": 3814,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1811:10:19",
													"memberName": "collateral",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3668,
													"src": "1784:37:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1758:63:19"
											},
											{
												"expression": {
													"id": 3823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3816,
															"name": "deptCollateralRatios",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3674,
															"src": "1831:20:19",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deptCollateralRatio_$3669_storage_$",
																"typeString": "mapping(address => struct PepoStablecoin.deptCollateralRatio storage ref)"
															}
														},
														"id": 3818,
														"indexExpression": {
															"id": 3817,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3783,
															"src": "1852:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1831:26:19",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_deptCollateralRatio_$3669_storage",
															"typeString": "struct PepoStablecoin.deptCollateralRatio storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1880:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 3821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1882:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3819,
															"name": "deptCollateralRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3669,
															"src": "1860:19:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_deptCollateralRatio_$3669_storage_ptr_$",
																"typeString": "type(struct PepoStablecoin.deptCollateralRatio storage pointer)"
															}
														},
														"id": 3822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1860:24:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_deptCollateralRatio_$3669_memory_ptr",
															"typeString": "struct PepoStablecoin.deptCollateralRatio memory"
														}
													},
													"src": "1831:53:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_deptCollateralRatio_$3669_storage",
														"typeString": "struct PepoStablecoin.deptCollateralRatio storage ref"
													}
												},
												"id": 3824,
												"nodeType": "ExpressionStatement",
												"src": "1831:53:19"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3826,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "1907:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:12:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3828,
															"name": "liquidateEthAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3810,
															"src": "1921:18:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1941:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3825,
														"name": "Borrow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3685,
														"src": "1900:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 3830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1900:46:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3831,
												"nodeType": "EmitStatement",
												"src": "1895:51:19"
											}
										]
									},
									"functionSelector": "2f865568",
									"id": 3833,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3786,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3785,
												"name": "onlyOwner",
												"nameLocations": [
													"1515:9:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 266,
												"src": "1515:9:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "1515:9:19"
										}
									],
									"name": "liquidate",
									"nameLocation": "1484:9:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3783,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1502:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 3833,
												"src": "1494:12:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1493:14:19"
									},
									"returnParameters": {
										"id": 3787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1525:0:19"
									},
									"scope": 3834,
									"src": "1475:478:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3835,
							"src": "321:1639:19",
							"usedErrors": [
								82,
								87,
								92,
								101,
								106,
								111,
								221,
								226,
								979,
								986,
								1204,
								1276,
								1278,
								1855,
								1860,
								1865
							],
							"usedEvents": [
								50,
								232,
								882,
								891,
								3685,
								3693
							]
						}
					],
					"src": "32:1929:19"
				},
				"id": 19
			}
		}
	}
}